var COMPODOC_SEARCH_INDEX = {
    "index": {"version":"2.3.8","fields":["title","body"],"fieldVectors":[["title/modules/AppModule.html",[0,0.8,1,3.093]],["body/modules/AppModule.html",[0,1.185,1,6.36,2,1.763,3,1.326,4,1.411,5,1.411,6,1.326,7,1.411,8,1.367,9,3.334,10,3.334,11,4.798,12,0.011,13,5.096,14,5.096,15,5.096,16,5.096,17,4.798,18,4.122,19,5.096,20,4.798,21,4.32,22,1.994,23,1.411,24,1.367,25,0.085,26,0.074,27,0.074,28,3.8,29,1.932,30,2.274,31,3.8,32,0.186,33,0.392,34,2.796,35,2.114,36,6.228,37,3.8,38,1.666,39,3.8,40,1.666,41,2.796,42,3.8,43,3.026,44,3.8,45,3.334,46,2.022,47,3.8,48,3.8,49,3.8,50,3.8,51,3.8,52,3.8,53,3.8,54,3.8,55,3.8,56,3.8,57,3.8,58,1.176,59,3.8,60,3.334,61,5.37,62,5.37,63,3.8,64,3.8,65,3.334,66,3.026,67,3.8,68,0.085,69,0.131,70,0.005,71,0.007,72,0.005]],["title/controllers/AuthController.html",[73,1.78,74,3.093]],["body/controllers/AuthController.html",[12,0.011,25,0.095,26,0.084,27,0.084,30,1.81,32,0.175,33,0.601,38,2.907,40,2.555,68,0.095,69,0.147,70,0.005,71,0.007,72,0.005,73,1.81,74,4.287,75,2.181,76,3.749,77,2.939,78,4.558,79,0.317,80,1.244,81,2.12,82,6.629,83,5.826,84,4.274,85,5.278,86,1.606,87,5.826,88,0.557,89,4.274,90,1.209,91,0.624,92,0.514,93,0.9,94,4.287,95,1.209,96,4.274,97,4.609,98,4.274,99,4.274,100,2.602,101,3.403,102,3.749,103,3.749,104,3.749,105,1.749,106,2.095,107,3.864,108,3.145,109,3.749,110,3.403,111,2.939,112,4.274,113,4.006,114,4.274,115,4.274,116,0.994,117,2.095,118,1.394,119,1.587,120,4.274,121,4.274,122,4.274,123,4.639,124,2.181,125,2.973,126,2.939,127,5.826,128,3.145,129,5.111,130,1.142,131,1.701,132,4.274,133,4.274,134,5.826,135,1.446,136,4.274,137,4.274,138,4.274]],["title/modules/AuthModule.html",[0,0.8,11,2.721]],["body/modules/AuthModule.html",[0,1.287,2,1.964,3,1.549,4,1.649,5,1.649,6,1.549,7,2.51,8,2.151,11,5.443,12,0.011,17,5.034,18,4.325,21,4.533,22,2.22,23,1.649,24,1.598,25,0.099,26,0.087,27,0.087,29,2.432,32,0.182,33,0.458,34,4.975,35,2.47,43,3.536,68,0.099,69,0.153,70,0.006,71,0.008,72,0.006,73,1.881,74,4.975,75,3.051,105,1.818,107,4.533,108,3.268,139,3.896,140,4.441,141,3.896,142,4.441,143,4.441,144,3.536,145,4.144,146,6.76,147,3.054,148,3.268,149,4.441,150,4.441,151,3.536,152,2.723,153,4.441,154,3.536,155,4.441,156,4.441,157,4.441,158,4.441,159,4.441]],["title/injectables/AuthService.html",[107,2.45,160,0.326]],["body/injectables/AuthService.html",[12,0.011,25,0.127,26,0.052,27,0.052,30,1.13,32,0.17,33,0.275,35,1.484,38,2.856,40,1.811,68,0.059,69,0.092,70,0.007,71,0.005,72,0.003,78,2.841,79,0.198,80,0.882,81,2.098,85,4.026,88,0.623,90,1.351,91,0.788,92,0.544,93,1.006,94,3.72,95,1.278,97,3.685,100,2.536,105,1.092,106,1.308,107,2.408,109,2.34,110,2.124,113,1.834,116,0.961,117,1.308,118,1.82,125,3.756,128,1.963,130,1.206,131,1.662,135,2.375,144,2.124,145,4.164,160,0.321,161,0.657,162,2.34,163,4.131,164,4.131,165,4.131,166,4.131,167,5.056,168,1.963,169,3.959,170,6.792,171,4.397,172,3.959,173,2.668,174,4.131,175,1.93,176,3.114,177,2.668,178,4.131,179,2.668,180,1.902,181,4.131,182,2.668,183,4.131,184,3.489,185,2.668,186,4.091,187,2.668,188,2.668,189,3.29,190,3.04,191,2.124,192,1.42,193,1.17,194,1.963,195,2.668,196,2.34,197,2.34,198,2.668,199,2.668,200,2.668,201,4.026,202,2.668,203,3.624,204,2.668,205,4.131,206,2.668,207,2.217,208,2.668,209,2.668,210,2.668,211,2.668,212,2.668,213,4.131,214,2.668,215,2.34,216,2.34,217,2.668,218,5.056,219,3.476,220,2.298,221,4.131,222,3.04,223,4.131,224,3.29,225,2.34,226,2.34,227,2.668,228,2.668,229,2.668,230,2.668,231,2.124,232,2.668,233,2.668]],["title/classes/Bank.html",[69,0.145,234,1.466]],["body/classes/Bank.html",[12,0.011,25,0.102,26,0.09,27,0.09,32,0.153,58,2.127,68,0.102,69,0.158,70,0.006,71,0.008,72,0.006,79,0.341,86,2.02,88,0.701,91,0.785,92,0.693,175,1.637,234,2.132,235,1.42,236,3.6,237,4.023,238,2.007,239,2.325,240,1.734,241,4.744,242,6.027,243,4.989,244,2.164,245,1.948,246,2.48,247,2.674,248,5.36,249,4.587,250,1.891,251,2.325,252,4.587,253,2.551,254,4.587,255,1.942,256,4.587,257,4.023,258,4.023,259,3.652,260,4.587,261,2.007,262,2.882,263,2.882,264,2.501,265,0.708,266,4.023,267,4.587]],["title/classes/BankAccount.html",[69,0.145,268,2.236]],["body/classes/BankAccount.html",[12,0.011,25,0.084,26,0.074,27,0.074,32,0.138,46,4.512,58,2.205,68,0.084,69,0.13,70,0.005,71,0.007,72,0.005,79,0.28,86,2.142,88,0.743,91,0.404,92,0.728,93,0.826,124,1.927,175,2.081,192,2.01,207,3.406,234,1.865,235,1.169,236,3.727,238,1.756,239,2.1,240,1.517,243,3.805,244,1.781,245,1.704,246,2.41,247,2.202,250,2.089,251,2.1,253,2.974,255,1.599,261,1.756,262,2.522,263,2.522,264,2.188,265,0.583,268,2.845,269,2.779,270,5.444,271,5.444,272,3.808,273,6.206,274,6.206,275,3.777,276,3.777,277,3.777,278,3.777,279,1.717,280,3.777,281,3.777,282,3.777,283,5.347,284,3.777,285,1.927,286,1.781,287,1.781,288,2.01,289,2.315,290,2.779,291,2.597]],["title/controllers/BankAccountController.html",[73,1.78,292,3.093]],["body/controllers/BankAccountController.html",[12,0.011,25,0.094,26,0.083,27,0.083,30,1.789,32,0.183,33,0.596,38,2.889,40,2.534,46,3.076,68,0.094,69,0.146,70,0.005,71,0.007,72,0.005,73,1.789,75,2.155,77,2.905,79,0.314,80,1.234,81,1.817,86,1.165,88,0.404,90,0.877,91,0.452,92,0.373,93,0.652,95,0.877,100,2.397,101,4.603,102,3.706,103,3.706,105,1.729,106,2.071,116,0.982,117,2.071,118,1.383,119,1.568,123,4.603,124,2.155,126,4.53,130,0.828,131,1.234,135,1.956,147,2.905,234,2.673,236,2.726,268,3.77,272,2.833,285,2.155,292,4.253,293,3.706,294,4.871,295,5.78,296,4.224,297,5.213,298,4.224,299,4.224,300,3.706,301,4.224,302,4.266,303,3.364,304,4.253,305,3.706,306,3.706,307,3.742,308,3.706,309,3.706,310,2.905,311,3.706,312,3.706,313,4.224,314,3.706,315,4.224,316,3.974,317,3.706,318,3.364,319,4.224,320,3.706,321,3.364,322,5.78]],["title/modules/BankAccountModule.html",[0,0.8,13,2.89]],["body/modules/BankAccountModule.html",[0,1.171,2,1.735,3,1.296,4,1.379,5,1.379,6,1.296,7,2.283,8,2.213,12,0.011,13,5.881,18,4.091,20,4.762,21,4.288,22,1.962,23,1.379,24,1.337,25,0.083,26,0.073,27,0.073,29,1.901,32,0.183,33,0.383,46,2.812,68,0.083,69,0.128,70,0.005,71,0.007,72,0.005,73,1.573,75,2.696,124,2.696,148,2.734,151,2.958,152,2.277,234,2.817,236,1.752,268,2.812,272,2.59,285,2.696,286,2.901,292,4.526,302,5.28,303,4.897,323,3.259,324,3.715,325,3.259,326,3.259,327,5.28,328,5.28,329,4.091,330,3.715,331,1.688,332,0.914,333,3.715,334,3.715,335,1.684,336,3.239,337,2.734,338,1.977,339,3.239,340,2.958]],["title/injectables/BankAccountService.html",[160,0.326,327,2.721]],["body/injectables/BankAccountService.html",[12,0.011,25,0.084,26,0.073,27,0.073,30,1.589,32,0.173,33,0.387,38,3.328,40,2.334,46,3.781,66,2.989,68,0.084,69,0.129,70,0.005,71,0.007,72,0.005,79,0.279,80,1.137,81,1.705,88,0.591,90,1.284,91,0.662,92,0.331,93,0.955,95,1.105,100,1.27,105,1.536,106,1.84,116,1.238,117,1.84,118,1.48,119,1.393,130,0.735,131,1.554,135,2.093,160,0.413,161,0.924,180,1.554,192,2.832,207,2.712,219,2.581,220,2.419,234,2.158,236,3.175,243,2.301,250,1.162,258,3.292,261,1.232,265,0.58,268,3.581,286,1.77,287,2.511,288,1.997,294,4.253,316,2.581,318,2.989,321,2.989,327,3.446,332,0.924,341,2.762,342,5.323,343,4.669,344,3.753,345,2.499,346,4.425,347,3.292,348,5.323,349,5.323,350,3.753,351,2.989,352,5.323,353,3.753,354,3.292,355,3.292,356,1.438,357,2.762,358,3.753,359,3.753,360,3.753,361,3.753,362,3.753,363,3.292,364,3.753,365,6.185,366,2.087,367,5.323,368,3.292,369,3.753,370,3.753,371,3.753,372,3.753,373,3.753,374,3.753,375,3.753,376,3.753,377,3.753,378,3.753,379,2.581,380,2.581,381,2.762,382,3.753,383,3.753,384,3.753,385,3.753,386,3.753,387,3.753,388,3.446]],["title/modules/BankSeederModule.html",[0,0.8,389,2.89]],["body/modules/BankSeederModule.html",[0,1.417,2,1.78,3,1.891,4,2.013,5,2.013,6,1.891,7,2.763,8,2.678,12,0.011,22,2.528,23,2.013,24,1.951,25,0.121,26,0.106,27,0.106,29,1.951,32,0.174,33,0.559,45,4.756,68,0.121,69,0.187,70,0.007,71,0.009,72,0.007,234,1.891,331,2.464,332,1.334,389,5.728,390,4.756,391,4.756,392,4.756,393,5.603,394,5.422,395,4.317,396,5.422,397,5.422]],["title/injectables/BankSeederService.html",[160,0.326,393,2.721]],["body/injectables/BankSeederService.html",[12,0.011,25,0.118,26,0.104,27,0.104,32,0.178,33,0.548,68,0.118,69,0.183,70,0.007,71,0.008,72,0.007,79,0.394,80,1.435,88,0.643,90,1.102,91,0.569,92,0.469,93,0.82,95,1.102,116,1.563,118,1.27,119,1.971,130,1.041,160,0.522,161,1.307,180,1.962,234,2.344,236,2.505,265,0.82,332,1.307,345,2.877,356,2.035,393,4.351,395,4.229,398,4.658,399,7.749,400,5.311,401,5.311,402,6.721,403,5.311,404,2.954,405,5.311,406,5.311,407,5.311,408,5.311]],["title/classes/ClientBankAccount.html",[69,0.145,272,2.06]],["body/classes/ClientBankAccount.html",[12,0.011,25,0.084,26,0.073,27,0.073,32,0.158,46,1.997,58,1.648,68,0.084,69,0.129,70,0.005,71,0.007,72,0.005,79,0.279,86,1.959,88,0.68,91,0.57,92,0.696,192,1.997,193,1.646,234,2.913,235,1.162,236,3.481,238,1.748,239,2.093,240,1.51,244,2.511,245,2.145,246,2.625,250,1.648,251,2.093,255,2.254,261,1.748,262,2.917,263,2.917,264,2.532,265,0.58,268,4.127,269,2.762,272,2.609,285,4.169,286,2.511,335,1.196,336,2.301,338,1.997,339,4.754,381,2.762,409,6.185,410,3.525,411,3.525,412,2.961,413,5.323,414,3.753,415,3.753,416,3.299,417,3.753,418,3.753,419,3.66,420,3.753,421,1.997,422,2.989,423,2.43,424,2.301,425,3.292]],["title/injectables/ClientBankAccountService.html",[160,0.326,302,2.721]],["body/injectables/ClientBankAccountService.html",[12,0.011,25,0.089,26,0.078,27,0.078,32,0.179,33,0.414,68,0.089,69,0.138,70,0.005,71,0.007,72,0.005,79,0.298,80,1.191,81,1.767,88,0.533,90,1.157,91,0.597,92,0.354,93,0.861,95,0.832,116,1.297,118,1.742,124,2.046,125,2.046,130,0.786,131,2.127,135,2.169,160,0.433,161,0.987,169,4.508,180,1.628,192,2.134,193,1.758,194,2.951,234,2.829,236,3.024,265,0.619,268,2.967,272,3.57,285,3.847,286,1.891,294,4.765,295,4.891,302,3.61,303,4.44,327,4.881,328,5.007,332,0.987,335,1.278,336,2.458,341,2.951,345,2.572,356,1.537,363,3.517,411,2.534,426,4.01,427,6.411,428,5.007,429,4.01,430,5.576,431,4.01,432,2.23,433,3.193,434,3.517,435,4.01,436,4.01,437,4.01,438,3.517,439,4.01,440,4.01,441,4.01,442,3.517,443,4.01,444,4.01]],["title/classes/Country.html",[69,0.145,241,2.45]],["body/classes/Country.html",[12,0.011,25,0.104,26,0.091,27,0.091,32,0.155,58,2.441,68,0.104,69,0.161,70,0.006,71,0.008,72,0.006,79,0.347,86,2.035,88,0.706,91,0.742,92,0.696,175,1.657,192,2.485,207,3.582,234,2.884,235,1.445,238,2.03,239,2.346,240,1.754,241,3.604,245,1.971,246,2.497,250,1.914,251,2.346,253,2.295,255,2.618,261,2.03,264,2.837,265,0.721,287,2.202,288,2.485,291,3.211,395,3.718,445,4.096,446,6.081,447,4.669,448,4.669,449,3.436,450,4.669,451,4.669,452,3.436,453,4.096]],["title/modules/CountrySeederModule.html",[0,0.8,454,2.89]],["body/modules/CountrySeederModule.html",[0,1.419,2,1.786,3,1.897,4,2.019,5,2.019,6,1.897,7,2.767,8,2.682,12,0.011,22,2.532,23,2.019,24,1.956,25,0.121,26,0.106,27,0.106,29,1.956,32,0.174,33,0.561,68,0.121,69,0.187,70,0.007,71,0.009,72,0.007,241,3.17,331,2.471,332,1.338,454,5.732,455,4.77,456,4.77,457,4.77,458,5.605,459,5.438,460,5.438,461,4.77,462,5.438]],["title/injectables/CountrySeederService.html",[160,0.326,458,2.721]],["body/injectables/CountrySeederService.html",[12,0.011,25,0.119,26,0.104,27,0.104,32,0.178,33,0.55,68,0.119,69,0.184,70,0.007,71,0.008,72,0.007,79,0.395,80,1.438,88,0.644,90,1.105,91,0.57,92,0.47,93,0.823,95,1.105,116,1.566,118,1.274,119,1.977,130,1.044,160,0.523,161,1.311,180,1.966,241,3.105,265,0.823,332,1.311,345,2.88,356,2.041,404,2.962,458,4.359,461,4.672,463,4.672,464,7.757,465,5.326,466,5.326,467,6.733,468,5.326,469,4.241,470,5.326,471,5.326,472,5.326,473,5.326]],["title/classes/CreateBankAccountDTO.html",[69,0.145,297,3.093]],["body/classes/CreateBankAccountDTO.html",[12,0.011,25,0.109,26,0.095,27,0.095,32,0.142,46,4.246,68,0.109,69,0.219,70,0.006,71,0.008,72,0.006,79,0.361,86,2.145,88,0.744,92,0.728,175,2.01,192,2.591,207,3.499,235,1.507,236,3.764,240,1.803,243,4.338,250,2.322,270,6.207,271,6.207,287,2.297,288,2.591,297,4.677,474,4.271,475,7.312,476,4.87,477,4.87,478,4.87,479,4.87,480,6.207,481,4.87,482,4.87,483,4.87,484,4.87,485,4.271,486,3.877]],["title/classes/CreateUserDTO.html",[69,0.145,97,2.721]],["body/classes/CreateUserDTO.html",[12,0.011,25,0.08,26,0.071,27,0.071,32,0.08,68,0.08,69,0.178,70,0.005,71,0.006,72,0.005,79,0.268,86,2.256,88,0.782,92,0.722,93,1.312,97,3.348,125,3.086,175,2.304,184,3.708,186,3.526,235,1.116,240,1.467,475,5.796,480,7.114,485,3.162,486,2.87,487,7.231,488,3.162,489,4.816,490,4.816,491,5.305,492,4.45,493,5.305,494,4.45,495,4.816,496,4.816,497,4.45,498,4.816,499,7.674,500,3.604,501,2.439,502,3.604,503,3.604,504,3.604,505,3.604,506,5.172,507,3.604,508,3.604,509,3.604,510,3.604,511,3.604,512,3.604,513,3.604,514,3.604,515,3.604,516,3.604,517,5.172,518,8.11,519,3.604]],["title/modules/DatabaseModule.html",[0,0.8,14,2.89]],["body/modules/DatabaseModule.html",[0,1.415,2,2.056,8,2.253,12,0.011,14,5.112,25,0.14,26,0.122,27,0.122,29,2.253,32,0.166,33,0.646,68,0.14,69,0.216,70,0.008,71,0.009,72,0.008,520,6.262,521,6.315,522,6.262]],["title/controllers/ExampleController.html",[73,1.78,523,3.093]],["body/controllers/ExampleController.html",[12,0.011,24,2.647,25,0.075,26,0.066,27,0.066,30,1.432,32,0.171,33,0.349,35,1.882,38,2.558,40,2.166,68,0.075,69,0.117,70,0.004,71,0.006,72,0.004,73,2.092,75,1.726,77,2.326,79,0.251,80,1.055,86,1.769,88,0.613,90,1.331,91,0.687,93,0.991,95,1.331,100,2.78,105,1.385,106,1.658,116,0.787,117,1.658,118,0.809,119,1.256,123,2.694,124,1.726,126,4.012,130,1.257,145,2.074,147,2.326,176,2.022,201,2.694,222,2.489,300,2.968,304,2.489,305,2.968,306,2.968,307,3.777,308,2.968,309,2.968,310,2.326,311,2.968,312,2.968,314,5.628,318,5.109,379,2.326,523,3.635,524,2.968,525,7.542,526,4.94,527,4.94,528,4.94,529,4.94,530,3.383,531,3.383,532,3.383,533,3.383,534,3.383,535,3.383,536,3.383,537,3.383,538,3.383,539,3.383,540,3.383,541,3.383,542,2.968,543,2.694,544,3.383,545,3.383,546,3.383,547,3.383,548,7.358,549,8.156,550,6.454,551,7.358,552,7.358,553,3.383,554,3.383,555,2.694,556,3.383,557,5.835,558,3.383,559,3.383,560,3.383,561,3.383,562,5.835,563,2.489,564,2.968,565,3.383,566,3.383,567,3.383,568,3.383,569,3.383,570,3.383,571,3.383,572,2.694]],["title/modules/ExampleModule.html",[0,0.8,15,2.89]],["body/modules/ExampleModule.html",[0,1.413,2,2.227,3,1.88,4,2.001,5,2.001,6,1.88,7,2.001,8,1.939,11,5.307,12,0.011,15,5.786,21,4.778,22,2.518,23,2.001,24,1.939,25,0.12,26,0.105,27,0.105,29,2.44,32,0.174,33,0.556,68,0.12,69,0.186,70,0.007,71,0.009,72,0.007,73,2.282,75,3.461,151,4.291,523,5.462,573,5.389,574,5.389,575,5.389,576,5.389,577,5.389]],["title/injectables/JwtStrategy.html",[160,0.326,578,3.347]],["body/injectables/JwtStrategy.html",[12,0.011,25,0.098,26,0.086,27,0.086,30,1.853,32,0.176,33,0.452,35,2.434,38,3.395,40,2.596,68,0.098,69,0.151,70,0.005,71,0.007,72,0.005,78,3.01,79,0.325,80,1.264,81,1.85,88,0.566,90,1.229,91,0.634,92,0.523,93,0.915,95,0.908,100,2.271,105,1.791,106,2.146,116,1.377,117,2.146,118,1.605,125,2.233,130,0.858,131,1.278,135,1.481,145,4.853,147,3.01,160,0.46,161,1.077,168,3.221,172,4.615,176,1.791,189,3.485,196,3.839,219,3.01,220,1.989,222,3.221,225,3.839,226,5.886,238,1.437,343,5.194,380,3.01,416,2.146,578,4.715,579,3.839,580,4.377,581,5.921,582,4.377,583,4.377,584,4.377,585,4.377,586,3.839,587,3.839,588,4.377,589,4.377,590,4.377,591,4.377,592,4.377,593,4.377,594,4.377,595,4.377,596,5.921,597,5.921,598,4.377,599,4.377,600,4.377,601,4.377,602,4.377]],["title/classes/Language.html",[69,0.145,603,2.144]],["body/classes/Language.html",[12,0.011,25,0.115,26,0.101,27,0.101,32,0.147,58,2.042,68,0.115,69,0.178,70,0.006,71,0.008,72,0.006,79,0.383,86,2.006,88,0.696,91,0.779,92,0.677,100,1.746,175,1.768,207,3.658,235,1.597,238,2.167,239,2.462,240,1.872,245,1.645,246,2.233,250,2.042,251,2.462,253,2.701,255,2.185,261,2.167,264,2.701,265,0.797,287,2.434,288,2.746,291,3.548,603,3.367,604,4.526,605,6.381,606,5.16,607,5.16,608,5.16]],["title/controllers/LanguageController.html",[73,1.78,609,3.093]],["body/controllers/LanguageController.html",[12,0.011,25,0.125,26,0.11,27,0.11,32,0.155,33,0.578,68,0.125,69,0.193,70,0.007,71,0.009,72,0.007,73,2.374,75,2.86,77,3.854,79,0.416,80,1.484,81,2.083,86,1.545,88,0.536,90,1.163,91,0.6,93,0.866,95,1.163,119,2.081,130,1.098,131,1.637,603,2.86,609,5.115,610,4.917,611,5.536,612,4.463,613,6.952,614,5.605,615,5.536,616,4.917,617,4.893,618,4.463,619,5.605,620,3.854,621,5.605,622,5.605]],["title/modules/LanguageModule.html",[0,0.8,16,2.89]],["body/modules/LanguageModule.html",[0,1.396,2,1.724,3,1.831,4,1.949,5,1.949,6,1.831,7,2.722,8,1.889,12,0.011,16,5.756,22,2.477,23,1.949,24,1.889,25,0.117,26,0.103,27,0.103,29,1.889,32,0.178,33,0.542,34,4.909,35,2.92,68,0.117,69,0.181,70,0.007,71,0.008,72,0.007,73,2.223,75,3.404,152,3.218,609,5.396,617,5.271,618,4.18,623,4.605,624,4.605,625,5.271,626,5.249,627,6.671,628,5.249,629,4.605]],["title/modules/LanguageSeederModule.html",[0,0.8,630,2.89]],["body/modules/LanguageSeederModule.html",[0,1.419,2,1.786,3,1.897,4,2.019,5,2.019,6,1.897,7,2.767,8,2.682,12,0.011,22,2.532,23,2.019,24,1.956,25,0.121,26,0.106,27,0.106,29,1.956,32,0.174,33,0.561,68,0.121,69,0.187,70,0.007,71,0.009,72,0.007,331,2.471,332,1.338,603,2.775,618,4.33,630,5.732,631,4.77,632,4.77,633,4.77,634,5.605,635,5.438,636,4.77,637,5.438]],["title/injectables/LanguageSeederService.html",[160,0.326,634,2.721]],["body/injectables/LanguageSeederService.html",[12,0.011,25,0.119,26,0.104,27,0.104,32,0.178,33,0.55,68,0.119,69,0.184,70,0.007,71,0.008,72,0.007,79,0.395,80,1.438,88,0.644,90,1.105,91,0.57,92,0.47,93,0.823,95,1.105,116,1.566,118,1.274,119,1.977,130,1.044,160,0.523,161,1.311,180,1.966,265,0.823,332,1.311,345,2.88,356,2.041,404,2.962,603,2.718,634,4.359,636,4.672,638,4.672,639,7.757,640,4.672,641,5.326,642,5.906,643,5.326,644,4.241,645,5.326,646,4.672,647,5.326,648,5.326]],["title/injectables/LanguageService.html",[160,0.326,617,2.721]],["body/injectables/LanguageService.html",[12,0.011,25,0.122,26,0.107,27,0.107,32,0.153,33,0.566,68,0.122,69,0.189,70,0.007,71,0.009,72,0.007,79,0.407,80,1.465,81,2.063,88,0.656,90,1.424,91,0.735,92,0.606,93,1.06,95,1.139,116,1.276,130,1.075,131,1.602,160,0.533,161,1.35,175,2.005,611,5.462,612,5.462,615,4.369,617,4.441,620,3.773,625,5.331,629,4.813,649,4.813,650,5.487,651,5.487,652,5.487,653,5.487]],["title/modules/MailsModule.html",[0,0.8,17,2.721]],["body/modules/MailsModule.html",[0,1.377,2,1.675,3,1.78,4,1.894,5,1.894,6,1.78,7,2.686,8,2.603,12,0.011,17,5.321,22,2.432,23,1.894,24,1.836,25,0.114,26,0.1,27,0.1,29,1.836,32,0.17,33,0.527,35,2.838,68,0.114,69,0.176,70,0.006,71,0.008,72,0.006,81,1.407,105,2.088,130,1,145,4.68,154,4.063,171,5.556,654,4.475,655,4.475,656,4.475,657,5.102,658,5.102,659,4.82,660,5.102,661,5.102,662,5.102,663,5.102,664,5.102,665,5.102,666,5.102]],["title/injectables/MailsService.html",[160,0.326,171,2.721]],["body/injectables/MailsService.html",[12,0.011,25,0.1,26,0.088,27,0.088,30,1.899,32,0.162,33,0.463,38,3.493,40,2.639,68,0.1,69,0.155,70,0.006,71,0.008,72,0.006,79,0.333,80,1.285,81,1.873,88,0.576,90,1.249,91,0.645,92,0.396,93,0.93,95,0.931,105,1.836,106,2.198,116,1.4,117,2.198,118,1.625,119,2.235,125,3.865,131,1.31,135,1.518,160,0.468,161,1.104,171,3.897,555,4.793,659,4.999,667,3.934,668,6.019,669,6.019,670,4.485,671,7.262,672,4.485,673,6.019,674,6.019,675,7.966,676,7.262,677,4.993,678,4.485,679,6.019,680,3.934,681,3.934,682,4.485,683,4.485,684,4.485,685,4.485,686,4.485,687,4.485,688,4.485,689,4.485,690,6.019,691,4.485,692,4.485,693,4.485,694,4.485,695,4.485,696,4.485,697,4.485]],["title/modules/ManagementModule.html",[0,0.8,18,2.338]],["body/modules/ManagementModule.html",[0,1.192,2,1.777,3,1.34,4,1.426,5,1.426,6,1.34,7,2.325,8,2.253,12,0.011,18,4.744,22,2.008,23,1.426,24,1.382,25,0.086,26,0.075,27,0.075,29,1.382,32,0.183,33,0.396,68,0.086,69,0.132,70,0.005,71,0.007,72,0.005,152,2.354,176,2.214,329,4.563,331,1.746,332,0.945,335,1.725,338,2.044,340,3.058,698,3.369,699,3.369,700,3.369,701,5.312,702,5.312,703,5.312,704,5.312,705,3.841,706,4.746,707,2.76,708,4.308,709,4.746,710,3.154,711,3.369,712,4.308,713,3.618,714,2.879,715,3.369,716,3.369,717,3.841,718,3.841,719,2.552,720,2.372,721,2.879,722,2.641,723,2.652,724,3.369]],["title/classes/PlatformInterest.html",[69,0.145,719,1.982]],["body/classes/PlatformInterest.html",[12,0.011,25,0.076,26,0.067,27,0.067,32,0.13,58,2.455,68,0.076,69,0.117,70,0.004,71,0.006,72,0.004,79,0.253,86,2.124,88,0.737,91,0.689,92,0.68,175,1.329,235,1.053,238,1.629,239,1.981,240,1.407,244,1.605,245,2.05,246,2.684,247,1.983,250,2.21,251,1.981,253,2.539,255,2.1,261,1.629,262,2.339,263,2.339,264,2.396,265,0.525,279,1.546,501,3.034,707,3.994,719,2.339,720,1.492,725,5.382,726,2.503,727,4.307,728,2.987,729,5.134,730,3.255,731,4.307,732,4.201,733,4.411,734,6.433,735,4.733,736,4.733,737,4.423,738,4.733,739,4.733,740,2.984,741,2.984,742,2.984,743,2.339,744,2.984,745,2.984,746,2.709,747,3.153,748,4.025,749,4.351,750,3.402,751,3.402,752,3.402,753,2.984,754,2.709,755,1.892,756,2.503,757,2.984,758,2.503,759,3.402]],["title/modules/PlatformInterestSeederModule.html",[0,0.8,760,2.89]],["body/modules/PlatformInterestSeederModule.html",[0,1.415,2,1.775,3,1.886,4,2.007,5,2.007,6,1.886,7,2.759,8,2.674,12,0.011,22,2.523,23,2.007,24,1.945,25,0.12,26,0.106,27,0.106,29,1.945,32,0.174,33,0.558,68,0.12,69,0.186,70,0.007,71,0.009,72,0.007,331,2.457,332,1.33,707,2.758,719,2.55,720,2.37,760,5.725,761,4.741,762,4.741,763,4.741,764,5.6,765,5.405,766,5.405,767,4.741,768,5.405]],["title/injectables/PlatformInterestSeederService.html",[160,0.326,764,2.721]],["body/injectables/PlatformInterestSeederService.html",[12,0.011,25,0.118,26,0.103,27,0.103,32,0.178,33,0.545,68,0.118,69,0.182,70,0.007,71,0.008,72,0.007,79,0.392,80,1.43,88,0.64,90,1.096,91,0.565,92,0.466,93,0.816,95,1.096,116,1.557,118,1.263,119,1.96,130,1.034,160,0.52,161,1.299,180,1.955,265,0.816,332,1.299,345,2.871,356,2.024,404,2.936,707,2.694,719,2.49,720,2.315,764,4.335,767,4.631,769,4.631,770,7.733,771,4.631,772,5.28,773,5.873,774,5.28,775,4.204,776,5.28,777,4.631,778,5.28,779,5.28]],["title/injectables/PlatformInterestService.html",[160,0.326,701,2.721]],["body/injectables/PlatformInterestService.html",[12,0.011,25,0.111,26,0.097,27,0.097,32,0.175,33,0.514,68,0.111,69,0.172,70,0.006,71,0.008,72,0.006,79,0.369,80,1.377,81,1.971,88,0.616,90,1.338,91,0.839,92,0.569,93,0.996,95,1.033,116,1.499,118,1.19,130,0.975,131,1.453,160,0.501,161,1.225,180,1.882,265,0.769,332,1.225,345,2.808,356,1.907,366,2.768,701,4.174,706,5.655,707,3.648,719,3.041,720,2.182,725,4.917,728,2.539,771,4.365,773,5.655,777,4.365,780,3.662,781,7.151,782,4.365,783,4.976,784,7.564,785,4.365,786,3.962,787,4.976]],["title/injectables/PoeditorService.html",[160,0.326,625,2.721]],["body/injectables/PoeditorService.html",[12,0.011,25,0.106,26,0.093,27,0.093,32,0.156,33,0.489,35,2.638,68,0.106,69,0.164,70,0.008,71,0.008,72,0.006,79,0.352,80,1.334,81,1.926,88,0.597,90,1.296,91,0.669,92,0.551,93,0.965,95,0.984,116,1.453,118,1.494,130,0.929,131,1.385,135,2.114,145,4.857,160,0.485,161,1.167,175,1.872,220,2.155,611,4.974,612,4.974,615,4.974,625,4.044,677,4.295,788,4.16,789,4.742,790,8.077,791,4.742,792,4.742,793,6.247,794,4.16,795,4.742,796,4.742,797,6.247,798,4.742,799,4.742,800,4.742,801,4.742,802,4.742,803,4.742,804,4.742,805,4.742,806,6.247,807,4.742,808,4.742,809,4.742,810,4.742,811,4.742]],["title/classes/PointsConversion.html",[69,0.145,721,2.236]],["body/classes/PointsConversion.html",[12,0.011,25,0.099,26,0.087,27,0.087,32,0.134,58,2.241,68,0.099,69,0.154,70,0.006,71,0.008,72,0.006,79,0.331,86,2.083,88,0.722,92,0.687,235,1.378,238,1.967,239,2.291,240,1.699,245,1.909,246,2.291,250,2.241,251,2.291,253,2.513,255,1.885,261,1.967,264,2.451,265,0.688,279,2.023,410,3.674,422,3.545,424,2.729,501,3.415,710,4.536,721,3.187,728,3.454,730,3.765,735,4.407,736,4.407,737,4.118,738,4.407,743,3.061,747,2.182,756,3.276,812,6.196,813,3.905,814,6.769,815,5.937,816,4.452,817,4.452,818,4.452,819,4.769,820,4.452,821,4.452]],["title/modules/PointsConversionSeederModule.html",[0,0.8,822,2.89]],["body/modules/PointsConversionSeederModule.html",[0,1.415,2,1.775,3,1.886,4,2.007,5,2.007,6,1.886,7,2.759,8,2.674,12,0.011,22,2.523,23,2.007,24,1.945,25,0.12,26,0.106,27,0.106,29,1.945,32,0.174,33,0.558,68,0.12,69,0.186,70,0.007,71,0.009,72,0.007,331,2.457,332,1.33,710,3.151,721,2.876,722,3.717,822,5.725,823,4.741,824,4.741,825,4.741,826,5.6,827,5.405,828,5.405,829,4.741,830,5.405]],["title/injectables/PointsConversionSeederService.html",[160,0.326,826,2.721]],["body/injectables/PointsConversionSeederService.html",[12,0.011,25,0.118,26,0.103,27,0.103,32,0.178,33,0.545,68,0.118,69,0.182,70,0.007,71,0.008,72,0.007,79,0.392,80,1.43,88,0.64,90,1.096,91,0.565,92,0.466,93,0.816,95,1.096,116,1.557,118,1.263,119,1.96,130,1.034,160,0.52,161,1.299,180,1.955,265,0.816,332,1.299,345,2.871,356,2.024,404,2.936,710,3.078,721,2.809,722,3.63,826,4.335,829,4.631,831,4.631,832,7.733,833,4.631,834,5.28,835,5.873,836,5.28,837,4.204,838,5.28,839,4.631,840,5.28,841,5.28]],["title/injectables/PointsConversionService.html",[160,0.326,702,2.721]],["body/injectables/PointsConversionService.html",[12,0.011,25,0.117,26,0.103,27,0.103,32,0.172,33,0.542,68,0.117,69,0.181,70,0.007,71,0.008,72,0.007,79,0.39,80,1.424,81,2.022,88,0.638,90,1.089,91,0.562,92,0.463,93,0.811,95,1.089,116,1.551,118,1.256,130,1.028,131,1.533,160,0.518,161,1.292,180,1.948,265,0.811,332,1.292,345,2.865,356,2.012,366,2.92,702,4.319,709,4.605,710,4.275,721,2.793,722,3.609,728,2.678,812,5.839,833,4.605,835,5.852,839,4.605,842,4.605,843,7.716,844,5.249,845,5.249,846,5.249]],["title/classes/Promotion.html",[69,0.145,847,2.89]],["body/classes/Promotion.html",[12,0.011,25,0.083,26,0.073,27,0.073,32,0.118,58,2.475,68,0.083,69,0.129,70,0.005,71,0.007,72,0.005,79,0.278,86,2.205,88,0.765,91,0.662,92,0.714,175,2.077,201,4.92,235,1.159,238,1.745,239,2.091,240,1.508,245,1.694,246,2.623,250,2.283,251,2.091,253,2.968,255,1.586,261,1.745,264,2.175,265,0.579,279,2.416,501,3.172,720,1.642,727,4.546,728,3.152,730,3.436,731,4.546,733,4.311,735,4.948,736,4.948,737,3.655,738,4.948,739,4.948,743,2.575,747,1.836,754,2.982,755,2.083,756,2.756,758,2.756,847,3.655,848,3.286,849,3.152,850,6.178,851,6.178,852,3.746,853,3.746,854,3.746,855,3.746,856,3.746,857,3.746,858,3.746,859,4.662,860,3.746,861,3.746,862,3.746]],["title/interfaces/Response.html",[863,2.721,864,3.093]],["body/interfaces/Response.html",[12,0.011,25,0.11,26,0.096,27,0.096,32,0.168,33,0.508,68,0.143,69,0.17,70,0.006,71,0.008,72,0.006,79,0.365,81,1.357,92,0.435,105,2.015,107,4.146,108,3.622,111,3.385,113,4.401,118,1.177,128,3.622,130,0.964,131,1.869,135,2.407,160,0.497,180,1.437,184,4.361,186,3.731,190,4.71,231,3.919,240,1.816,245,1.569,677,5.179,863,3.187,864,4.71,865,3.622,866,3.919,867,3.919,868,6.24,869,5.615,870,4.71,871,5.615,872,4.318,873,3.919,874,3.919,875,4.318,876,4.318,877,3.919,878,4.318,879,3.919,880,3.919,881,4.318,882,6.24,883,4.318,884,4.318,885,4.318,886,4.318]],["title/classes/Role.html",[69,0.145,176,1.72]],["body/classes/Role.html",[12,0.011,25,0.113,26,0.099,27,0.099,32,0.146,58,2.358,68,0.113,69,0.175,70,0.006,71,0.008,72,0.006,79,0.377,86,1.99,88,0.69,91,0.773,92,0.673,93,1.008,175,1.749,176,2.672,192,2.7,235,1.57,238,2.143,239,2.442,240,1.852,245,1.617,246,2.209,250,2.02,251,2.442,253,2.423,255,2.148,261,2.143,264,2.672,265,0.784,449,3.733,452,3.733,887,4.45,888,6.33,889,5.097,890,5.073,891,5.073,892,5.073,893,2.957,894,3.488,895,4.04]],["title/modules/RoleSeederModule.html",[0,0.8,896,2.89]],["body/modules/RoleSeederModule.html",[0,1.419,2,1.786,3,1.897,4,2.019,5,2.019,6,1.897,7,2.767,8,2.682,12,0.011,22,2.532,23,2.019,24,1.956,25,0.121,26,0.106,27,0.106,29,1.956,32,0.174,33,0.561,68,0.121,69,0.187,70,0.007,71,0.009,72,0.007,176,2.226,331,2.471,332,1.338,896,5.732,897,4.77,898,4.77,899,4.77,900,5.605,901,5.438,902,4.33,903,4.77,904,5.438]],["title/injectables/RoleService.html",[160,0.326,703,2.721]],["body/injectables/RoleService.html",[12,0.011,25,0.115,26,0.101,27,0.101,32,0.176,33,0.531,68,0.115,69,0.177,70,0.006,71,0.008,72,0.006,79,0.382,80,1.406,81,2.003,88,0.63,90,1.367,91,0.82,92,0.581,93,1.017,95,1.068,116,1.532,118,1.231,130,1.008,131,1.502,160,0.512,161,1.266,176,2.696,180,1.923,265,0.795,332,1.266,345,2.843,356,1.972,703,4.264,894,3.538,905,4.513,906,6.587,907,4.513,908,5.145,909,5.778,910,6.587,911,7.659,912,5.145,913,5.145,914,4.513,915,5.145]],["title/guards/RolesGuard.html",[310,2.89,916,3.347]],["body/guards/RolesGuard.html",[12,0.011,25,0.103,26,0.09,27,0.09,30,1.957,32,0.164,33,0.477,38,3.449,40,2.693,58,1.901,68,0.103,69,0.159,70,0.006,71,0.008,72,0.006,78,3.178,79,0.343,80,1.311,88,0.587,90,1.274,91,0.658,92,0.542,93,0.949,95,0.959,100,2.334,105,1.892,106,2.266,116,1.428,117,2.266,118,1.469,126,3.178,130,1.203,135,2.334,160,0.477,168,3.401,189,3.68,219,3.178,220,2.101,222,3.401,307,2.992,310,4.223,354,5.387,388,2.992,542,4.054,870,5.408,874,3.68,877,3.68,880,3.68,917,4.622,918,4.054,919,7.35,920,8.026,921,4.622,922,6.141,923,4.622,924,4.054,925,4.622,926,4.622,927,4.622,928,4.622,929,4.622,930,4.622,931,6.141,932,6.141,933,4.622]],["title/injectables/RolesSeederService.html",[160,0.326,900,2.721]],["body/injectables/RolesSeederService.html",[12,0.011,25,0.119,26,0.104,27,0.104,32,0.178,33,0.55,68,0.119,69,0.184,70,0.007,71,0.008,72,0.007,79,0.395,80,1.438,88,0.644,90,1.105,91,0.57,92,0.47,93,0.823,95,1.105,116,1.566,118,1.274,119,1.977,130,1.044,160,0.523,161,1.311,176,2.18,180,1.966,265,0.823,307,3.448,332,1.311,345,2.88,356,2.041,404,2.962,900,4.359,903,4.672,907,4.672,909,5.906,914,4.672,934,4.672,935,7.757,936,5.326,937,5.326,938,5.326,939,5.326,940,5.326]],["title/classes/RoutingNumber.html",[69,0.145,243,2.576]],["body/classes/RoutingNumber.html",[12,0.011,25,0.092,26,0.081,27,0.081,32,0.145,46,2.202,58,1.764,68,0.092,69,0.143,70,0.005,71,0.007,72,0.005,79,0.307,86,2.099,88,0.728,91,0.443,92,0.702,175,1.527,234,2.813,235,1.281,236,3.679,238,1.871,239,2.206,240,1.617,243,3.493,244,1.952,245,1.816,246,2.377,250,2.356,251,2.206,253,2.896,259,6.211,261,1.871,262,2.688,263,2.688,264,1.694,265,0.639,268,4.228,286,1.952,289,3.493,381,3.045,412,2.301,416,2.028,453,3.63,941,6.842,942,3.63,943,6.518,944,6.518,945,6.518,946,6.518,947,4.138,948,4.138,949,5.699,950,4.138,951,2.679,952,4.138,953,4.138,954,4.138,955,4.138]],["title/injectables/Seeder.html",[160,0.326,956,2.89]],["body/injectables/Seeder.html",[12,0.011,25,0.041,26,0.036,27,0.036,32,0.15,33,0.192,38,0.815,68,0.041,69,0.064,70,0.002,71,0.004,72,0.002,79,0.138,80,0.66,81,2.255,88,0.659,90,0.386,91,0.199,92,0.164,93,0.287,95,1.4,116,0.719,118,1.525,119,2.366,130,1.649,131,2.194,135,2.224,160,0.24,161,0.458,176,1.891,180,2.194,234,1.612,241,2.694,265,0.287,335,1.473,388,4.126,393,3.797,458,3.797,603,2.358,634,3.797,715,1.631,716,1.631,719,2.18,721,2.459,723,2.265,732,2.57,764,3.797,826,3.797,900,2.992,956,2.126,957,1.631,958,4.621,959,4.054,960,1.86,961,3.583,962,3.967,963,3.797,964,3.797,965,1.86,966,1.86,967,1.86,968,1.86,969,1.86,970,1.86,971,1.86,972,1.86,973,1.86,974,1.86,975,1.86,976,1.86,977,1.084,978,1.86,979,1.86,980,1.86,981,1.86,982,1.86,983,1.86,984,1.86,985,1.86,986,1.86,987,3.967,988,5.129,989,3.967,990,5.129,991,5.129,992,5.129,993,5.129,994,3.967,995,5.129,996,1.86,997,6.374,998,6.374,999,7.513,1000,7.513,1001,1.86,1002,1.86,1003,1.86,1004,1.86,1005,1.86,1006,1.86,1007,1.86,1008,1.86,1009,1.86,1010,1.86,1011,1.86,1012,7.513,1013,6.374,1014,1.86,1015,1.86,1016,3.091,1017,1.86,1018,1.86,1019,3.091,1020,3.091,1021,3.091,1022,1.86,1023,1.86,1024,1.86,1025,1.86,1026,3.967,1027,1.86,1028,1.86,1029,1.86,1030,1.86,1031,1.86,1032,1.86,1033,1.86,1034,1.86,1035,3.091,1036,1.86,1037,1.86,1038,1.86,1039,1.86]],["title/modules/SeederModule.html",[0,0.8,1040,3.093]],["body/modules/SeederModule.html",[0,1.23,2,1.337,3,1.421,4,1.512,5,1.512,6,1.421,7,2.4,8,1.465,12,0.011,22,2.093,23,1.512,24,1.465,25,0.091,26,0.08,27,0.08,29,2.028,32,0.186,33,0.42,38,2.471,68,0.091,69,0.14,70,0.005,71,0.007,72,0.005,331,1.851,332,1.002,389,5.209,454,5.209,630,5.209,760,5.209,822,5.209,896,5.209,956,5.34,1040,6.4,1041,3.573,1042,3.573,1043,3.573,1044,5.209,1045,5.209,1046,5.209,1047,4.073,1048,4.073,1049,4.073,1050,4.073,1051,4.073,1052,4.073,1053,4.073,1054,4.073,1055,4.073,1056,4.073,1057,3.243,1058,4.073,1059,4.073]],["title/classes/State.html",[69,0.145,335,1.34]],["body/classes/State.html",[12,0.011,25,0.091,26,0.08,27,0.08,32,0.156,58,2.45,68,0.091,69,0.14,70,0.005,71,0.007,72,0.005,79,0.302,86,2.089,88,0.724,91,0.692,92,0.709,93,1.17,175,1.869,234,2.255,235,1.261,238,1.851,239,2.187,240,1.599,245,2.06,246,2.628,250,1.745,251,2.187,253,2.59,255,2.737,261,1.851,264,2.855,265,0.629,279,1.851,286,1.921,335,1.797,336,3.455,339,4.853,425,3.573,849,3.298,1060,3.573,1061,5.67,1062,5.125,1063,4.212,1064,4.073,1065,4.073,1066,4.073,1067,4.073,1068,4.073,1069,4.073,1070,3.135,1071,2.497,1072,3.455,1073,3.243,1074,3.243,1075,3.573]],["title/classes/StateBankAccount.html",[69,0.145,339,2.576]],["body/classes/StateBankAccount.html",[12,0.011,25,0.084,26,0.074,27,0.074,32,0.138,58,2.087,68,0.084,69,0.13,70,0.005,71,0.007,72,0.005,79,0.28,86,2.038,88,0.707,91,0.572,92,0.707,93,0.825,124,1.923,175,1.43,234,2.93,235,1.166,236,3.585,238,1.753,239,2.098,240,1.515,244,2.518,245,1.976,246,2.572,250,1.652,251,2.098,253,2.503,261,1.753,262,2.924,263,2.924,265,0.582,269,2.773,272,3.806,279,1.713,285,1.923,286,1.778,290,2.773,335,2.475,336,5.09,339,3.273,412,2.969,416,2.617,501,3.18,728,3.163,730,3.448,747,2.617,849,3.163,1076,6.199,1077,4.683,1078,3.769,1079,3.769,1080,3.928,1081,4.962,1082,3.769,1083,3.769,1084,3.769,1085,4.251,1086,3.769,1087,2.44,1088,2.773,1089,3.001]],["title/injectables/StateBankAccountService.html",[160,0.326,328,2.721]],["body/injectables/StateBankAccountService.html",[12,0.011,25,0.093,26,0.081,27,0.081,30,1.764,32,0.177,33,0.43,38,3.426,40,2.51,68,0.093,69,0.144,70,0.005,71,0.007,72,0.005,79,0.309,80,1.223,81,1.804,88,0.547,90,1.188,91,0.613,92,0.505,93,0.884,95,0.865,105,1.705,106,2.042,116,1.331,117,2.042,118,1.37,119,1.547,124,2.126,130,0.816,131,1.672,135,1.937,160,0.445,161,1.025,220,1.894,234,2.851,236,3.085,265,0.644,272,3.902,285,2.126,286,2.701,294,2.865,316,2.865,328,3.707,329,4.243,335,2.245,336,4.677,337,3.066,339,4.01,341,3.066,347,3.655,379,2.865,380,2.865,432,4.346,849,3.594,977,3.337,1090,6.541,1091,3.317,1092,4.166,1093,4.166,1094,2.865,1095,3.317,1096,4.166,1097,4.166,1098,4.166,1099,4.166,1100,4.166,1101,4.166]],["title/injectables/StateSeederService.html",[160,0.326,961,2.721]],["body/injectables/StateSeederService.html",[12,0.011,25,0.119,26,0.104,27,0.104,32,0.178,33,0.55,68,0.119,69,0.184,70,0.007,71,0.008,72,0.007,79,0.395,80,1.438,88,0.644,90,1.105,91,0.57,92,0.47,93,0.823,95,1.105,116,1.566,118,1.274,119,1.977,130,1.044,160,0.523,161,1.311,180,1.966,265,0.823,332,1.311,335,1.698,345,2.88,356,2.041,404,2.962,961,4.359,1102,4.672,1103,7.757,1104,4.672,1105,5.326,1106,5.906,1107,5.326,1108,4.241,1109,5.326,1110,4.672,1111,4.672,1112,5.326,1113,5.326]],["title/injectables/StateService.html",[160,0.326,329,2.338]],["body/injectables/StateService.html",[12,0.011,25,0.115,26,0.101,27,0.101,32,0.177,33,0.532,68,0.115,69,0.178,70,0.006,71,0.008,72,0.006,79,0.383,80,1.409,81,2.006,88,0.631,90,1.369,91,0.821,92,0.583,93,1.019,95,1.071,116,1.534,118,1.234,130,1.011,131,1.507,160,0.513,161,1.27,180,1.927,265,0.797,329,3.67,332,1.27,335,1.645,345,2.846,356,1.978,432,4.264,1104,4.526,1106,5.788,1111,4.526,1114,4.526,1115,6.599,1116,5.16,1117,6.599,1118,5.16,1119,5.16,1120,5.16,1121,5.16]],["title/classes/StateTransaction.html",[69,0.145,1062,2.721]],["body/classes/StateTransaction.html",[12,0.011,25,0.089,26,0.078,27,0.078,32,0.142,58,2.137,68,0.089,69,0.137,70,0.005,71,0.007,72,0.005,79,0.295,86,2.073,88,0.719,91,0.593,92,0.722,93,0.856,175,1.485,235,1.23,238,1.82,239,2.159,240,1.572,244,2.614,245,2.034,246,2.544,250,1.715,251,2.159,253,2.563,261,1.82,262,3.01,263,3.01,265,0.614,279,2.519,335,2.508,410,3.576,412,3.082,416,2.717,424,2.437,501,3.256,728,3.256,730,3.549,747,2.717,849,3.256,1062,3.588,1072,4.729,1080,2.925,1081,5.079,1085,4.413,1087,2.573,1088,2.925,1089,3.165,1122,6.143,1123,3.487,1124,6.381,1125,3.975,1126,3.975,1127,3.975,1128,3.975,1129,3.975,1130,4.078,1131,3.975,1132,2.573]],["title/injectables/StateTransactionService.html",[160,0.326,1133,2.721]],["body/injectables/StateTransactionService.html",[12,0.011,25,0.104,26,0.091,27,0.091,32,0.176,33,0.481,68,0.104,69,0.161,70,0.006,71,0.008,72,0.006,79,0.346,80,1.318,81,1.909,88,0.59,90,1.281,91,0.661,92,0.545,93,0.953,95,0.967,116,1.083,130,0.913,131,1.803,135,1.576,160,0.479,161,1.146,175,1.855,180,1.803,220,2.117,265,0.719,329,4.384,335,1.485,337,3.427,410,3.655,432,4.472,620,3.202,849,3.761,977,3.598,1062,4.482,1072,4.244,1073,3.709,1091,3.709,1094,3.202,1095,3.709,1122,5.513,1132,3.015,1133,3.996,1134,4.085,1135,6.924,1136,4.657,1137,4.657,1138,4.657,1139,4.657,1140,4.657,1141,4.657,1142,4.657,1143,4.657]],["title/classes/StateUser.html",[69,0.145,1063,2.236]],["body/classes/StateUser.html",[12,0.011,25,0.082,26,0.072,27,0.072,32,0.149,58,2.269,68,0.082,69,0.127,70,0.005,71,0.007,72,0.005,79,0.273,86,2.08,88,0.722,91,0.655,92,0.719,93,0.81,100,1.775,175,1.406,193,1.612,235,1.138,238,1.723,239,2.07,240,1.488,244,2.885,245,1.949,246,2.657,247,3.058,250,1.624,251,2.07,253,2.476,261,1.723,262,3.145,263,3.145,265,0.568,279,1.671,335,2.459,411,3.506,412,2.045,416,1.803,419,3.607,421,1.957,423,2.381,501,3.145,728,3.121,730,3.402,849,3.121,1063,2.792,1070,4.291,1080,3.86,1081,4.907,1085,4.177,1087,2.381,1089,2.928,1144,6.143,1145,3.226,1146,6.116,1147,4.497,1148,3.677,1149,3.677,1150,3.677,1151,3.677,1152,3.677,1153,4.177,1154,3.677,1155,3.677,1156,2.045,1157,2.529,1158,2.928]],["title/injectables/StateUserService.html",[160,0.326,1159,2.721]],["body/injectables/StateUserService.html",[12,0.011,25,0.098,26,0.086,27,0.086,32,0.173,33,0.455,68,0.098,69,0.152,70,0.006,71,0.007,72,0.006,79,0.327,80,1.271,81,1.857,88,0.644,90,1.235,91,0.637,92,0.525,93,0.919,95,0.915,100,2.44,116,1.025,118,1.611,130,0.864,131,1.738,135,1.492,160,0.462,161,1.085,175,1.805,180,1.738,193,1.933,220,2.704,240,1.688,265,0.681,329,4.315,335,1.405,337,3.244,411,3.277,421,2.346,432,4.411,501,2.08,620,3.031,747,2.161,748,3.031,849,3.679,977,3.926,1063,3.166,1070,4.011,1071,2.703,1091,3.511,1094,3.031,1095,3.511,1144,5.742,1159,3.852,1160,3.867,1161,5.908,1162,6.735,1163,5.95,1164,4.409,1165,4.409,1166,4.409,1167,4.409,1168,4.409,1169,4.409,1170,4.409,1171,4.409]],["title/modules/StatesSeederModule.html",[0,0.8,1044,2.89]],["body/modules/StatesSeederModule.html",[0,1.419,2,1.786,3,1.897,4,2.019,5,2.019,6,1.897,7,2.767,8,2.682,12,0.011,22,2.532,23,2.019,24,1.956,25,0.121,26,0.106,27,0.106,29,1.956,32,0.174,33,0.561,68,0.121,69,0.187,70,0.007,71,0.009,72,0.007,331,2.471,332,1.338,335,1.733,724,4.77,961,5.605,1044,5.732,1110,4.77,1172,4.77,1173,4.77,1174,4.77,1175,5.438,1176,5.438]],["title/classes/Suscription.html",[69,0.145,732,2.338]],["body/classes/Suscription.html",[12,0.011,25,0.094,26,0.082,27,0.082,32,0.146,58,2.366,68,0.094,69,0.145,70,0.005,71,0.007,72,0.005,79,0.311,86,2.158,88,0.749,91,0.703,92,0.714,175,1.893,235,1.298,238,1.889,239,2.222,240,1.632,245,1.834,246,2.587,250,2.366,251,2.222,253,2.906,255,2.436,261,1.889,264,2.687,265,0.648,279,2.615,416,2.82,707,2.141,719,3.761,720,1.839,732,3.199,849,3.35,1177,3.68,1178,5.759,1179,5.759,1180,5.759,1181,5.162,1182,4.195,1183,4.195,1184,4.195,1185,4.195,1186,4.195,1187,4.195,1188,4.195,1189,3.34,1190,3.34,1191,2.885,1192,3.34,1193,3.34,1194,3.68]],["title/modules/SuscriptionModule.html",[0,0.8,19,2.89]],["body/modules/SuscriptionModule.html",[0,1.445,2,2.13,12,0.011,19,5.219,25,0.145,26,0.127,27,0.127,32,0.145,33,0.669,68,0.145,69,0.224,70,0.008,71,0.01,72,0.008,1195,6.486]],["title/modules/SuscriptionSeederModule.html",[0,0.8,1045,2.89]],["body/modules/SuscriptionSeederModule.html",[0,1.419,2,1.786,3,1.897,4,2.019,5,2.019,6,1.897,7,2.767,8,2.682,12,0.011,22,2.532,23,2.019,24,1.956,25,0.121,26,0.106,27,0.106,29,1.956,32,0.174,33,0.561,68,0.121,69,0.187,70,0.007,71,0.009,72,0.007,331,2.471,332,1.338,732,3.024,963,5.605,1045,5.732,1196,4.77,1197,4.77,1198,4.77,1199,5.438,1200,5.438,1201,4.77,1202,5.438]],["title/injectables/SuscriptionSeederService.html",[160,0.326,963,2.721]],["body/injectables/SuscriptionSeederService.html",[12,0.011,25,0.118,26,0.104,27,0.104,32,0.178,33,0.548,68,0.118,69,0.183,70,0.007,71,0.008,72,0.007,79,0.394,80,1.435,88,0.643,90,1.102,91,0.569,92,0.469,93,0.82,95,1.102,116,1.563,118,1.27,119,1.971,130,1.041,160,0.522,161,1.307,180,1.962,265,0.82,332,1.307,345,2.877,356,2.035,404,2.954,732,2.954,963,4.351,1201,4.658,1203,4.658,1204,7.749,1205,5.311,1206,5.311,1207,6.721,1208,5.311,1209,4.229,1210,5.311,1211,5.311,1212,5.311,1213,5.311]],["title/classes/ThirdPartyInterest.html",[69,0.145,723,2.06]],["body/classes/ThirdPartyInterest.html",[12,0.011,25,0.085,26,0.075,27,0.075,32,0.12,58,2.486,68,0.085,69,0.132,70,0.005,71,0.007,72,0.005,79,0.284,86,2.149,88,0.745,91,0.669,92,0.7,175,1.819,235,1.184,238,1.771,239,2.115,240,1.53,245,1.719,246,2.513,250,2.298,251,2.115,253,2.893,255,1.619,261,1.771,264,2.208,265,0.591,279,3.085,501,3.201,713,4.519,714,4.216,720,1.677,723,2.644,726,2.814,728,3.189,730,3.476,731,4.598,733,4.334,740,3.355,741,3.355,742,3.355,743,2.63,744,3.355,745,3.355,746,3.045,747,1.875,754,3.045,755,2.127,756,2.814,758,2.814,1214,5.831,1215,5.482,1216,5.482,1217,4.976,1218,3.824,1219,3.824]],["title/modules/ThirdPartyInterestSeederModule.html",[0,0.8,1046,2.89]],["body/modules/ThirdPartyInterestSeederModule.html",[0,1.411,2,1.765,3,1.875,4,1.995,5,1.995,6,1.875,7,2.752,8,2.667,12,0.011,22,2.513,23,1.995,24,1.933,25,0.12,26,0.105,27,0.105,29,1.933,32,0.173,33,0.555,68,0.12,69,0.185,70,0.007,71,0.009,72,0.007,331,2.442,332,1.322,713,3.603,714,2.859,720,2.356,723,2.634,964,5.596,1046,5.717,1220,4.713,1221,4.713,1222,4.713,1223,5.373,1224,4.713,1225,5.373,1226,5.373]],["title/injectables/ThirdPartyInterestSeederService.html",[160,0.326,964,2.721]],["body/injectables/ThirdPartyInterestSeederService.html",[12,0.011,25,0.117,26,0.103,27,0.103,32,0.178,33,0.542,68,0.117,69,0.181,70,0.007,71,0.008,72,0.007,79,0.39,80,1.424,88,0.638,90,1.089,91,0.562,92,0.463,93,0.811,95,1.089,116,1.551,118,1.256,119,1.949,130,1.028,160,0.518,161,1.292,180,1.948,265,0.811,332,1.292,345,2.865,356,2.012,404,2.92,713,3.55,714,2.793,720,2.302,723,2.573,964,4.319,1224,4.605,1227,4.605,1228,7.716,1229,4.605,1230,5.249,1231,5.852,1232,5.249,1233,4.18,1234,5.249,1235,4.605,1236,5.249,1237,5.249]],["title/injectables/ThirdPartyInterestService.html",[160,0.326,704,2.721]],["body/injectables/ThirdPartyInterestService.html",[12,0.011,25,0.109,26,0.095,27,0.095,32,0.173,33,0.503,68,0.109,69,0.168,70,0.006,71,0.008,72,0.006,79,0.361,80,1.357,81,1.951,88,0.608,90,1.319,91,0.681,92,0.561,93,0.982,95,1.011,116,1.478,118,1.165,130,0.954,131,1.422,160,0.494,161,1.198,180,1.856,265,0.752,332,1.198,345,2.785,356,1.866,366,2.708,704,4.115,712,5.061,713,4.387,714,3.765,720,2.135,723,3.116,728,2.485,780,3.583,782,4.271,786,3.877,1214,5.207,1217,5.635,1229,4.271,1231,5.575,1235,4.271,1238,7.076,1239,4.87,1240,7.501,1241,4.87,1242,4.87]],["title/classes/Transaction.html",[69,0.145,410,1.91]],["body/classes/Transaction.html",[12,0.011,25,0.066,26,0.058,27,0.058,32,0.157,58,2.002,68,0.066,69,0.103,70,0.004,71,0.006,72,0.004,79,0.221,86,2.123,88,0.736,91,0.579,92,0.735,100,1.008,234,1.888,235,0.922,238,1.476,239,1.831,240,1.275,244,2.553,245,2.25,246,2.64,247,1.736,250,2.105,251,1.831,253,2.238,255,1.903,261,1.476,262,2.843,263,2.843,264,2.215,265,0.46,272,3.562,285,2.293,286,1.405,289,2.755,290,2.192,335,0.949,410,3.445,412,2.499,416,2.955,424,1.826,501,2.12,710,1.736,720,1.306,721,3.867,722,2.048,730,3.01,733,4.042,735,4.435,736,4.435,737,4.144,738,4.435,747,2.203,755,1.656,758,2.192,819,4.799,951,1.928,1062,4.705,1072,1.826,1073,2.372,1075,2.613,1077,3.942,1080,2.192,1081,3.307,1088,2.192,1130,3.307,1181,4.705,1191,2.048,1192,2.372,1193,2.372,1243,2.613,1244,5.412,1245,5.412,1246,5.412,1247,2.978,1248,2.978,1249,2.978,1250,4.494,1251,2.978,1252,2.978,1253,2.978,1254,2.978,1255,2.978,1256,2.978,1257,4.309,1258,2.978,1259,2.978,1260,2.978,1261,2.613,1262,2.978]],["title/classes/TransactionInterest.html",[69,0.145,733,2.338]],["body/classes/TransactionInterest.html",[12,0.011,25,0.08,26,0.07,27,0.07,32,0.156,58,2.043,68,0.08,69,0.124,70,0.005,71,0.006,72,0.005,79,0.267,86,2.006,88,0.696,91,0.749,92,0.708,235,1.113,238,1.696,239,2.044,240,1.465,244,3.298,245,2.229,246,2.682,247,3.848,250,1.598,251,2.044,261,1.696,262,3.433,263,3.433,265,0.556,410,3.486,412,2.001,416,1.763,424,2.205,707,1.835,713,2.748,714,1.914,719,3.824,720,2.264,723,3.76,726,2.647,733,2.872,746,2.864,755,4.169,847,5.274,1130,3.8,1132,2.329,1189,2.864,1194,4.53,1263,5.969,1264,6.041,1265,5.299,1266,3.597,1267,5.164,1268,5.164,1269,3.597,1270,5.164,1271,3.597,1272,5.164,1273,3.597,1274,3.597,1275,2.864,1276,3.155,1277,3.597,1278,3.597]],["title/injectables/TransactionInterestService.html",[160,0.326,1279,2.721]],["body/injectables/TransactionInterestService.html",[12,0.011,25,0.101,26,0.089,27,0.089,32,0.178,33,0.469,68,0.101,69,0.157,70,0.006,71,0.008,72,0.006,79,0.337,80,1.296,81,1.885,88,0.434,90,0.942,91,0.486,92,0.401,93,0.701,95,0.942,130,0.89,131,1.326,135,1.537,160,0.471,161,1.117,180,1.772,220,2.064,265,0.701,410,3.69,707,2.317,713,3.23,714,2.416,719,3.951,720,2.998,723,3.98,725,3.122,733,3.802,755,3.376,780,3.341,785,3.983,847,5.583,977,3.538,1132,2.94,1263,4.833,1265,6.402,1275,3.616,1276,3.983,1279,3.93,1280,6.837,1281,4.541,1282,4.541,1283,4.541,1284,4.541,1285,4.541,1286,4.541,1287,4.541,1288,4.541]],["title/modules/TransactionModule.html",[0,0.8,20,2.721]],["body/modules/TransactionModule.html",[0,1.274,2,1.938,3,1.52,4,1.617,5,1.617,6,1.52,7,2.485,8,2.408,12,0.011,18,4.3,20,5.519,22,2.191,23,1.617,24,1.567,25,0.097,26,0.085,27,0.085,29,2.123,32,0.179,33,0.45,68,0.097,69,0.15,70,0.005,71,0.007,72,0.005,148,3.205,152,2.67,331,1.98,332,1.072,335,1.389,338,2.318,410,3.042,428,5.426,708,3.469,720,1.91,733,3.723,755,3.283,1072,2.67,1132,2.82,1133,5.426,1279,5.426,1289,3.821,1290,4.356,1291,3.821,1292,3.821,1293,4.356,1294,5.177,1295,5.902]],["title/injectables/TransactionService.html",[160,0.326,428,2.721]],["body/injectables/TransactionService.html",[12,0.011,25,0.059,26,0.052,27,0.052,30,1.117,32,0.177,33,0.272,38,2.965,40,1.795,68,0.059,69,0.091,70,0.003,71,0.005,72,0.003,79,0.196,80,0.874,81,1.979,88,0.586,90,1.271,91,0.656,92,0.572,93,0.946,95,1.174,105,1.079,106,1.293,116,0.952,117,1.293,118,1.618,119,0.979,130,0.983,131,2.042,135,2.483,160,0.318,161,0.649,180,1.196,234,2.137,250,2.093,265,0.407,272,3.002,285,2.089,286,1.244,294,2.815,316,3.451,317,2.313,321,2.1,332,0.649,335,0.841,345,2.1,351,4.877,356,1.011,366,2.791,379,1.813,380,1.813,388,1.707,410,3.449,424,1.616,428,2.651,432,1.467,433,2.1,442,2.313,555,3.26,563,3.013,701,4.379,702,4.379,704,4.379,707,2.089,708,3.996,710,1.537,711,2.313,713,3.01,714,2.178,719,1.244,721,2.178,723,2.46,727,3.013,755,1.467,786,3.26,1072,1.616,1094,1.813,1132,1.707,1133,4.379,1189,3.26,1257,2.1,1261,2.313,1275,3.26,1279,4.379,1294,2.313,1296,2.313,1297,5.018,1298,4.094,1299,4.094,1300,4.094,1301,2.637,1302,2.637,1303,4.094,1304,2.637,1305,5.018,1306,2.637,1307,4.094,1308,2.637,1309,4.094,1310,6.482,1311,2.637,1312,4.094,1313,5.018,1314,2.637,1315,2.637,1316,2.637,1317,3.591,1318,4.094,1319,2.637,1320,4.094,1321,4.094,1322,2.637,1323,2.637,1324,2.637,1325,2.637,1326,2.637,1327,2.637,1328,2.637,1329,2.637,1330,2.637,1331,2.637,1332,2.637,1333,4.094,1334,4.094,1335,2.637,1336,2.637,1337,4.094,1338,2.637,1339,2.637,1340,2.637,1341,2.637,1342,2.637,1343,2.637,1344,2.637,1345,2.637,1346,2.637,1347,2.637,1348,2.637,1349,2.637,1350,2.637,1351,2.637,1352,2.637,1353,2.637,1354,2.637,1355,2.637,1356,2.637]],["title/injectables/TransformSignUpInterceptor.html",[111,2.89,160,0.326]],["body/injectables/TransformSignUpInterceptor.html",[12,0.011,25,0.101,26,0.089,27,0.089,32,0.163,33,0.469,68,0.135,69,0.157,70,0.006,71,0.008,72,0.006,79,0.337,80,1.296,81,1.885,88,0.58,90,1.26,91,0.65,92,0.536,93,0.938,95,0.942,105,1.859,107,4.562,108,3.341,111,4.173,113,5.018,116,1.056,118,1.086,128,3.341,130,0.89,131,1.772,135,2.314,160,0.471,161,1.117,180,1.772,184,4.191,186,3.538,190,4.466,231,3.616,245,1.447,677,3.122,863,2.94,864,3.341,866,5.444,867,3.616,868,3.983,869,5.324,870,5.37,871,6.402,872,3.983,873,3.616,874,3.616,875,3.983,876,5.997,877,4.833,878,5.997,879,3.616,880,3.616,881,3.983,882,5.997,883,3.983,884,3.983,885,3.983,886,3.983,1357,4.541,1358,4.541,1359,4.541,1360,4.541]],["title/classes/UserAdministrator.html",[69,0.145,1147,2.45]],["body/classes/UserAdministrator.html",[12,0.011,25,0.081,26,0.071,27,0.071,32,0.148,58,2.461,68,0.081,69,0.126,70,0.005,71,0.007,72,0.005,79,0.271,86,2.122,88,0.736,92,0.71,93,1.255,125,3.107,175,2.063,184,3.732,186,3.549,192,2.776,207,3.375,235,1.129,238,1.713,239,2.06,240,1.48,245,1.941,246,2.547,250,1.614,251,2.06,253,2.795,255,2.209,261,1.713,264,2.492,265,0.563,279,1.658,287,1.721,288,1.941,289,3.198,291,2.508,449,2.684,452,2.684,497,4.48,889,4.719,893,2.126,894,2.508,895,2.905,951,2.362,1063,4.096,1070,2.901,1071,2.236,1074,2.905,1147,3.041,1156,4.358,1361,4.358,1362,3.2,1363,6.089,1364,3.648,1365,3.648,1366,3.648,1367,3.648,1368,3.648,1369,3.648,1370,3.648,1371,3.648]],["title/injectables/UserAdministratorService.html",[160,0.326,1372,2.721]],["body/injectables/UserAdministratorService.html",[12,0.011,25,0.11,26,0.097,27,0.097,32,0.179,33,0.509,68,0.11,69,0.17,70,0.006,71,0.008,72,0.006,79,0.366,80,1.369,81,1.964,88,0.472,90,1.024,91,0.528,92,0.436,93,0.762,95,1.024,100,1.67,125,3.272,130,0.967,131,1.441,160,0.498,161,1.215,175,1.908,180,1.872,265,0.762,335,2.27,366,2.745,432,2.745,434,4.329,977,3.738,1063,3.412,1070,2.745,1071,3.026,1087,3.195,1147,2.877,1156,3.566,1157,3.394,1361,3.566,1372,4.151,1373,4.329,1374,6.412,1375,6.412,1376,4.936,1377,4.329,1378,4.936,1379,4.936,1380,4.936,1381,4.329,1382,4.329,1383,4.936,1384,4.936,1385,4.329,1386,4.329,1387,4.329,1388,4.936,1389,4.329,1390,4.329,1391,4.329,1392,4.329]],["title/classes/UserClient.html",[69,0.145,411,1.91]],["body/classes/UserClient.html",[12,0.011,25,0.068,26,0.06,27,0.06,32,0.159,58,2.517,68,0.068,69,0.158,70,0.004,71,0.006,72,0.004,79,0.226,86,2.134,88,0.74,92,0.718,100,1.857,125,2.8,175,2.043,184,3.364,186,3.199,193,3.438,207,3.209,234,1.915,235,0.943,238,1.502,239,1.857,240,1.297,245,2.083,246,2.709,250,1.415,251,1.857,253,2.547,255,2.582,261,1.502,264,2.674,265,0.471,272,3.587,279,2.772,285,2.333,286,1.438,287,1.438,288,1.622,289,2.803,290,2.243,291,2.096,335,0.972,411,2.078,416,2.242,449,2.243,452,2.243,491,4.814,493,4.814,889,4.486,893,1.777,894,2.096,895,2.427,951,1.974,1063,3.894,1070,1.695,1071,1.869,1074,2.427,1181,4.738,1191,2.096,1192,2.427,1193,2.427,1361,4.361,1393,2.674,1394,5.488,1395,3.048,1396,3.048,1397,3.048,1398,3.048,1399,3.048,1400,4.573,1401,3.048,1402,3.048,1403,3.048,1404,3.048,1405,3.048,1406,3.048,1407,5.488,1408,2.674]],["title/injectables/UserClientService.html",[160,0.326,169,2.45]],["body/injectables/UserClientService.html",[12,0.011,25,0.06,26,0.053,27,0.053,30,1.143,32,0.176,33,0.279,38,2.869,40,1.828,68,0.06,69,0.093,70,0.003,71,0.005,72,0.003,78,1.856,79,0.2,80,0.89,81,2.176,88,0.626,90,1.285,91,0.663,92,0.547,93,0.956,94,3.068,95,1.285,97,3.709,100,2.214,105,1.105,106,1.323,110,2.15,116,0.969,117,1.323,118,1.685,119,1.002,124,2.127,125,2.923,130,1.213,131,2.157,135,1.938,152,1.655,160,0.324,161,0.664,168,1.987,169,2.43,175,1.753,176,1.706,180,2.057,193,2.991,203,2.368,207,2.233,219,1.856,220,1.227,265,0.417,287,1.966,288,1.436,320,2.368,332,0.664,335,1.826,338,1.436,345,2.126,346,3.976,355,2.368,356,1.035,357,1.987,366,2.319,368,2.368,379,1.856,380,1.856,411,3.416,421,1.436,423,1.748,432,1.501,489,3.32,490,3.32,492,3.068,494,3.068,495,3.32,496,3.32,497,3.068,498,3.32,543,2.15,603,1.377,865,1.987,893,1.574,902,2.15,977,2.43,1063,2.218,1070,2.319,1071,1.655,1087,1.748,1094,1.856,1159,4.416,1361,3.794,1377,2.368,1381,2.368,1382,2.368,1385,2.368,1386,2.368,1387,2.368,1389,2.368,1390,3.657,1391,2.368,1392,2.368,1409,2.368,1410,5.093,1411,4.169,1412,4.561,1413,4.169,1414,4.169,1415,5.093,1416,4.416,1417,2.7,1418,2.7,1419,5.728,1420,2.7,1421,4.169,1422,2.7,1423,2.7,1424,4.169,1425,2.7,1426,4.169,1427,2.7,1428,2.7,1429,2.15,1430,2.7,1431,2.7,1432,2.7,1433,2.7,1434,2.7,1435,2.7,1436,2.7,1437,3.657,1438,2.7,1439,2.7,1440,2.7,1441,2.7,1442,2.7,1443,2.7,1444,2.7,1445,2.7,1446,2.7,1447,2.7,1448,2.7]],["title/controllers/UserController.html",[73,1.78,1449,3.093]],["body/controllers/UserController.html",[12,0.011,25,0.113,26,0.099,27,0.099,30,2.142,32,0.18,33,0.522,38,3.16,40,2.857,68,0.113,69,0.174,70,0.006,71,0.008,72,0.006,73,2.142,75,2.581,77,3.479,79,0.376,80,1.391,86,1.395,88,0.484,90,1.05,91,0.542,92,0.447,93,0.781,95,1.05,100,1.712,104,4.438,105,2.071,106,2.48,116,1.176,117,2.48,118,1.559,119,2.419,130,0.991,172,4.201,176,3.3,543,4.029,616,4.438,1412,5.188,1429,4.029,1449,4.795,1450,4.438,1451,4.438,1452,6.516,1453,5.059,1454,5.059,1455,4.438,1456,5.059,1457,5.059,1458,5.059,1459,5.059,1460,5.059,1461,5.059,1462,5.059,1463,5.059,1464,5.059]],["title/classes/UserDetails.html",[69,0.145,207,1.843]],["body/classes/UserDetails.html",[12,0.011,25,0.06,26,0.052,27,0.052,32,0.145,46,2.203,58,2.526,68,0.06,69,0.092,70,0.003,71,0.005,72,0.003,79,0.199,86,2.151,88,0.746,91,0.61,92,0.716,93,1.261,100,1.401,175,2.09,193,1.173,207,1.816,234,0.933,235,0.828,238,1.36,239,1.714,240,1.175,241,4.095,244,1.953,245,1.965,246,2.689,247,3.323,248,3.632,250,1.282,251,1.714,253,2.784,255,1.133,257,2.347,261,1.36,262,2.389,263,2.908,264,1.695,265,0.413,266,2.347,268,3.738,279,2.963,286,1.262,287,3.716,289,3.105,338,1.424,381,1.969,411,3.193,419,2.847,421,1.424,423,1.732,489,4.033,490,4.033,492,3.727,494,3.727,495,4.033,496,4.033,497,3.727,498,4.033,501,1.953,603,3.584,951,2.681,1147,4.095,1153,3.297,1156,1.488,1157,1.84,1158,2.131,1361,4.382,1465,2.347,1466,5.065,1467,2.676,1468,2.676,1469,2.676,1470,2.676,1471,2.676,1472,2.676,1473,4.141,1474,4.141,1475,2.676,1476,2.676,1477,2.676,1478,2.676,1479,2.676,1480,2.676,1481,2.676,1482,2.676,1483,2.131,1484,2.676]],["title/injectables/UserDetailsService.html",[160,0.326,346,2.45]],["body/injectables/UserDetailsService.html",[12,0.011,25,0.081,26,0.071,27,0.071,32,0.168,33,0.377,68,0.081,69,0.126,70,0.008,71,0.007,72,0.005,79,0.271,80,1.115,81,2.293,88,0.7,90,1.46,91,0.806,92,0.587,93,1.087,95,1.46,100,2.063,116,1.215,118,1.249,130,1.378,131,2.054,135,1.237,160,0.406,161,0.899,175,1.633,180,2.137,193,1.603,207,1.603,265,0.565,287,3.553,288,1.945,332,0.899,345,2.796,346,3.045,356,1.401,366,2.033,411,3.325,421,1.945,492,2.69,494,2.69,603,1.865,640,3.206,642,4.582,646,3.206,1147,4.265,1156,2.033,1157,2.513,1361,4.189,1437,3.206,1483,2.911,1485,3.206,1486,5.224,1487,6.65,1488,6.095,1489,5.224,1490,5.224,1491,6.095,1492,3.655,1493,5.224,1494,3.655,1495,3.655,1496,3.655,1497,3.655,1498,5.224,1499,3.655,1500,5.224,1501,3.655,1502,3.655,1503,3.655,1504,3.655,1505,3.655,1506,3.655,1507,3.655,1508,3.655,1509,3.655,1510,3.655]],["title/modules/UserModule.html",[0,0.8,21,2.45]],["body/modules/UserModule.html",[0,1.132,2,1.663,3,1.221,4,1.299,5,1.299,6,1.221,7,2.209,8,2.14,12,0.011,18,4.01,21,4.997,22,1.88,23,1.299,24,1.259,25,0.078,26,0.068,27,0.068,29,1.822,32,0.184,33,0.361,68,0.078,69,0.121,70,0.004,71,0.006,72,0.004,73,1.482,75,2.584,100,2.44,148,2.576,152,2.146,169,4.701,172,4.701,193,2.22,194,2.576,207,2.22,287,2.388,288,1.863,331,1.591,332,0.861,335,2.078,338,1.863,340,2.787,346,4.701,357,2.576,411,2.301,421,1.863,603,2.584,893,2.04,902,2.787,1063,2.694,1070,2.816,1071,2.146,1087,2.266,1156,1.947,1159,5.221,1372,5.221,1416,5.221,1429,4.032,1449,4.378,1483,2.787,1511,3.07,1512,3.5,1513,3.07,1514,3.07,1515,3.5,1516,3.5,1517,3.07]],["title/classes/UserRole.html",[69,0.145,889,2.576]],["body/classes/UserRole.html",[12,0.011,25,0.093,26,0.081,27,0.081,32,0.157,58,1.772,68,0.093,69,0.144,70,0.005,71,0.007,72,0.005,79,0.309,86,1.942,88,0.674,91,0.7,92,0.69,93,1.088,100,1.937,176,3.258,193,1.827,235,1.29,238,1.88,239,2.214,240,1.624,244,3.085,245,2.085,246,2.582,247,3.337,250,1.772,251,2.214,261,1.88,262,3.322,263,3.322,265,0.644,338,2.217,411,3.618,412,2.317,416,2.042,419,3.937,421,2.217,423,2.697,889,3.51,893,4.304,1147,4.64,1153,4.559,1156,2.317,1157,2.865,1158,3.317,1361,4.106,1518,3.655,1519,6.541,1520,4.166,1521,5.725,1522,4.166,1523,4.166,1524,4.166,1525,4.166,1526,4.166]],["title/injectables/UserRoleService.html",[160,0.326,1416,2.721]],["body/injectables/UserRoleService.html",[12,0.011,25,0.103,26,0.09,27,0.09,32,0.175,33,0.475,68,0.103,69,0.159,70,0.006,71,0.008,72,0.006,79,0.341,80,1.307,81,1.897,88,0.658,90,1.27,91,0.655,92,0.54,93,0.945,95,0.954,100,2.482,116,1.069,118,1.646,130,0.901,131,1.787,135,2.071,160,0.475,161,1.132,176,2.816,180,1.787,191,3.662,193,2.016,220,2.09,240,1.737,265,0.71,411,3.334,421,2.447,620,3.162,703,5.085,747,2.254,748,3.162,889,4.217,893,4.276,894,3.162,977,4.01,1161,6.035,1361,4.079,1416,3.963,1527,4.034,1528,6.121,1529,4.599,1530,6.121,1531,6.121,1532,4.599,1533,4.599,1534,4.599,1535,4.599,1536,4.599,1537,4.599]],["title/injectables/UserService.html",[160,0.326,172,2.45]],["body/injectables/UserService.html",[12,0.011,25,0.086,26,0.076,27,0.076,32,0.16,33,0.4,68,0.086,69,0.134,70,0.005,71,0.007,72,0.005,79,0.288,80,1.162,81,2.056,85,5.01,88,0.602,90,1.306,91,0.674,92,0.555,93,0.972,94,5.022,95,1.129,100,2.646,116,1.266,118,1.505,125,2.777,126,2.663,130,1.337,131,2.177,135,2.31,160,0.423,161,0.953,169,4.347,172,3.173,175,1.686,176,3.052,184,2.374,186,2.258,191,3.084,193,1.698,194,2.85,207,2.993,215,3.398,216,3.398,287,1.827,346,4.465,357,2.85,366,2.154,438,3.398,564,4.774,1156,2.154,1372,4.959,1412,4.334,1451,4.774,1517,3.398,1538,3.398,1539,5.443,1540,3.873,1541,3.873,1542,3.873,1543,5.443,1544,3.873,1545,3.873,1546,3.873,1547,3.873,1548,5.443,1549,5.443,1550,3.873,1551,3.873,1552,3.873,1553,3.873]],["title/classes/UserSuscription.html",[69,0.145,1181,2.721]],["body/classes/UserSuscription.html",[12,0.011,25,0.082,26,0.072,27,0.072,32,0.149,58,2.07,68,0.082,69,0.128,70,0.005,71,0.007,72,0.005,79,0.275,86,2.084,88,0.723,91,0.657,92,0.704,175,1.412,192,1.969,193,1.622,235,1.145,238,1.73,239,2.077,240,1.495,244,2.485,245,2.132,246,2.615,250,2.07,251,2.077,253,2.482,261,1.73,262,2.894,263,3.154,265,0.571,279,2.395,289,3.23,338,1.969,410,3.512,411,3.512,412,3.413,416,3.008,419,3.623,421,1.969,422,2.946,423,2.395,424,2.268,501,2.485,728,3.131,730,3.413,732,4.297,743,2.544,747,1.814,749,4.622,753,3.245,757,3.245,951,2.395,1088,2.722,1130,3.877,1180,5.383,1181,3.411,1190,6.153,1191,5.313,1554,3.245,1555,6.137,1556,3.7,1557,3.7,1558,3.7,1559,3.7,1560,3.7,1561,3.7,1562,3.7]],["title/coverage.html",[1563,4.587]],["body/coverage.html",[6,0.718,12,0.011,27,0.04,41,1.514,46,2.882,69,0.277,70,0.003,71,0.004,72,0.003,73,2.293,74,1.514,76,1.805,92,0.182,97,1.332,107,1.2,111,1.415,113,2.31,160,0.643,162,1.805,169,1.2,171,1.332,172,1.2,176,0.842,193,1.473,207,0.902,220,0.935,234,2.374,236,3.21,237,1.805,241,1.2,243,1.261,259,1.639,268,1.095,269,3.133,272,1.009,285,2.508,287,1.585,292,1.514,293,1.805,297,1.514,302,1.332,304,1.514,307,2.175,310,1.415,327,1.332,328,1.332,329,1.144,335,0.656,336,3.013,339,1.261,341,3.133,346,1.2,388,5.698,393,1.332,398,1.805,410,0.935,411,0.935,428,1.332,445,1.805,458,1.332,463,1.805,469,1.639,474,1.805,487,1.805,488,1.805,521,1.639,523,1.514,524,1.805,578,1.639,579,1.805,603,1.05,604,1.805,609,1.514,610,1.805,617,1.332,625,1.332,634,1.332,638,1.805,644,1.639,649,1.805,659,1.514,667,1.805,701,1.332,702,1.332,703,1.332,704,1.332,707,1.714,710,1.959,713,2.615,714,1.788,719,0.971,721,1.095,723,1.009,725,2.31,726,3.133,732,1.144,733,1.144,755,1.869,764,1.332,769,1.805,775,1.639,780,3.133,788,1.805,812,2.675,813,1.805,826,1.332,831,1.805,837,1.639,842,1.805,847,1.415,848,1.805,863,2.175,864,1.514,866,2.675,867,2.675,887,1.805,889,1.261,893,1.959,900,1.332,905,1.805,916,1.639,918,1.805,934,1.805,941,1.805,942,1.805,956,1.415,957,1.805,961,1.332,963,1.332,964,1.332,1057,1.639,1060,1.805,1062,1.332,1063,1.095,1070,1.869,1072,2.06,1102,1.805,1108,1.639,1114,1.805,1122,2.675,1123,1.805,1133,1.332,1134,1.805,1144,2.675,1145,1.805,1147,1.2,1156,1.869,1159,1.332,1160,1.805,1177,1.805,1181,1.332,1190,1.639,1191,1.415,1203,1.805,1209,1.639,1214,2.472,1227,1.805,1233,1.639,1243,1.805,1263,2.675,1279,1.332,1296,1.805,1361,3.557,1362,1.805,1372,1.332,1373,1.805,1393,1.805,1409,1.805,1416,1.332,1449,1.514,1450,1.805,1465,1.805,1485,1.805,1518,1.805,1527,1.805,1538,1.805,1554,1.805,1563,1.639,1564,2.058,1565,2.058,1566,2.058,1567,1.805,1568,7.679,1569,7.86,1570,1.805,1571,8.001,1572,1.805,1573,1.805,1574,1.805,1575,1.805,1576,1.805,1577,2.058,1578,1.805,1579,1.805,1580,1.805,1581,2.947,1582,1.805,1583,3.735,1584,1.805,1585,1.639,1586,1.639,1587,3.391,1588,3.391,1589,1.639,1590,6.131,1591,3.735,1592,1.805,1593,1.805,1594,6.395,1595,1.805,1596,1.805,1597,1.805,1598,5.811,1599,4.258,1600,4.915,1601,4.915,1602,1.805,1603,2.058,1604,2.058,1605,4.258,1606,3.36,1607,2.058,1608,2.058,1609,2.058,1610,2.058]],["title/interfaces/createOptionsParams.html",[863,2.721,1589,3.347]],["body/interfaces/createOptionsParams.html",[12,0.011,25,0.112,26,0.098,27,0.098,30,2.13,32,0.169,40,3.152,41,3.702,60,4.413,65,6.897,68,0.112,70,0.006,71,0.008,72,0.006,79,0.374,92,0.444,130,0.986,135,1.703,175,1.926,220,2.951,240,1.842,747,2.466,863,3.257,865,3.702,1585,5.17,1586,5.17,1587,4.006,1588,4.006,1589,5.724,1591,5.695,1611,5.695,1612,7.188,1613,6.492,1614,4.413,1615,5.031,1616,4.006,1617,5.695,1618,5.031,1619,5.031,1620,6.492,1621,6.492,1622,5.031,1623,5.031,1624,5.031,1625,5.031,1626,4.006,1627,5.031,1628,4.413,1629,4.413,1630,5.031,1631,5.031]],["title/dependencies.html",[3,1.766,1632,3.498]],["body/dependencies.html",[3,1.731,12,0.011,30,2.101,33,0.512,35,2.76,40,2.821,43,3.952,69,0.222,70,0.006,71,0.008,72,0.006,144,3.952,147,3.412,190,3.652,265,0.994,332,1.221,486,3.952,586,6.264,587,4.353,677,3.412,680,4.353,681,4.353,794,4.353,873,3.952,924,4.353,959,4.353,1408,4.353,1633,4.963,1634,4.963,1635,8.022,1636,4.963,1637,4.963,1638,4.963,1639,7.141,1640,4.963,1641,4.963,1642,4.963,1643,4.963,1644,4.963,1645,4.963,1646,4.963,1647,4.963,1648,4.963,1649,4.963,1650,4.963,1651,4.963,1652,4.353,1653,4.963,1654,4.963,1655,4.963,1656,4.963,1657,4.963,1658,4.963,1659,4.963,1660,4.963,1661,4.963,1662,4.963,1663,4.963,1664,4.963,1665,4.963,1666,4.963,1667,4.963,1668,4.353,1669,4.963]],["title/miscellaneous/enumerations.html",[1670,2.265,1671,4.44]],["body/miscellaneous/enumerations.html",[12,0.011,66,3.31,70,0.005,71,0.007,72,0.005,79,0.309,100,1.934,101,4.552,124,2.917,176,2.34,197,5.014,224,4.552,316,3.931,351,4.552,410,2.598,432,3.179,433,4.552,563,4.206,572,4.552,707,2.121,713,3.477,714,2.212,719,2.696,723,2.802,725,2.858,748,6.064,1214,3.059,1257,4.552,1455,5.014,1670,2.691,1671,3.646,1672,4.157,1673,5.716,1674,4.157,1675,4.157,1676,7.037,1677,4.157,1678,6.534,1679,5.716,1680,4.157,1681,4.157,1682,4.157,1683,5.716,1684,5.716,1685,5.716,1686,5.716,1687,4.157,1688,5.716,1689,5.014,1690,5.716,1691,5.014,1692,5.014,1693,4.157,1694,4.157,1695,5.716,1696,5.716,1697,5.014,1698,5.014,1699,5.716,1700,5.014,1701,5.014,1702,5.014,1703,4.157,1704,5.716,1705,5.716,1706,5.716,1707,5.716]],["title/miscellaneous/functions.html",[1670,2.265,1708,4.44]],["body/miscellaneous/functions.html",[6,2.727,12,0.011,41,5.362,70,0.008,71,0.009,72,0.008,79,0.449,90,1.512,91,0.78,93,1.125,95,1.512,1587,4.82,1588,6.224,1592,6.391,1593,5.31,1611,5.31,1614,5.31,1628,5.31,1629,5.31,1670,3.919,1708,5.31,1709,6.054,1710,7.286,1711,6.054,1712,6.054]],["title/index.html",[79,0.26,1713,3.498,1714,3.498]],["body/index.html",[12,0.011,26,0.099,30,3.052,70,0.006,71,0.008,72,0.006,345,1.878,550,4.438,849,2.581,1563,4.029,1616,4.029,1652,7.195,1668,4.438,1715,5.059,1716,5.059,1717,6.516,1718,5.059,1719,5.059,1720,5.059,1721,5.059,1722,5.059,1723,5.059,1724,5.059,1725,5.059,1726,5.059,1727,5.059,1728,5.059,1729,5.059,1730,5.059,1731,8.063,1732,5.059,1733,5.059,1734,6.516,1735,5.059,1736,5.059,1737,5.059,1738,5.059,1739,6.516,1740,6.516,1741,5.059,1742,5.059,1743,5.059,1744,6.516,1745,6.516,1746,5.059,1747,5.059,1748,5.059,1749,5.059,1750,5.059,1751,4.438,1752,5.059,1753,5.059,1754,5.059,1755,5.059,1756,5.059,1757,5.059,1758,5.059,1759,5.059,1760,5.059,1761,5.059,1762,5.059,1763,5.059,1764,5.059,1765,5.059,1766,5.059,1767,5.059,1768,5.059]],["title/modules.html",[2,1.891]],["body/modules.html",[1,3.632,2,1.621,11,3.195,12,0.008,13,3.394,14,3.394,15,3.394,16,3.394,17,3.195,18,2.745,19,3.394,20,3.195,21,2.877,70,0.006,71,0.008,72,0.006,389,3.394,454,3.394,630,3.394,760,3.394,822,3.394,896,3.394,1040,3.632,1044,3.394,1045,3.394,1046,3.394,1751,7.681,1769,8.756,1770,8.756,1771,8.792,1772,6.412,1773,6.412]],["title/overview.html",[1774,5.053]],["body/overview.html",[0,0.407,1,5.86,2,0.703,3,0.747,4,0.794,5,0.794,6,0.747,7,0.794,8,0.77,9,1.877,10,1.877,11,4.654,12,0.011,13,5.406,14,3.008,15,4.286,16,4.286,17,4.035,18,4.429,19,3.008,20,4.862,21,4.737,22,1.288,23,0.794,24,0.77,70,0.003,71,0.004,72,0.003,75,1.092,107,2.55,139,1.877,141,1.877,161,0.527,169,3.633,171,4.035,172,3.633,235,0.662,302,4.035,323,1.877,325,1.877,326,1.877,327,4.035,328,4.035,329,3.611,346,3.633,389,4.07,390,1.877,391,1.877,392,1.877,393,4.035,428,4.035,454,4.07,455,1.877,456,1.877,457,1.877,458,4.035,617,2.832,623,1.877,624,1.877,625,2.832,630,4.07,631,1.877,632,1.877,633,1.877,634,4.035,654,1.877,655,1.877,656,1.877,698,1.877,699,1.877,700,1.877,701,4.035,702,4.035,703,4.035,704,4.035,739,1.575,760,4.07,761,1.877,762,1.877,763,1.877,764,4.035,822,4.07,823,1.877,824,1.877,825,1.877,826,4.035,865,1.575,896,4.07,897,1.877,898,1.877,899,1.877,900,4.035,916,1.704,956,3.008,961,4.035,963,4.035,964,4.035,1040,5.86,1041,1.877,1042,1.877,1043,1.877,1044,4.07,1045,4.07,1046,4.07,1133,4.035,1159,4.035,1172,1.877,1173,1.877,1174,1.877,1196,1.877,1197,1.877,1198,1.877,1220,1.877,1221,1.877,1222,1.877,1279,4.035,1289,1.877,1291,1.877,1292,1.877,1372,4.035,1416,4.035,1511,1.877,1513,1.877,1514,1.877,1626,1.704,1774,1.877,1775,2.14,1776,2.14,1777,2.14,1778,1.877]],["title/miscellaneous/variables.html",[1670,2.265,1779,4.44]],["body/miscellaneous/variables.html",[12,0.011,29,1.143,34,2.338,58,0.595,70,0.002,71,0.004,72,0.002,79,0.143,81,0.876,91,0.897,92,0.615,100,1.075,105,1.301,124,1.621,129,1.687,130,0.924,135,1.075,145,2.892,154,1.531,175,0.515,186,1.852,220,1.846,224,2.53,234,2.585,242,6.756,304,2.338,307,3.642,335,1.793,338,1.691,388,2.057,410,1.846,446,2.787,469,2.53,501,0.907,521,2.53,563,2.338,572,1.531,605,2.787,644,2.53,659,2.338,712,1.531,727,2.989,729,4.582,731,3.471,732,2.259,737,1.322,739,4.381,747,3.71,748,5.204,775,2.53,815,1.687,819,3.756,837,2.53,849,3.293,859,2.787,870,1.415,879,1.531,888,2.787,1057,2.53,1061,4.935,1108,3.234,1178,3.563,1179,3.563,1209,2.53,1215,1.687,1216,1.687,1217,1.531,1233,2.53,1317,4.138,1567,1.687,1570,1.687,1572,1.687,1573,1.687,1574,1.687,1575,1.687,1576,1.687,1578,1.687,1579,1.687,1580,1.687,1581,1.687,1582,2.787,1583,1.687,1584,4.138,1585,2.53,1586,2.53,1595,1.687,1596,2.787,1597,1.687,1602,1.687,1616,1.531,1617,3.563,1626,3.756,1670,1.245,1689,2.787,1691,1.687,1692,1.687,1697,1.687,1698,1.687,1700,1.687,1701,1.687,1702,1.687,1778,5.661,1779,1.687,1780,1.923,1781,4.061,1782,1.923,1783,1.923,1784,3.178,1785,1.923,1786,1.923,1787,1.923,1788,1.923,1789,1.923,1790,1.923,1791,1.923,1792,1.923,1793,1.923,1794,1.923,1795,1.923,1796,1.923,1797,1.923,1798,4.061,1799,1.923,1800,1.923,1801,1.923,1802,1.923,1803,1.923,1804,1.923,1805,1.923,1806,1.923,1807,1.923,1808,1.923,1809,1.923,1810,1.923,1811,1.923,1812,1.923,1813,1.923,1814,1.923,1815,1.923,1816,1.923,1817,1.923,1818,1.923,1819,1.923,1820,1.923,1821,1.923,1822,1.923,1823,1.923,1824,3.178,1825,3.178,1826,1.923,1827,1.923,1828,1.923,1829,1.923,1830,1.923,1831,1.923,1832,1.923,1833,1.923,1834,1.923,1835,1.923,1836,4.061,1837,1.923,1838,1.923,1839,1.923,1840,3.178,1841,3.178,1842,1.923,1843,3.178,1844,1.923,1845,1.923,1846,3.178,1847,1.923,1848,1.923,1849,1.923,1850,1.923,1851,1.923,1852,1.923,1853,1.923,1854,1.923,1855,1.923,1856,1.923,1857,3.178,1858,1.923,1859,1.923,1860,3.178,1861,1.923,1862,1.923,1863,3.178,1864,1.923,1865,1.923,1866,1.923,1867,1.923,1868,3.178,1869,1.923,1870,1.923,1871,3.178,1872,1.923,1873,1.923,1874,3.178,1875,1.923,1876,1.923,1877,1.923,1878,1.923,1879,1.923,1880,1.923,1881,1.923,1882,1.923,1883,1.923,1884,1.923,1885,1.923,1886,1.923,1887,3.178,1888,1.923,1889,1.923,1890,1.923,1891,1.923,1892,1.923,1893,3.178,1894,3.178,1895,1.923,1896,1.923,1897,1.923,1898,1.923,1899,1.923,1900,1.923,1901,1.923,1902,1.923,1903,1.923,1904,1.923,1905,5.626,1906,4.717,1907,1.923,1908,3.178,1909,1.923,1910,1.923,1911,1.923,1912,3.178,1913,3.178,1914,1.923,1915,1.923,1916,1.923,1917,1.923,1918,3.178,1919,1.923,1920,1.923,1921,1.923,1922,1.923,1923,1.923]]],"invertedIndex":[["",{"_index":12,"title":{},"body":{"modules/AppModule.html":{},"controllers/AuthController.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"classes/Bank.html":{},"classes/BankAccount.html":{},"controllers/BankAccountController.html":{},"modules/BankAccountModule.html":{},"injectables/BankAccountService.html":{},"modules/BankSeederModule.html":{},"injectables/BankSeederService.html":{},"classes/ClientBankAccount.html":{},"injectables/ClientBankAccountService.html":{},"classes/Country.html":{},"modules/CountrySeederModule.html":{},"injectables/CountrySeederService.html":{},"classes/CreateBankAccountDTO.html":{},"classes/CreateUserDTO.html":{},"modules/DatabaseModule.html":{},"controllers/ExampleController.html":{},"modules/ExampleModule.html":{},"injectables/JwtStrategy.html":{},"classes/Language.html":{},"controllers/LanguageController.html":{},"modules/LanguageModule.html":{},"modules/LanguageSeederModule.html":{},"injectables/LanguageSeederService.html":{},"injectables/LanguageService.html":{},"modules/MailsModule.html":{},"injectables/MailsService.html":{},"modules/ManagementModule.html":{},"classes/PlatformInterest.html":{},"modules/PlatformInterestSeederModule.html":{},"injectables/PlatformInterestSeederService.html":{},"injectables/PlatformInterestService.html":{},"injectables/PoeditorService.html":{},"classes/PointsConversion.html":{},"modules/PointsConversionSeederModule.html":{},"injectables/PointsConversionSeederService.html":{},"injectables/PointsConversionService.html":{},"classes/Promotion.html":{},"interfaces/Response.html":{},"classes/Role.html":{},"modules/RoleSeederModule.html":{},"injectables/RoleService.html":{},"guards/RolesGuard.html":{},"injectables/RolesSeederService.html":{},"classes/RoutingNumber.html":{},"injectables/Seeder.html":{},"modules/SeederModule.html":{},"classes/State.html":{},"classes/StateBankAccount.html":{},"injectables/StateBankAccountService.html":{},"injectables/StateSeederService.html":{},"injectables/StateService.html":{},"classes/StateTransaction.html":{},"injectables/StateTransactionService.html":{},"classes/StateUser.html":{},"injectables/StateUserService.html":{},"modules/StatesSeederModule.html":{},"classes/Suscription.html":{},"modules/SuscriptionModule.html":{},"modules/SuscriptionSeederModule.html":{},"injectables/SuscriptionSeederService.html":{},"classes/ThirdPartyInterest.html":{},"modules/ThirdPartyInterestSeederModule.html":{},"injectables/ThirdPartyInterestSeederService.html":{},"injectables/ThirdPartyInterestService.html":{},"classes/Transaction.html":{},"classes/TransactionInterest.html":{},"injectables/TransactionInterestService.html":{},"modules/TransactionModule.html":{},"injectables/TransactionService.html":{},"injectables/TransformSignUpInterceptor.html":{},"classes/UserAdministrator.html":{},"injectables/UserAdministratorService.html":{},"classes/UserClient.html":{},"injectables/UserClientService.html":{},"controllers/UserController.html":{},"classes/UserDetails.html":{},"injectables/UserDetailsService.html":{},"modules/UserModule.html":{},"classes/UserRole.html":{},"injectables/UserRoleService.html":{},"injectables/UserService.html":{},"classes/UserSuscription.html":{},"coverage.html":{},"interfaces/createOptionsParams.html":{},"dependencies.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{},"index.html":{},"modules.html":{},"overview.html":{},"miscellaneous/variables.html":{}}}],["0",{"_index":388,"title":{},"body":{"injectables/BankAccountService.html":{},"guards/RolesGuard.html":{},"injectables/Seeder.html":{},"injectables/TransactionService.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["0.002",{"_index":1899,"title":{},"body":{"miscellaneous/variables.html":{}}}],["0.1.13",{"_index":1661,"title":{},"body":{"dependencies.html":{}}}],["0.12.2",{"_index":1644,"title":{},"body":{"dependencies.html":{}}}],["0.13.0",{"_index":1650,"title":{},"body":{"dependencies.html":{}}}],["0.2.24",{"_index":1665,"title":{},"body":{"dependencies.html":{}}}],["0.2.3",{"_index":1643,"title":{},"body":{"dependencies.html":{}}}],["0.4.0",{"_index":1636,"title":{},"body":{"dependencies.html":{}}}],["0.4.1",{"_index":1654,"title":{},"body":{"dependencies.html":{}}}],["0/1",{"_index":1569,"title":{},"body":{"coverage.html":{}}}],["0/10",{"_index":1603,"title":{},"body":{"coverage.html":{}}}],["0/11",{"_index":1604,"title":{},"body":{"coverage.html":{}}}],["0/12",{"_index":1606,"title":{},"body":{"coverage.html":{}}}],["0/13",{"_index":1577,"title":{},"body":{"coverage.html":{}}}],["0/14",{"_index":1607,"title":{},"body":{"coverage.html":{}}}],["0/15",{"_index":1608,"title":{},"body":{"coverage.html":{}}}],["0/2",{"_index":1590,"title":{},"body":{"coverage.html":{}}}],["0/3",{"_index":1571,"title":{},"body":{"coverage.html":{}}}],["0/4",{"_index":1598,"title":{},"body":{"coverage.html":{}}}],["0/5",{"_index":1601,"title":{},"body":{"coverage.html":{}}}],["0/6",{"_index":1600,"title":{},"body":{"coverage.html":{}}}],["0/7",{"_index":1594,"title":{},"body":{"coverage.html":{}}}],["0/8",{"_index":1605,"title":{},"body":{"coverage.html":{}}}],["0/9",{"_index":1599,"title":{},"body":{"coverage.html":{}}}],["1",{"_index":1778,"title":{},"body":{"overview.html":{},"miscellaneous/variables.html":{}}}],["1.0.0",{"_index":1639,"title":{},"body":{"dependencies.html":{}}}],["1.1.11",{"_index":1634,"title":{},"body":{"dependencies.html":{}}}],["1.3.4",{"_index":1651,"title":{},"body":{"dependencies.html":{}}}],["1.5",{"_index":1897,"title":{},"body":{"miscellaneous/variables.html":{}}}],["1.6.1",{"_index":1667,"title":{},"body":{"dependencies.html":{}}}],["10",{"_index":1810,"title":{},"body":{"miscellaneous/variables.html":{}}}],["11",{"_index":1811,"title":{},"body":{"miscellaneous/variables.html":{}}}],["12",{"_index":1813,"title":{},"body":{"miscellaneous/variables.html":{}}}],["13",{"_index":1816,"title":{},"body":{"miscellaneous/variables.html":{}}}],["14",{"_index":1820,"title":{},"body":{"miscellaneous/variables.html":{}}}],["15",{"_index":1822,"title":{},"body":{"miscellaneous/variables.html":{}}}],["15000",{"_index":1919,"title":{},"body":{"miscellaneous/variables.html":{}}}],["16",{"_index":1826,"title":{},"body":{"miscellaneous/variables.html":{}}}],["17",{"_index":1829,"title":{},"body":{"miscellaneous/variables.html":{}}}],["18",{"_index":1831,"title":{},"body":{"miscellaneous/variables.html":{}}}],["19",{"_index":1833,"title":{},"body":{"miscellaneous/variables.html":{}}}],["2",{"_index":739,"title":{},"body":{"classes/PlatformInterest.html":{},"classes/Promotion.html":{},"overview.html":{},"miscellaneous/variables.html":{}}}],["20",{"_index":1836,"title":{},"body":{"miscellaneous/variables.html":{}}}],["21",{"_index":1775,"title":{},"body":{"overview.html":{}}}],["25",{"_index":1777,"title":{},"body":{"overview.html":{}}}],["250",{"_index":1896,"title":{},"body":{"miscellaneous/variables.html":{}}}],["2500",{"_index":1916,"title":{},"body":{"miscellaneous/variables.html":{}}}],["3",{"_index":819,"title":{},"body":{"classes/PointsConversion.html":{},"classes/Transaction.html":{},"miscellaneous/variables.html":{}}}],["3.0.0",{"_index":1646,"title":{},"body":{"dependencies.html":{}}}],["3.0.2",{"_index":1663,"title":{},"body":{"dependencies.html":{}}}],["3.2.1",{"_index":1669,"title":{},"body":{"dependencies.html":{}}}],["3.22.0",{"_index":1648,"title":{},"body":{"dependencies.html":{}}}],["3.3.1",{"_index":1645,"title":{},"body":{"dependencies.html":{}}}],["33",{"_index":1776,"title":{},"body":{"overview.html":{}}}],["4",{"_index":1798,"title":{},"body":{"miscellaneous/variables.html":{}}}],["4.0.0",{"_index":1655,"title":{},"body":{"dependencies.html":{}}}],["4.0.1",{"_index":1642,"title":{},"body":{"dependencies.html":{}}}],["5",{"_index":1626,"title":{},"body":{"interfaces/createOptionsParams.html":{},"overview.html":{},"miscellaneous/variables.html":{}}}],["5000",{"_index":1895,"title":{},"body":{"miscellaneous/variables.html":{}}}],["5120000",{"_index":1624,"title":{},"body":{"interfaces/createOptionsParams.html":{}}}],["6",{"_index":859,"title":{},"body":{"classes/Promotion.html":{},"miscellaneous/variables.html":{}}}],["6.14.4",{"_index":1653,"title":{},"body":{"dependencies.html":{}}}],["6.5.4",{"_index":1664,"title":{},"body":{"dependencies.html":{}}}],["7",{"_index":1804,"title":{},"body":{"miscellaneous/variables.html":{}}}],["7.0.0",{"_index":1635,"title":{},"body":{"dependencies.html":{}}}],["7.1.0",{"_index":1641,"title":{},"body":{"dependencies.html":{}}}],["75",{"_index":1923,"title":{},"body":{"miscellaneous/variables.html":{}}}],["8",{"_index":737,"title":{},"body":{"classes/PlatformInterest.html":{},"classes/PointsConversion.html":{},"classes/Promotion.html":{},"classes/Transaction.html":{},"miscellaneous/variables.html":{}}}],["8.0.3",{"_index":1658,"title":{},"body":{"dependencies.html":{}}}],["9",{"_index":1807,"title":{},"body":{"miscellaneous/variables.html":{}}}],["__dirname",{"_index":1617,"title":{},"body":{"interfaces/createOptionsParams.html":{},"miscellaneous/variables.html":{}}}],["aba",{"_index":943,"title":{},"body":{"classes/RoutingNumber.html":{}}}],["account",{"_index":294,"title":{},"body":{"controllers/BankAccountController.html":{},"injectables/BankAccountService.html":{},"injectables/ClientBankAccountService.html":{},"injectables/StateBankAccountService.html":{},"injectables/TransactionService.html":{}}}],["account.accountnumber",{"_index":372,"title":{},"body":{"injectables/BankAccountService.html":{}}}],["account.checknumber",{"_index":376,"title":{},"body":{"injectables/BankAccountService.html":{}}}],["account.controller",{"_index":334,"title":{},"body":{"modules/BankAccountModule.html":{}}}],["account.controller.ts",{"_index":293,"title":{},"body":{"controllers/BankAccountController.html":{},"coverage.html":{}}}],["account.controller.ts:31",{"_index":299,"title":{},"body":{"controllers/BankAccountController.html":{}}}],["account.entity",{"_index":286,"title":{},"body":{"classes/BankAccount.html":{},"modules/BankAccountModule.html":{},"injectables/BankAccountService.html":{},"classes/ClientBankAccount.html":{},"injectables/ClientBankAccountService.html":{},"classes/RoutingNumber.html":{},"classes/State.html":{},"classes/StateBankAccount.html":{},"injectables/StateBankAccountService.html":{},"classes/Transaction.html":{},"injectables/TransactionService.html":{},"classes/UserClient.html":{},"classes/UserDetails.html":{}}}],["account.entity.ts",{"_index":269,"title":{},"body":{"classes/BankAccount.html":{},"classes/ClientBankAccount.html":{},"classes/StateBankAccount.html":{},"coverage.html":{}}}],["account.entity.ts:15",{"_index":1083,"title":{},"body":{"classes/StateBankAccount.html":{}}}],["account.entity.ts:17",{"_index":278,"title":{},"body":{"classes/BankAccount.html":{}}}],["account.entity.ts:18",{"_index":1084,"title":{},"body":{"classes/StateBankAccount.html":{}}}],["account.entity.ts:19",{"_index":415,"title":{},"body":{"classes/ClientBankAccount.html":{}}}],["account.entity.ts:20",{"_index":275,"title":{},"body":{"classes/BankAccount.html":{}}}],["account.entity.ts:21",{"_index":1082,"title":{},"body":{"classes/StateBankAccount.html":{}}}],["account.entity.ts:23",{"_index":276,"title":{},"body":{"classes/BankAccount.html":{}}}],["account.entity.ts:24",{"_index":1079,"title":{},"body":{"classes/StateBankAccount.html":{}}}],["account.entity.ts:26",{"_index":282,"title":{},"body":{"classes/BankAccount.html":{}}}],["account.entity.ts:27",{"_index":420,"title":{},"body":{"classes/ClientBankAccount.html":{}}}],["account.entity.ts:29",{"_index":280,"title":{},"body":{"classes/BankAccount.html":{}}}],["account.entity.ts:32",{"_index":281,"title":{},"body":{"classes/BankAccount.html":{}}}],["account.entity.ts:34",{"_index":1086,"title":{},"body":{"classes/StateBankAccount.html":{}}}],["account.entity.ts:35",{"_index":414,"title":{},"body":{"classes/ClientBankAccount.html":{}}}],["account.entity.ts:39",{"_index":277,"title":{},"body":{"classes/BankAccount.html":{}}}],["account.entity.ts:42",{"_index":418,"title":{},"body":{"classes/ClientBankAccount.html":{}}}],["account.entity.ts:44",{"_index":1078,"title":{},"body":{"classes/StateBankAccount.html":{}}}],["account.entity.ts:47",{"_index":284,"title":{},"body":{"classes/BankAccount.html":{}}}],["account.entity.ts:49",{"_index":417,"title":{},"body":{"classes/ClientBankAccount.html":{}}}],["account.module",{"_index":47,"title":{},"body":{"modules/AppModule.html":{}}}],["account.module.ts",{"_index":330,"title":{},"body":{"modules/BankAccountModule.html":{}}}],["account.routingnumber",{"_index":369,"title":{},"body":{"injectables/BankAccountService.html":{}}}],["account.service",{"_index":303,"title":{},"body":{"controllers/BankAccountController.html":{},"modules/BankAccountModule.html":{},"injectables/ClientBankAccountService.html":{}}}],["account.service.ts",{"_index":341,"title":{},"body":{"injectables/BankAccountService.html":{},"injectables/ClientBankAccountService.html":{},"injectables/StateBankAccountService.html":{},"coverage.html":{}}}],["account.service.ts:13",{"_index":347,"title":{},"body":{"injectables/BankAccountService.html":{},"injectables/StateBankAccountService.html":{}}}],["account.service.ts:17",{"_index":429,"title":{},"body":{"injectables/ClientBankAccountService.html":{}}}],["account.service.ts:19",{"_index":1093,"title":{},"body":{"injectables/StateBankAccountService.html":{}}}],["account.service.ts:21",{"_index":350,"title":{},"body":{"injectables/BankAccountService.html":{}}}],["account.service.ts:27",{"_index":431,"title":{},"body":{"injectables/ClientBankAccountService.html":{}}}],["account.service.ts:50",{"_index":353,"title":{},"body":{"injectables/BankAccountService.html":{}}}],["account.type",{"_index":374,"title":{},"body":{"injectables/BankAccountService.html":{}}}],["account.userdetails",{"_index":371,"title":{},"body":{"injectables/BankAccountService.html":{}}}],["account/bank",{"_index":46,"title":{},"body":{"modules/AppModule.html":{},"classes/BankAccount.html":{},"controllers/BankAccountController.html":{},"modules/BankAccountModule.html":{},"injectables/BankAccountService.html":{},"classes/ClientBankAccount.html":{},"classes/CreateBankAccountDTO.html":{},"classes/RoutingNumber.html":{},"classes/UserDetails.html":{},"coverage.html":{}}}],["account/bank/bank.entity",{"_index":395,"title":{},"body":{"modules/BankSeederModule.html":{},"injectables/BankSeederService.html":{},"classes/Country.html":{}}}],["account/bank/bank.entity.ts",{"_index":237,"title":{},"body":{"classes/Bank.html":{},"coverage.html":{}}}],["account/bank/bank.entity.ts:16",{"_index":252,"title":{},"body":{"classes/Bank.html":{}}}],["account/bank/bank.entity.ts:19",{"_index":254,"title":{},"body":{"classes/Bank.html":{}}}],["account/bank/bank.entity.ts:27",{"_index":249,"title":{},"body":{"classes/Bank.html":{}}}],["account/bank/bank.entity.ts:34",{"_index":256,"title":{},"body":{"classes/Bank.html":{}}}],["account/client",{"_index":285,"title":{},"body":{"classes/BankAccount.html":{},"controllers/BankAccountController.html":{},"modules/BankAccountModule.html":{},"classes/ClientBankAccount.html":{},"injectables/ClientBankAccountService.html":{},"classes/StateBankAccount.html":{},"injectables/StateBankAccountService.html":{},"classes/Transaction.html":{},"injectables/TransactionService.html":{},"classes/UserClient.html":{},"coverage.html":{}}}],["account/dto/createbankaccount.dto",{"_index":301,"title":{},"body":{"controllers/BankAccountController.html":{}}}],["account/dto/createbankaccount.dto.ts",{"_index":474,"title":{},"body":{"classes/CreateBankAccountDTO.html":{},"coverage.html":{}}}],["account/dto/createbankaccount.dto.ts:13",{"_index":476,"title":{},"body":{"classes/CreateBankAccountDTO.html":{}}}],["account/dto/createbankaccount.dto.ts:16",{"_index":478,"title":{},"body":{"classes/CreateBankAccountDTO.html":{}}}],["account/dto/createbankaccount.dto.ts:19",{"_index":481,"title":{},"body":{"classes/CreateBankAccountDTO.html":{}}}],["account/dto/createbankaccount.dto.ts:22",{"_index":477,"title":{},"body":{"classes/CreateBankAccountDTO.html":{}}}],["account/dto/createbankaccount.dto.ts:25",{"_index":479,"title":{},"body":{"classes/CreateBankAccountDTO.html":{}}}],["account/routing",{"_index":941,"title":{},"body":{"classes/RoutingNumber.html":{},"coverage.html":{}}}],["account/state",{"_index":336,"title":{},"body":{"modules/BankAccountModule.html":{},"classes/ClientBankAccount.html":{},"injectables/ClientBankAccountService.html":{},"classes/State.html":{},"classes/StateBankAccount.html":{},"injectables/StateBankAccountService.html":{},"coverage.html":{}}}],["accountnumber",{"_index":270,"title":{},"body":{"classes/BankAccount.html":{},"classes/CreateBankAccountDTO.html":{}}}],["accounts",{"_index":384,"title":{},"body":{"injectables/BankAccountService.html":{}}}],["ach",{"_index":944,"title":{},"body":{"classes/RoutingNumber.html":{}}}],["active",{"_index":224,"title":{},"body":{"injectables/AuthService.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/variables.html":{}}}],["actualpath",{"_index":1615,"title":{},"body":{"interfaces/createOptionsParams.html":{}}}],["actualpath}/logs/${params.filename",{"_index":1627,"title":{},"body":{"interfaces/createOptionsParams.html":{}}}],["address",{"_index":489,"title":{},"body":{"classes/CreateUserDTO.html":{},"injectables/UserClientService.html":{},"classes/UserDetails.html":{}}}],["admin",{"_index":1380,"title":{},"body":{"injectables/UserAdministratorService.html":{}}}],["admin.\"iduseradministrator",{"_index":1384,"title":{},"body":{"injectables/UserAdministratorService.html":{}}}],["administrator",{"_index":572,"title":{},"body":{"controllers/ExampleController.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/variables.html":{}}}],["administrator.entity",{"_index":1157,"title":{},"body":{"classes/StateUser.html":{},"injectables/UserAdministratorService.html":{},"classes/UserDetails.html":{},"injectables/UserDetailsService.html":{},"classes/UserRole.html":{}}}],["administrator.entity.ts",{"_index":1362,"title":{},"body":{"classes/UserAdministrator.html":{},"coverage.html":{}}}],["administrator.entity.ts:16",{"_index":1365,"title":{},"body":{"classes/UserAdministrator.html":{}}}],["administrator.entity.ts:19",{"_index":1364,"title":{},"body":{"classes/UserAdministrator.html":{}}}],["administrator.entity.ts:22",{"_index":1366,"title":{},"body":{"classes/UserAdministrator.html":{}}}],["administrator.entity.ts:25",{"_index":1368,"title":{},"body":{"classes/UserAdministrator.html":{}}}],["administrator.entity.ts:28",{"_index":1367,"title":{},"body":{"classes/UserAdministrator.html":{}}}],["administrator.entity.ts:35",{"_index":1369,"title":{},"body":{"classes/UserAdministrator.html":{}}}],["administrator.entity.ts:42",{"_index":1370,"title":{},"body":{"classes/UserAdministrator.html":{}}}],["administrator.entity.ts:49",{"_index":1371,"title":{},"body":{"classes/UserAdministrator.html":{}}}],["administrator.service",{"_index":1517,"title":{},"body":{"modules/UserModule.html":{},"injectables/UserService.html":{}}}],["administrator.service.ts",{"_index":1373,"title":{},"body":{"injectables/UserAdministratorService.html":{},"coverage.html":{}}}],["administrator.service.ts:12",{"_index":1376,"title":{},"body":{"injectables/UserAdministratorService.html":{}}}],["administrator/user",{"_index":1156,"title":{},"body":{"classes/StateUser.html":{},"classes/UserAdministrator.html":{},"injectables/UserAdministratorService.html":{},"classes/UserDetails.html":{},"injectables/UserDetailsService.html":{},"modules/UserModule.html":{},"classes/UserRole.html":{},"injectables/UserService.html":{},"coverage.html":{}}}],["administrators",{"_index":568,"title":{},"body":{"controllers/ExampleController.html":{}}}],["admins",{"_index":1549,"title":{},"body":{"injectables/UserService.html":{}}}],["again",{"_index":599,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["ally",{"_index":1796,"title":{},"body":{"miscellaneous/variables.html":{}}}],["already",{"_index":1434,"title":{},"body":{"injectables/UserClientService.html":{}}}],["amazing",{"_index":1752,"title":{},"body":{"index.html":{}}}],["america",{"_index":1795,"title":{},"body":{"miscellaneous/variables.html":{}}}],["american",{"_index":383,"title":{},"body":{"injectables/BankAccountService.html":{}}}],["amount",{"_index":727,"title":{},"body":{"classes/PlatformInterest.html":{},"classes/Promotion.html":{},"injectables/TransactionService.html":{},"miscellaneous/variables.html":{}}}],["amountdollarcents",{"_index":1215,"title":{},"body":{"classes/ThirdPartyInterest.html":{},"miscellaneous/variables.html":{}}}],["amounts",{"_index":1352,"title":{},"body":{"injectables/TransactionService.html":{}}}],["andwhere('state_user.\"finaldate",{"_index":1391,"title":{},"body":{"injectables/UserAdministratorService.html":{},"injectables/UserClientService.html":{}}}],["andwhere(`state.name",{"_index":1389,"title":{},"body":{"injectables/UserAdministratorService.html":{},"injectables/UserClientService.html":{}}}],["angular",{"_index":1726,"title":{},"body":{"index.html":{}}}],["apikey",{"_index":1903,"title":{},"body":{"miscellaneous/variables.html":{}}}],["app",{"_index":1730,"title":{},"body":{"index.html":{}}}],["app.auth.jwtpayload",{"_index":226,"title":{},"body":{"injectables/AuthService.html":{},"injectables/JwtStrategy.html":{}}}],["app.auth.loginrequest",{"_index":85,"title":{},"body":{"controllers/AuthController.html":{},"injectables/AuthService.html":{},"injectables/UserService.html":{}}}],["app.sendgrid.mail",{"_index":685,"title":{},"body":{"injectables/MailsService.html":{}}}],["app.transaction.transactioncreation",{"_index":1305,"title":{},"body":{"injectables/TransactionService.html":{}}}],["app.transaction.transactioninterests",{"_index":1313,"title":{},"body":{"injectables/TransactionService.html":{}}}],["applications",{"_index":1723,"title":{},"body":{"index.html":{}}}],["appmodule",{"_index":1,"title":{"modules/AppModule.html":{}},"body":{"modules/AppModule.html":{},"modules.html":{},"overview.html":{}}}],["ask",{"_index":1917,"title":{},"body":{"miscellaneous/variables.html":{}}}],["async",{"_index":81,"title":{},"body":{"controllers/AuthController.html":{},"injectables/AuthService.html":{},"controllers/BankAccountController.html":{},"injectables/BankAccountService.html":{},"injectables/ClientBankAccountService.html":{},"injectables/JwtStrategy.html":{},"controllers/LanguageController.html":{},"injectables/LanguageService.html":{},"modules/MailsModule.html":{},"injectables/MailsService.html":{},"injectables/PlatformInterestService.html":{},"injectables/PoeditorService.html":{},"injectables/PointsConversionService.html":{},"interfaces/Response.html":{},"injectables/RoleService.html":{},"injectables/Seeder.html":{},"injectables/StateBankAccountService.html":{},"injectables/StateService.html":{},"injectables/StateTransactionService.html":{},"injectables/StateUserService.html":{},"injectables/ThirdPartyInterestService.html":{},"injectables/TransactionInterestService.html":{},"injectables/TransactionService.html":{},"injectables/TransformSignUpInterceptor.html":{},"injectables/UserAdministratorService.html":{},"injectables/UserClientService.html":{},"injectables/UserDetailsService.html":{},"injectables/UserRoleService.html":{},"injectables/UserService.html":{},"miscellaneous/variables.html":{}}}],["auth",{"_index":78,"title":{},"body":{"controllers/AuthController.html":{},"injectables/AuthService.html":{},"injectables/JwtStrategy.html":{},"guards/RolesGuard.html":{},"injectables/UserClientService.html":{}}}],["auth.controller",{"_index":149,"title":{},"body":{"modules/AuthModule.html":{}}}],["auth.service",{"_index":108,"title":{},"body":{"controllers/AuthController.html":{},"modules/AuthModule.html":{},"interfaces/Response.html":{},"injectables/TransformSignUpInterceptor.html":{}}}],["auth/auth.module",{"_index":576,"title":{},"body":{"modules/ExampleModule.html":{}}}],["auth/decorators/get",{"_index":305,"title":{},"body":{"controllers/BankAccountController.html":{},"controllers/ExampleController.html":{}}}],["auth/decorators/roles.decorator",{"_index":308,"title":{},"body":{"controllers/BankAccountController.html":{},"controllers/ExampleController.html":{}}}],["auth/guards/roles.guard",{"_index":311,"title":{},"body":{"controllers/BankAccountController.html":{},"controllers/ExampleController.html":{}}}],["authcontroller",{"_index":74,"title":{"controllers/AuthController.html":{}},"body":{"controllers/AuthController.html":{},"modules/AuthModule.html":{},"coverage.html":{}}}],["authenticated",{"_index":544,"title":{},"body":{"controllers/ExampleController.html":{}}}],["authguard",{"_index":309,"title":{},"body":{"controllers/BankAccountController.html":{},"controllers/ExampleController.html":{}}}],["authmodule",{"_index":11,"title":{"modules/AuthModule.html":{}},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/ExampleModule.html":{},"modules.html":{},"overview.html":{}}}],["author",{"_index":1761,"title":{},"body":{"index.html":{}}}],["authorization",{"_index":597,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["authservice",{"_index":107,"title":{"injectables/AuthService.html":{}},"body":{"controllers/AuthController.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"interfaces/Response.html":{},"injectables/TransformSignUpInterceptor.html":{},"coverage.html":{},"overview.html":{}}}],["available",{"_index":1773,"title":{},"body":{"modules.html":{}}}],["await",{"_index":131,"title":{},"body":{"controllers/AuthController.html":{},"injectables/AuthService.html":{},"controllers/BankAccountController.html":{},"injectables/BankAccountService.html":{},"injectables/ClientBankAccountService.html":{},"injectables/JwtStrategy.html":{},"controllers/LanguageController.html":{},"injectables/LanguageService.html":{},"injectables/MailsService.html":{},"injectables/PlatformInterestService.html":{},"injectables/PoeditorService.html":{},"injectables/PointsConversionService.html":{},"interfaces/Response.html":{},"injectables/RoleService.html":{},"injectables/Seeder.html":{},"injectables/StateBankAccountService.html":{},"injectables/StateService.html":{},"injectables/StateTransactionService.html":{},"injectables/StateUserService.html":{},"injectables/ThirdPartyInterestService.html":{},"injectables/TransactionInterestService.html":{},"injectables/TransactionService.html":{},"injectables/TransformSignUpInterceptor.html":{},"injectables/UserAdministratorService.html":{},"injectables/UserClientService.html":{},"injectables/UserDetailsService.html":{},"injectables/UserRoleService.html":{},"injectables/UserService.html":{}}}],["backers",{"_index":1753,"title":{},"body":{"index.html":{}}}],["badrequestexception",{"_index":355,"title":{},"body":{"injectables/BankAccountService.html":{},"injectables/UserClientService.html":{}}}],["badrequestexception('invalid",{"_index":360,"title":{},"body":{"injectables/BankAccountService.html":{}}}],["badrequestexception('user",{"_index":1433,"title":{},"body":{"injectables/UserClientService.html":{}}}],["bank",{"_index":234,"title":{"classes/Bank.html":{}},"body":{"classes/Bank.html":{},"classes/BankAccount.html":{},"controllers/BankAccountController.html":{},"modules/BankAccountModule.html":{},"injectables/BankAccountService.html":{},"modules/BankSeederModule.html":{},"injectables/BankSeederService.html":{},"classes/ClientBankAccount.html":{},"injectables/ClientBankAccountService.html":{},"classes/Country.html":{},"classes/RoutingNumber.html":{},"injectables/Seeder.html":{},"classes/State.html":{},"classes/StateBankAccount.html":{},"injectables/StateBankAccountService.html":{},"classes/Transaction.html":{},"injectables/TransactionService.html":{},"classes/UserClient.html":{},"classes/UserDetails.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["bank.data",{"_index":405,"title":{},"body":{"injectables/BankSeederService.html":{}}}],["bank.idbank",{"_index":453,"title":{},"body":{"classes/Country.html":{},"classes/RoutingNumber.html":{}}}],["bank.map(bank",{"_index":407,"title":{},"body":{"injectables/BankSeederService.html":{}}}],["bank.service",{"_index":396,"title":{},"body":{"modules/BankSeederModule.html":{}}}],["bank/bank.entity",{"_index":955,"title":{},"body":{"classes/RoutingNumber.html":{}}}],["bank/bank.module",{"_index":1056,"title":{},"body":{"modules/SeederModule.html":{}}}],["bank/bank.service",{"_index":984,"title":{},"body":{"injectables/Seeder.html":{}}}],["bank_account",{"_index":316,"title":{},"body":{"controllers/BankAccountController.html":{},"injectables/BankAccountService.html":{},"injectables/StateBankAccountService.html":{},"injectables/TransactionService.html":{},"miscellaneous/enumerations.html":{}}}],["bank_account_validation",{"_index":1707,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["bank_rows",{"_index":995,"title":{},"body":{"injectables/Seeder.html":{}}}],["bankaccount",{"_index":268,"title":{"classes/BankAccount.html":{}},"body":{"classes/BankAccount.html":{},"controllers/BankAccountController.html":{},"modules/BankAccountModule.html":{},"injectables/BankAccountService.html":{},"classes/ClientBankAccount.html":{},"injectables/ClientBankAccountService.html":{},"classes/RoutingNumber.html":{},"classes/UserDetails.html":{},"coverage.html":{}}}],["bankaccount.idbankaccount",{"_index":381,"title":{},"body":{"injectables/BankAccountService.html":{},"classes/ClientBankAccount.html":{},"classes/RoutingNumber.html":{},"classes/UserDetails.html":{}}}],["bankaccountcontroller",{"_index":292,"title":{"controllers/BankAccountController.html":{}},"body":{"controllers/BankAccountController.html":{},"modules/BankAccountModule.html":{},"coverage.html":{}}}],["bankaccountcreated",{"_index":322,"title":{},"body":{"controllers/BankAccountController.html":{}}}],["bankaccountmodule",{"_index":13,"title":{"modules/BankAccountModule.html":{}},"body":{"modules/AppModule.html":{},"modules/BankAccountModule.html":{},"modules.html":{},"overview.html":{}}}],["bankaccountrepository",{"_index":348,"title":{},"body":{"injectables/BankAccountService.html":{}}}],["bankaccountservice",{"_index":327,"title":{"injectables/BankAccountService.html":{}},"body":{"modules/BankAccountModule.html":{},"injectables/BankAccountService.html":{},"injectables/ClientBankAccountService.html":{},"coverage.html":{},"overview.html":{}}}],["bankrepository",{"_index":402,"title":{},"body":{"injectables/BankSeederService.html":{}}}],["bankseedermodule",{"_index":389,"title":{"modules/BankSeederModule.html":{}},"body":{"modules/BankSeederModule.html":{},"modules/SeederModule.html":{},"modules.html":{},"overview.html":{}}}],["bankseederservice",{"_index":393,"title":{"injectables/BankSeederService.html":{}},"body":{"modules/BankSeederModule.html":{},"injectables/BankSeederService.html":{},"injectables/Seeder.html":{},"coverage.html":{},"overview.html":{}}}],["baseentity",{"_index":239,"title":{},"body":{"classes/Bank.html":{},"classes/BankAccount.html":{},"classes/ClientBankAccount.html":{},"classes/Country.html":{},"classes/Language.html":{},"classes/PlatformInterest.html":{},"classes/PointsConversion.html":{},"classes/Promotion.html":{},"classes/Role.html":{},"classes/RoutingNumber.html":{},"classes/State.html":{},"classes/StateBankAccount.html":{},"classes/StateTransaction.html":{},"classes/StateUser.html":{},"classes/Suscription.html":{},"classes/ThirdPartyInterest.html":{},"classes/Transaction.html":{},"classes/TransactionInterest.html":{},"classes/UserAdministrator.html":{},"classes/UserClient.html":{},"classes/UserDetails.html":{},"classes/UserRole.html":{},"classes/UserSuscription.html":{}}}],["baserandomamount",{"_index":1334,"title":{},"body":{"injectables/TransactionService.html":{}}}],["baserandomamount).tofixed(2",{"_index":1339,"title":{},"body":{"injectables/TransactionService.html":{}}}],["basic",{"_index":1914,"title":{},"body":{"miscellaneous/variables.html":{}}}],["bb&t",{"_index":1797,"title":{},"body":{"miscellaneous/variables.html":{}}}],["bbva",{"_index":1799,"title":{},"body":{"miscellaneous/variables.html":{}}}],["bcrypt",{"_index":190,"title":{},"body":{"injectables/AuthService.html":{},"interfaces/Response.html":{},"injectables/TransformSignUpInterceptor.html":{},"dependencies.html":{}}}],["bcrypt.gensalt",{"_index":883,"title":{},"body":{"interfaces/Response.html":{},"injectables/TransformSignUpInterceptor.html":{}}}],["bcrypt.hash(password",{"_index":233,"title":{},"body":{"injectables/AuthService.html":{}}}],["birthdate",{"_index":490,"title":{},"body":{"classes/CreateUserDTO.html":{},"injectables/UserClientService.html":{},"classes/UserDetails.html":{}}}],["blocked",{"_index":1698,"title":{},"body":{"miscellaneous/enumerations.html":{},"miscellaneous/variables.html":{}}}],["body",{"_index":102,"title":{},"body":{"controllers/AuthController.html":{},"controllers/BankAccountController.html":{}}}],["body(validationpipe",{"_index":315,"title":{},"body":{"controllers/BankAccountController.html":{}}}],["bodyformdata",{"_index":797,"title":{},"body":{"injectables/PoeditorService.html":{}}}],["bodyformdata.append('api_token",{"_index":798,"title":{},"body":{"injectables/PoeditorService.html":{}}}],["bodyformdata.append('id",{"_index":800,"title":{},"body":{"injectables/PoeditorService.html":{}}}],["bodyformdata.append('language",{"_index":802,"title":{},"body":{"injectables/PoeditorService.html":{}}}],["bodyformdata.getheaders",{"_index":810,"title":{},"body":{"injectables/PoeditorService.html":{}}}],["boolean",{"_index":354,"title":{},"body":{"injectables/BankAccountService.html":{},"guards/RolesGuard.html":{}}}],["bootstrap",{"_index":6,"title":{},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/BankAccountModule.html":{},"modules/BankSeederModule.html":{},"modules/CountrySeederModule.html":{},"modules/ExampleModule.html":{},"modules/LanguageModule.html":{},"modules/LanguageSeederModule.html":{},"modules/MailsModule.html":{},"modules/ManagementModule.html":{},"modules/PlatformInterestSeederModule.html":{},"modules/PointsConversionSeederModule.html":{},"modules/RoleSeederModule.html":{},"modules/SeederModule.html":{},"modules/StatesSeederModule.html":{},"modules/SuscriptionSeederModule.html":{},"modules/ThirdPartyInterestSeederModule.html":{},"modules/TransactionModule.html":{},"modules/UserModule.html":{},"coverage.html":{},"miscellaneous/functions.html":{},"overview.html":{}}}],["browse",{"_index":1771,"title":{},"body":{"modules.html":{}}}],["browser",{"_index":1769,"title":{},"body":{"modules.html":{}}}],["building",{"_index":1718,"title":{},"body":{"index.html":{}}}],["buy",{"_index":1691,"title":{},"body":{"miscellaneous/enumerations.html":{},"miscellaneous/variables.html":{}}}],["callhandler",{"_index":871,"title":{},"body":{"interfaces/Response.html":{},"injectables/TransformSignUpInterceptor.html":{}}}],["canactivate",{"_index":919,"title":{},"body":{"guards/RolesGuard.html":{}}}],["canactivate(context",{"_index":922,"title":{},"body":{"guards/RolesGuard.html":{}}}],["canceled",{"_index":1910,"title":{},"body":{"miscellaneous/variables.html":{}}}],["cancelled",{"_index":1699,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["cant",{"_index":1911,"title":{},"body":{"miscellaneous/variables.html":{}}}],["capital",{"_index":1801,"title":{},"body":{"miscellaneous/variables.html":{}}}],["catch",{"_index":692,"title":{},"body":{"injectables/MailsService.html":{}}}],["catch(error",{"_index":999,"title":{},"body":{"injectables/Seeder.html":{}}}],["cfg",{"_index":1902,"title":{},"body":{"miscellaneous/variables.html":{}}}],["cfg.get('mails.sendgrid.apikey",{"_index":1904,"title":{},"body":{"miscellaneous/variables.html":{}}}],["chase",{"_index":1819,"title":{},"body":{"miscellaneous/variables.html":{}}}],["check",{"_index":551,"title":{},"body":{"controllers/ExampleController.html":{}}}],["checknumber",{"_index":271,"title":{},"body":{"classes/BankAccount.html":{},"classes/CreateBankAccountDTO.html":{}}}],["citibank",{"_index":1803,"title":{},"body":{"miscellaneous/variables.html":{}}}],["citizens",{"_index":1805,"title":{},"body":{"miscellaneous/variables.html":{}}}],["class",{"_index":69,"title":{"classes/Bank.html":{},"classes/BankAccount.html":{},"classes/ClientBankAccount.html":{},"classes/Country.html":{},"classes/CreateBankAccountDTO.html":{},"classes/CreateUserDTO.html":{},"classes/Language.html":{},"classes/PlatformInterest.html":{},"classes/PointsConversion.html":{},"classes/Promotion.html":{},"classes/Role.html":{},"classes/RoutingNumber.html":{},"classes/State.html":{},"classes/StateBankAccount.html":{},"classes/StateTransaction.html":{},"classes/StateUser.html":{},"classes/Suscription.html":{},"classes/ThirdPartyInterest.html":{},"classes/Transaction.html":{},"classes/TransactionInterest.html":{},"classes/UserAdministrator.html":{},"classes/UserClient.html":{},"classes/UserDetails.html":{},"classes/UserRole.html":{},"classes/UserSuscription.html":{}},"body":{"modules/AppModule.html":{},"controllers/AuthController.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"classes/Bank.html":{},"classes/BankAccount.html":{},"controllers/BankAccountController.html":{},"modules/BankAccountModule.html":{},"injectables/BankAccountService.html":{},"modules/BankSeederModule.html":{},"injectables/BankSeederService.html":{},"classes/ClientBankAccount.html":{},"injectables/ClientBankAccountService.html":{},"classes/Country.html":{},"modules/CountrySeederModule.html":{},"injectables/CountrySeederService.html":{},"classes/CreateBankAccountDTO.html":{},"classes/CreateUserDTO.html":{},"modules/DatabaseModule.html":{},"controllers/ExampleController.html":{},"modules/ExampleModule.html":{},"injectables/JwtStrategy.html":{},"classes/Language.html":{},"controllers/LanguageController.html":{},"modules/LanguageModule.html":{},"modules/LanguageSeederModule.html":{},"injectables/LanguageSeederService.html":{},"injectables/LanguageService.html":{},"modules/MailsModule.html":{},"injectables/MailsService.html":{},"modules/ManagementModule.html":{},"classes/PlatformInterest.html":{},"modules/PlatformInterestSeederModule.html":{},"injectables/PlatformInterestSeederService.html":{},"injectables/PlatformInterestService.html":{},"injectables/PoeditorService.html":{},"classes/PointsConversion.html":{},"modules/PointsConversionSeederModule.html":{},"injectables/PointsConversionSeederService.html":{},"injectables/PointsConversionService.html":{},"classes/Promotion.html":{},"interfaces/Response.html":{},"classes/Role.html":{},"modules/RoleSeederModule.html":{},"injectables/RoleService.html":{},"guards/RolesGuard.html":{},"injectables/RolesSeederService.html":{},"classes/RoutingNumber.html":{},"injectables/Seeder.html":{},"modules/SeederModule.html":{},"classes/State.html":{},"classes/StateBankAccount.html":{},"injectables/StateBankAccountService.html":{},"injectables/StateSeederService.html":{},"injectables/StateService.html":{},"classes/StateTransaction.html":{},"injectables/StateTransactionService.html":{},"classes/StateUser.html":{},"injectables/StateUserService.html":{},"modules/StatesSeederModule.html":{},"classes/Suscription.html":{},"modules/SuscriptionModule.html":{},"modules/SuscriptionSeederModule.html":{},"injectables/SuscriptionSeederService.html":{},"classes/ThirdPartyInterest.html":{},"modules/ThirdPartyInterestSeederModule.html":{},"injectables/ThirdPartyInterestSeederService.html":{},"injectables/ThirdPartyInterestService.html":{},"classes/Transaction.html":{},"classes/TransactionInterest.html":{},"injectables/TransactionInterestService.html":{},"modules/TransactionModule.html":{},"injectables/TransactionService.html":{},"injectables/TransformSignUpInterceptor.html":{},"classes/UserAdministrator.html":{},"injectables/UserAdministratorService.html":{},"classes/UserClient.html":{},"injectables/UserClientService.html":{},"controllers/UserController.html":{},"classes/UserDetails.html":{},"injectables/UserDetailsService.html":{},"modules/UserModule.html":{},"classes/UserRole.html":{},"injectables/UserRoleService.html":{},"injectables/UserService.html":{},"classes/UserSuscription.html":{},"coverage.html":{},"dependencies.html":{}}}],["classes",{"_index":235,"title":{},"body":{"classes/Bank.html":{},"classes/BankAccount.html":{},"classes/ClientBankAccount.html":{},"classes/Country.html":{},"classes/CreateBankAccountDTO.html":{},"classes/CreateUserDTO.html":{},"classes/Language.html":{},"classes/PlatformInterest.html":{},"classes/PointsConversion.html":{},"classes/Promotion.html":{},"classes/Role.html":{},"classes/RoutingNumber.html":{},"classes/State.html":{},"classes/StateBankAccount.html":{},"classes/StateTransaction.html":{},"classes/StateUser.html":{},"classes/Suscription.html":{},"classes/ThirdPartyInterest.html":{},"classes/Transaction.html":{},"classes/TransactionInterest.html":{},"classes/UserAdministrator.html":{},"classes/UserClient.html":{},"classes/UserDetails.html":{},"classes/UserRole.html":{},"classes/UserSuscription.html":{},"overview.html":{}}}],["classserializerinterceptor",{"_index":1454,"title":{},"body":{"controllers/UserController.html":{}}}],["clean",{"_index":958,"title":{},"body":{"injectables/Seeder.html":{}}}],["client",{"_index":124,"title":{},"body":{"controllers/AuthController.html":{},"classes/BankAccount.html":{},"controllers/BankAccountController.html":{},"modules/BankAccountModule.html":{},"injectables/ClientBankAccountService.html":{},"controllers/ExampleController.html":{},"classes/StateBankAccount.html":{},"injectables/StateBankAccountService.html":{},"injectables/UserClientService.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/variables.html":{}}}],["client.\"iduserclient",{"_index":1446,"title":{},"body":{"injectables/UserClientService.html":{}}}],["client.entity",{"_index":421,"title":{},"body":{"classes/ClientBankAccount.html":{},"classes/StateUser.html":{},"injectables/StateUserService.html":{},"injectables/UserClientService.html":{},"classes/UserDetails.html":{},"injectables/UserDetailsService.html":{},"modules/UserModule.html":{},"classes/UserRole.html":{},"injectables/UserRoleService.html":{},"classes/UserSuscription.html":{}}}],["client.entity.ts",{"_index":1393,"title":{},"body":{"classes/UserClient.html":{},"coverage.html":{}}}],["client.entity.ts:20",{"_index":1399,"title":{},"body":{"classes/UserClient.html":{}}}],["client.entity.ts:24",{"_index":1402,"title":{},"body":{"classes/UserClient.html":{}}}],["client.entity.ts:27",{"_index":1398,"title":{},"body":{"classes/UserClient.html":{}}}],["client.entity.ts:30",{"_index":1397,"title":{},"body":{"classes/UserClient.html":{}}}],["client.entity.ts:33",{"_index":1396,"title":{},"body":{"classes/UserClient.html":{}}}],["client.entity.ts:37",{"_index":1401,"title":{},"body":{"classes/UserClient.html":{}}}],["client.entity.ts:44",{"_index":1403,"title":{},"body":{"classes/UserClient.html":{}}}],["client.entity.ts:51",{"_index":1405,"title":{},"body":{"classes/UserClient.html":{}}}],["client.entity.ts:58",{"_index":1404,"title":{},"body":{"classes/UserClient.html":{}}}],["client.entity.ts:65",{"_index":1406,"title":{},"body":{"classes/UserClient.html":{}}}],["client.entity.ts:72",{"_index":1395,"title":{},"body":{"classes/UserClient.html":{}}}],["client.service",{"_index":194,"title":{},"body":{"injectables/AuthService.html":{},"injectables/ClientBankAccountService.html":{},"modules/UserModule.html":{},"injectables/UserService.html":{}}}],["client.service.ts",{"_index":1409,"title":{},"body":{"injectables/UserClientService.html":{},"coverage.html":{}}}],["client.service.ts:102",{"_index":1425,"title":{},"body":{"injectables/UserClientService.html":{}}}],["client.service.ts:119",{"_index":1427,"title":{},"body":{"injectables/UserClientService.html":{}}}],["client.service.ts:25",{"_index":1417,"title":{},"body":{"injectables/UserClientService.html":{}}}],["client.service.ts:35",{"_index":1423,"title":{},"body":{"injectables/UserClientService.html":{}}}],["client.service.ts:39",{"_index":1422,"title":{},"body":{"injectables/UserClientService.html":{}}}],["client.service.ts:79",{"_index":1420,"title":{},"body":{"injectables/UserClientService.html":{}}}],["client/user",{"_index":193,"title":{},"body":{"injectables/AuthService.html":{},"classes/ClientBankAccount.html":{},"injectables/ClientBankAccountService.html":{},"classes/StateUser.html":{},"injectables/StateUserService.html":{},"classes/UserClient.html":{},"injectables/UserClientService.html":{},"classes/UserDetails.html":{},"injectables/UserDetailsService.html":{},"modules/UserModule.html":{},"classes/UserRole.html":{},"injectables/UserRoleService.html":{},"injectables/UserService.html":{},"classes/UserSuscription.html":{},"coverage.html":{}}}],["clientbankaccount",{"_index":272,"title":{"classes/ClientBankAccount.html":{}},"body":{"classes/BankAccount.html":{},"controllers/BankAccountController.html":{},"modules/BankAccountModule.html":{},"classes/ClientBankAccount.html":{},"injectables/ClientBankAccountService.html":{},"classes/StateBankAccount.html":{},"injectables/StateBankAccountService.html":{},"classes/Transaction.html":{},"injectables/TransactionService.html":{},"classes/UserClient.html":{},"coverage.html":{}}}],["clientbankaccount.bankaccount.idbankaccount",{"_index":1099,"title":{},"body":{"injectables/StateBankAccountService.html":{}}}],["clientbankaccount.idclientbankaccount",{"_index":290,"title":{},"body":{"classes/BankAccount.html":{},"classes/StateBankAccount.html":{},"classes/Transaction.html":{},"classes/UserClient.html":{}}}],["clientbankaccountrepository",{"_index":427,"title":{},"body":{"injectables/ClientBankAccountService.html":{}}}],["clientbankaccountservice",{"_index":302,"title":{"injectables/ClientBankAccountService.html":{}},"body":{"controllers/BankAccountController.html":{},"modules/BankAccountModule.html":{},"injectables/ClientBankAccountService.html":{},"coverage.html":{},"overview.html":{}}}],["clients",{"_index":564,"title":{},"body":{"controllers/ExampleController.html":{},"injectables/UserService.html":{}}}],["cluster_appmodule",{"_index":9,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["cluster_appmodule_imports",{"_index":10,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["cluster_authmodule",{"_index":139,"title":{},"body":{"modules/AuthModule.html":{},"overview.html":{}}}],["cluster_authmodule_imports",{"_index":140,"title":{},"body":{"modules/AuthModule.html":{}}}],["cluster_authmodule_providers",{"_index":141,"title":{},"body":{"modules/AuthModule.html":{},"overview.html":{}}}],["cluster_bankaccountmodule",{"_index":323,"title":{},"body":{"modules/BankAccountModule.html":{},"overview.html":{}}}],["cluster_bankaccountmodule_exports",{"_index":325,"title":{},"body":{"modules/BankAccountModule.html":{},"overview.html":{}}}],["cluster_bankaccountmodule_imports",{"_index":324,"title":{},"body":{"modules/BankAccountModule.html":{}}}],["cluster_bankaccountmodule_providers",{"_index":326,"title":{},"body":{"modules/BankAccountModule.html":{},"overview.html":{}}}],["cluster_bankseedermodule",{"_index":390,"title":{},"body":{"modules/BankSeederModule.html":{},"overview.html":{}}}],["cluster_bankseedermodule_exports",{"_index":391,"title":{},"body":{"modules/BankSeederModule.html":{},"overview.html":{}}}],["cluster_bankseedermodule_providers",{"_index":392,"title":{},"body":{"modules/BankSeederModule.html":{},"overview.html":{}}}],["cluster_countryseedermodule",{"_index":455,"title":{},"body":{"modules/CountrySeederModule.html":{},"overview.html":{}}}],["cluster_countryseedermodule_exports",{"_index":456,"title":{},"body":{"modules/CountrySeederModule.html":{},"overview.html":{}}}],["cluster_countryseedermodule_providers",{"_index":457,"title":{},"body":{"modules/CountrySeederModule.html":{},"overview.html":{}}}],["cluster_examplemodule",{"_index":573,"title":{},"body":{"modules/ExampleModule.html":{}}}],["cluster_examplemodule_imports",{"_index":574,"title":{},"body":{"modules/ExampleModule.html":{}}}],["cluster_languagemodule",{"_index":623,"title":{},"body":{"modules/LanguageModule.html":{},"overview.html":{}}}],["cluster_languagemodule_providers",{"_index":624,"title":{},"body":{"modules/LanguageModule.html":{},"overview.html":{}}}],["cluster_languageseedermodule",{"_index":631,"title":{},"body":{"modules/LanguageSeederModule.html":{},"overview.html":{}}}],["cluster_languageseedermodule_exports",{"_index":632,"title":{},"body":{"modules/LanguageSeederModule.html":{},"overview.html":{}}}],["cluster_languageseedermodule_providers",{"_index":633,"title":{},"body":{"modules/LanguageSeederModule.html":{},"overview.html":{}}}],["cluster_mailsmodule",{"_index":654,"title":{},"body":{"modules/MailsModule.html":{},"overview.html":{}}}],["cluster_mailsmodule_exports",{"_index":655,"title":{},"body":{"modules/MailsModule.html":{},"overview.html":{}}}],["cluster_mailsmodule_providers",{"_index":656,"title":{},"body":{"modules/MailsModule.html":{},"overview.html":{}}}],["cluster_managementmodule",{"_index":698,"title":{},"body":{"modules/ManagementModule.html":{},"overview.html":{}}}],["cluster_managementmodule_exports",{"_index":699,"title":{},"body":{"modules/ManagementModule.html":{},"overview.html":{}}}],["cluster_managementmodule_providers",{"_index":700,"title":{},"body":{"modules/ManagementModule.html":{},"overview.html":{}}}],["cluster_platforminterestseedermodule",{"_index":761,"title":{},"body":{"modules/PlatformInterestSeederModule.html":{},"overview.html":{}}}],["cluster_platforminterestseedermodule_exports",{"_index":762,"title":{},"body":{"modules/PlatformInterestSeederModule.html":{},"overview.html":{}}}],["cluster_platforminterestseedermodule_providers",{"_index":763,"title":{},"body":{"modules/PlatformInterestSeederModule.html":{},"overview.html":{}}}],["cluster_pointsconversionseedermodule",{"_index":823,"title":{},"body":{"modules/PointsConversionSeederModule.html":{},"overview.html":{}}}],["cluster_pointsconversionseedermodule_exports",{"_index":824,"title":{},"body":{"modules/PointsConversionSeederModule.html":{},"overview.html":{}}}],["cluster_pointsconversionseedermodule_providers",{"_index":825,"title":{},"body":{"modules/PointsConversionSeederModule.html":{},"overview.html":{}}}],["cluster_roleseedermodule",{"_index":897,"title":{},"body":{"modules/RoleSeederModule.html":{},"overview.html":{}}}],["cluster_roleseedermodule_exports",{"_index":898,"title":{},"body":{"modules/RoleSeederModule.html":{},"overview.html":{}}}],["cluster_roleseedermodule_providers",{"_index":899,"title":{},"body":{"modules/RoleSeederModule.html":{},"overview.html":{}}}],["cluster_seedermodule",{"_index":1041,"title":{},"body":{"modules/SeederModule.html":{},"overview.html":{}}}],["cluster_seedermodule_imports",{"_index":1042,"title":{},"body":{"modules/SeederModule.html":{},"overview.html":{}}}],["cluster_seedermodule_providers",{"_index":1043,"title":{},"body":{"modules/SeederModule.html":{},"overview.html":{}}}],["cluster_statesseedermodule",{"_index":1172,"title":{},"body":{"modules/StatesSeederModule.html":{},"overview.html":{}}}],["cluster_statesseedermodule_exports",{"_index":1173,"title":{},"body":{"modules/StatesSeederModule.html":{},"overview.html":{}}}],["cluster_statesseedermodule_providers",{"_index":1174,"title":{},"body":{"modules/StatesSeederModule.html":{},"overview.html":{}}}],["cluster_suscriptionseedermodule",{"_index":1196,"title":{},"body":{"modules/SuscriptionSeederModule.html":{},"overview.html":{}}}],["cluster_suscriptionseedermodule_exports",{"_index":1197,"title":{},"body":{"modules/SuscriptionSeederModule.html":{},"overview.html":{}}}],["cluster_suscriptionseedermodule_providers",{"_index":1198,"title":{},"body":{"modules/SuscriptionSeederModule.html":{},"overview.html":{}}}],["cluster_thirdpartyinterestseedermodule",{"_index":1220,"title":{},"body":{"modules/ThirdPartyInterestSeederModule.html":{},"overview.html":{}}}],["cluster_thirdpartyinterestseedermodule_exports",{"_index":1221,"title":{},"body":{"modules/ThirdPartyInterestSeederModule.html":{},"overview.html":{}}}],["cluster_thirdpartyinterestseedermodule_providers",{"_index":1222,"title":{},"body":{"modules/ThirdPartyInterestSeederModule.html":{},"overview.html":{}}}],["cluster_transactionmodule",{"_index":1289,"title":{},"body":{"modules/TransactionModule.html":{},"overview.html":{}}}],["cluster_transactionmodule_exports",{"_index":1291,"title":{},"body":{"modules/TransactionModule.html":{},"overview.html":{}}}],["cluster_transactionmodule_imports",{"_index":1290,"title":{},"body":{"modules/TransactionModule.html":{}}}],["cluster_transactionmodule_providers",{"_index":1292,"title":{},"body":{"modules/TransactionModule.html":{},"overview.html":{}}}],["cluster_usermodule",{"_index":1511,"title":{},"body":{"modules/UserModule.html":{},"overview.html":{}}}],["cluster_usermodule_exports",{"_index":1513,"title":{},"body":{"modules/UserModule.html":{},"overview.html":{}}}],["cluster_usermodule_imports",{"_index":1512,"title":{},"body":{"modules/UserModule.html":{}}}],["cluster_usermodule_providers",{"_index":1514,"title":{},"body":{"modules/UserModule.html":{},"overview.html":{}}}],["column",{"_index":253,"title":{},"body":{"classes/Bank.html":{},"classes/BankAccount.html":{},"classes/Country.html":{},"classes/Language.html":{},"classes/PlatformInterest.html":{},"classes/PointsConversion.html":{},"classes/Promotion.html":{},"classes/Role.html":{},"classes/RoutingNumber.html":{},"classes/State.html":{},"classes/StateBankAccount.html":{},"classes/StateTransaction.html":{},"classes/StateUser.html":{},"classes/Suscription.html":{},"classes/ThirdPartyInterest.html":{},"classes/Transaction.html":{},"classes/UserAdministrator.html":{},"classes/UserClient.html":{},"classes/UserDetails.html":{},"classes/UserSuscription.html":{}}}],["column('decimal",{"_index":735,"title":{},"body":{"classes/PlatformInterest.html":{},"classes/PointsConversion.html":{},"classes/Promotion.html":{},"classes/Transaction.html":{}}}],["column({default",{"_index":743,"title":{},"body":{"classes/PlatformInterest.html":{},"classes/PointsConversion.html":{},"classes/Promotion.html":{},"classes/ThirdPartyInterest.html":{},"classes/UserSuscription.html":{}}}],["column({nullable",{"_index":279,"title":{},"body":{"classes/BankAccount.html":{},"classes/PlatformInterest.html":{},"classes/PointsConversion.html":{},"classes/Promotion.html":{},"classes/State.html":{},"classes/StateBankAccount.html":{},"classes/StateTransaction.html":{},"classes/StateUser.html":{},"classes/Suscription.html":{},"classes/ThirdPartyInterest.html":{},"classes/UserAdministrator.html":{},"classes/UserClient.html":{},"classes/UserDetails.html":{},"classes/UserSuscription.html":{}}}],["column({type",{"_index":1080,"title":{},"body":{"classes/StateBankAccount.html":{},"classes/StateTransaction.html":{},"classes/StateUser.html":{},"classes/Transaction.html":{}}}],["column({unique",{"_index":449,"title":{},"body":{"classes/Country.html":{},"classes/Role.html":{},"classes/UserAdministrator.html":{},"classes/UserClient.html":{}}}],["commonformat",{"_index":1584,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["compass",{"_index":1800,"title":{},"body":{"miscellaneous/variables.html":{}}}],["completed",{"_index":998,"title":{},"body":{"injectables/Seeder.html":{}}}],["completeregistrationclient",{"_index":1410,"title":{},"body":{"injectables/UserClientService.html":{}}}],["completeregistrationclient(userclient",{"_index":1418,"title":{},"body":{"injectables/UserClientService.html":{}}}],["compodoc/compodoc",{"_index":1633,"title":{},"body":{"dependencies.html":{}}}],["config",{"_index":43,"title":{},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"dependencies.html":{}}}],["config.get('db",{"_index":1877,"title":{},"body":{"miscellaneous/variables.html":{}}}],["config.get('jwt.expiresin",{"_index":159,"title":{},"body":{"modules/AuthModule.html":{}}}],["config.get('jwt.secret",{"_index":156,"title":{},"body":{"modules/AuthModule.html":{}}}],["config.ts",{"_index":1588,"title":{},"body":{"coverage.html":{},"interfaces/createOptionsParams.html":{},"miscellaneous/functions.html":{}}}],["config/configuration",{"_index":37,"title":{},"body":{"modules/AppModule.html":{}}}],["configmodule",{"_index":34,"title":{},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/LanguageModule.html":{},"miscellaneous/variables.html":{}}}],["configmodule.forroot",{"_index":56,"title":{},"body":{"modules/AppModule.html":{}}}],["configservice",{"_index":145,"title":{},"body":{"modules/AuthModule.html":{},"injectables/AuthService.html":{},"controllers/ExampleController.html":{},"injectables/JwtStrategy.html":{},"modules/MailsModule.html":{},"injectables/PoeditorService.html":{},"miscellaneous/variables.html":{}}}],["configservice.get('database",{"_index":1855,"title":{},"body":{"miscellaneous/variables.html":{}}}],["configservice.get('jwt.secret",{"_index":594,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["configservice.get('mails.sendgrid.emailfrom",{"_index":664,"title":{},"body":{"modules/MailsModule.html":{}}}],["configservice.get('mails.sendgrid.templates",{"_index":666,"title":{},"body":{"modules/MailsModule.html":{}}}],["configuration",{"_index":36,"title":{},"body":{"modules/AppModule.html":{}}}],["connection",{"_index":1161,"title":{},"body":{"injectables/StateUserService.html":{},"injectables/UserRoleService.html":{}}}],["consoleformat",{"_index":1585,"title":{},"body":{"coverage.html":{},"interfaces/createOptionsParams.html":{},"miscellaneous/variables.html":{}}}],["const",{"_index":135,"title":{},"body":{"controllers/AuthController.html":{},"injectables/AuthService.html":{},"controllers/BankAccountController.html":{},"injectables/BankAccountService.html":{},"injectables/ClientBankAccountService.html":{},"injectables/JwtStrategy.html":{},"injectables/MailsService.html":{},"injectables/PoeditorService.html":{},"interfaces/Response.html":{},"guards/RolesGuard.html":{},"injectables/Seeder.html":{},"injectables/StateBankAccountService.html":{},"injectables/StateTransactionService.html":{},"injectables/StateUserService.html":{},"injectables/TransactionInterestService.html":{},"injectables/TransactionService.html":{},"injectables/TransformSignUpInterceptor.html":{},"injectables/UserClientService.html":{},"injectables/UserDetailsService.html":{},"injectables/UserRoleService.html":{},"injectables/UserService.html":{},"interfaces/createOptionsParams.html":{},"miscellaneous/variables.html":{}}}],["constructor",{"_index":116,"title":{},"body":{"controllers/AuthController.html":{},"injectables/AuthService.html":{},"controllers/BankAccountController.html":{},"injectables/BankAccountService.html":{},"injectables/BankSeederService.html":{},"injectables/ClientBankAccountService.html":{},"injectables/CountrySeederService.html":{},"controllers/ExampleController.html":{},"injectables/JwtStrategy.html":{},"injectables/LanguageSeederService.html":{},"injectables/LanguageService.html":{},"injectables/MailsService.html":{},"injectables/PlatformInterestSeederService.html":{},"injectables/PlatformInterestService.html":{},"injectables/PoeditorService.html":{},"injectables/PointsConversionSeederService.html":{},"injectables/PointsConversionService.html":{},"injectables/RoleService.html":{},"guards/RolesGuard.html":{},"injectables/RolesSeederService.html":{},"injectables/Seeder.html":{},"injectables/StateBankAccountService.html":{},"injectables/StateSeederService.html":{},"injectables/StateService.html":{},"injectables/StateTransactionService.html":{},"injectables/StateUserService.html":{},"injectables/SuscriptionSeederService.html":{},"injectables/ThirdPartyInterestSeederService.html":{},"injectables/ThirdPartyInterestService.html":{},"injectables/TransactionService.html":{},"injectables/TransformSignUpInterceptor.html":{},"injectables/UserClientService.html":{},"controllers/UserController.html":{},"injectables/UserDetailsService.html":{},"injectables/UserRoleService.html":{},"injectables/UserService.html":{}}}],["constructor(@inject(authservice",{"_index":875,"title":{},"body":{"interfaces/Response.html":{},"injectables/TransformSignUpInterceptor.html":{}}}],["constructor(authservice",{"_index":1357,"title":{},"body":{"injectables/TransformSignUpInterceptor.html":{}}}],["constructor(bankaccountrepository",{"_index":344,"title":{},"body":{"injectables/BankAccountService.html":{}}}],["constructor(bankaccountservice",{"_index":426,"title":{},"body":{"injectables/ClientBankAccountService.html":{}}}],["constructor(bankrepository",{"_index":400,"title":{},"body":{"injectables/BankSeederService.html":{}}}],["constructor(configservice",{"_index":789,"title":{},"body":{"injectables/PoeditorService.html":{}}}],["constructor(countryrepository",{"_index":465,"title":{},"body":{"injectables/CountrySeederService.html":{}}}],["constructor(languagerepository",{"_index":640,"title":{},"body":{"injectables/LanguageSeederService.html":{},"injectables/UserDetailsService.html":{}}}],["constructor(logger",{"_index":168,"title":{},"body":{"injectables/AuthService.html":{},"injectables/JwtStrategy.html":{},"guards/RolesGuard.html":{},"injectables/UserClientService.html":{}}}],["constructor(platforminterestrepository",{"_index":771,"title":{},"body":{"injectables/PlatformInterestSeederService.html":{},"injectables/PlatformInterestService.html":{}}}],["constructor(poeditorservice",{"_index":650,"title":{},"body":{"injectables/LanguageService.html":{}}}],["constructor(pointsconversionrepository",{"_index":833,"title":{},"body":{"injectables/PointsConversionSeederService.html":{},"injectables/PointsConversionService.html":{}}}],["constructor(private",{"_index":620,"title":{},"body":{"controllers/LanguageController.html":{},"injectables/LanguageService.html":{},"injectables/StateTransactionService.html":{},"injectables/StateUserService.html":{},"injectables/UserRoleService.html":{}}}],["constructor(rolerepository",{"_index":907,"title":{},"body":{"injectables/RoleService.html":{},"injectables/RolesSeederService.html":{}}}],["constructor(roleservice",{"_index":1529,"title":{},"body":{"injectables/UserRoleService.html":{}}}],["constructor(sendgridclient",{"_index":670,"title":{},"body":{"injectables/MailsService.html":{}}}],["constructor(staterepository",{"_index":1104,"title":{},"body":{"injectables/StateSeederService.html":{},"injectables/StateService.html":{}}}],["constructor(stateseederservice",{"_index":960,"title":{},"body":{"injectables/Seeder.html":{}}}],["constructor(stateservice",{"_index":1091,"title":{},"body":{"injectables/StateBankAccountService.html":{},"injectables/StateTransactionService.html":{},"injectables/StateUserService.html":{}}}],["constructor(suscriptionrepository",{"_index":1205,"title":{},"body":{"injectables/SuscriptionSeederService.html":{}}}],["constructor(thirdpartyinterestrepository",{"_index":1229,"title":{},"body":{"injectables/ThirdPartyInterestSeederService.html":{},"injectables/ThirdPartyInterestService.html":{}}}],["constructor(transactionrepository",{"_index":1301,"title":{},"body":{"injectables/TransactionService.html":{}}}],["constructor(userclientservice",{"_index":1540,"title":{},"body":{"injectables/UserService.html":{}}}],["context",{"_index":877,"title":{},"body":{"interfaces/Response.html":{},"guards/RolesGuard.html":{},"injectables/TransformSignUpInterceptor.html":{}}}],["context.gethandler",{"_index":926,"title":{},"body":{"guards/RolesGuard.html":{}}}],["context.switchtohttp().getrequest",{"_index":880,"title":{},"body":{"interfaces/Response.html":{},"guards/RolesGuard.html":{},"injectables/TransformSignUpInterceptor.html":{}}}],["controller",{"_index":73,"title":{"controllers/AuthController.html":{},"controllers/BankAccountController.html":{},"controllers/ExampleController.html":{},"controllers/LanguageController.html":{},"controllers/UserController.html":{}},"body":{"controllers/AuthController.html":{},"modules/AuthModule.html":{},"controllers/BankAccountController.html":{},"modules/BankAccountModule.html":{},"controllers/ExampleController.html":{},"modules/ExampleModule.html":{},"controllers/LanguageController.html":{},"modules/LanguageModule.html":{},"controllers/UserController.html":{},"modules/UserModule.html":{},"coverage.html":{}}}],["controller('auth",{"_index":115,"title":{},"body":{"controllers/AuthController.html":{}}}],["controller('bank",{"_index":313,"title":{},"body":{"controllers/BankAccountController.html":{}}}],["controller('example",{"_index":546,"title":{},"body":{"controllers/ExampleController.html":{}}}],["controller('language",{"_index":619,"title":{},"body":{"controllers/LanguageController.html":{}}}],["controller('user",{"_index":1458,"title":{},"body":{"controllers/UserController.html":{}}}],["controllers",{"_index":75,"title":{},"body":{"controllers/AuthController.html":{},"modules/AuthModule.html":{},"controllers/BankAccountController.html":{},"modules/BankAccountModule.html":{},"controllers/ExampleController.html":{},"modules/ExampleModule.html":{},"controllers/LanguageController.html":{},"modules/LanguageModule.html":{},"controllers/UserController.html":{},"modules/UserModule.html":{},"overview.html":{}}}],["conversion.entity",{"_index":722,"title":{},"body":{"modules/ManagementModule.html":{},"modules/PointsConversionSeederModule.html":{},"injectables/PointsConversionSeederService.html":{},"injectables/PointsConversionService.html":{},"classes/Transaction.html":{}}}],["conversion.entity.ts",{"_index":813,"title":{},"body":{"classes/PointsConversion.html":{},"coverage.html":{}}}],["conversion.entity.ts:13",{"_index":817,"title":{},"body":{"classes/PointsConversion.html":{}}}],["conversion.entity.ts:16",{"_index":820,"title":{},"body":{"classes/PointsConversion.html":{}}}],["conversion.entity.ts:19",{"_index":818,"title":{},"body":{"classes/PointsConversion.html":{}}}],["conversion.entity.ts:22",{"_index":816,"title":{},"body":{"classes/PointsConversion.html":{}}}],["conversion.entity.ts:29",{"_index":821,"title":{},"body":{"classes/PointsConversion.html":{}}}],["conversion.service",{"_index":711,"title":{},"body":{"modules/ManagementModule.html":{},"injectables/TransactionService.html":{}}}],["conversion.service.ts",{"_index":842,"title":{},"body":{"injectables/PointsConversionService.html":{},"coverage.html":{}}}],["conversion.service.ts:12",{"_index":845,"title":{},"body":{"injectables/PointsConversionService.html":{}}}],["conversion.service.ts:7",{"_index":844,"title":{},"body":{"injectables/PointsConversionService.html":{}}}],["conversion/points",{"_index":710,"title":{},"body":{"modules/ManagementModule.html":{},"classes/PointsConversion.html":{},"modules/PointsConversionSeederModule.html":{},"injectables/PointsConversionSeederService.html":{},"injectables/PointsConversionService.html":{},"classes/Transaction.html":{},"injectables/TransactionService.html":{},"coverage.html":{}}}],["core",{"_index":31,"title":{},"body":{"modules/AppModule.html":{}}}],["cost",{"_index":1178,"title":{},"body":{"classes/Suscription.html":{},"miscellaneous/variables.html":{}}}],["countries",{"_index":469,"title":{},"body":{"injectables/CountrySeederService.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["countries.map(country",{"_index":472,"title":{},"body":{"injectables/CountrySeederService.html":{}}}],["country",{"_index":241,"title":{"classes/Country.html":{}},"body":{"classes/Bank.html":{},"classes/Country.html":{},"modules/CountrySeederModule.html":{},"injectables/CountrySeederService.html":{},"injectables/Seeder.html":{},"classes/UserDetails.html":{},"coverage.html":{}}}],["country.data",{"_index":470,"title":{},"body":{"injectables/CountrySeederService.html":{}}}],["country.idcountry",{"_index":266,"title":{},"body":{"classes/Bank.html":{},"classes/UserDetails.html":{}}}],["country.service",{"_index":460,"title":{},"body":{"modules/CountrySeederModule.html":{}}}],["country/country.module",{"_index":1050,"title":{},"body":{"modules/SeederModule.html":{}}}],["country/country.service",{"_index":978,"title":{},"body":{"injectables/Seeder.html":{}}}],["country_row",{"_index":1020,"title":{},"body":{"injectables/Seeder.html":{}}}],["country_rows",{"_index":989,"title":{},"body":{"injectables/Seeder.html":{}}}],["countryrepository",{"_index":467,"title":{},"body":{"injectables/CountrySeederService.html":{}}}],["countryseedermodule",{"_index":454,"title":{"modules/CountrySeederModule.html":{}},"body":{"modules/CountrySeederModule.html":{},"modules/SeederModule.html":{},"modules.html":{},"overview.html":{}}}],["countryseederservice",{"_index":458,"title":{"injectables/CountrySeederService.html":{}},"body":{"modules/CountrySeederModule.html":{},"injectables/CountrySeederService.html":{},"injectables/Seeder.html":{},"coverage.html":{},"overview.html":{}}}],["coverage",{"_index":1563,"title":{"coverage.html":{}},"body":{"coverage.html":{},"index.html":{}}}],["create",{"_index":363,"title":{},"body":{"injectables/BankAccountService.html":{},"injectables/ClientBankAccountService.html":{}}}],["createbank",{"_index":399,"title":{},"body":{"injectables/BankSeederService.html":{}}}],["createbankaccount",{"_index":342,"title":{},"body":{"injectables/BankAccountService.html":{}}}],["createbankaccount(options",{"_index":349,"title":{},"body":{"injectables/BankAccountService.html":{}}}],["createbankaccountdto",{"_index":297,"title":{"classes/CreateBankAccountDTO.html":{}},"body":{"controllers/BankAccountController.html":{},"classes/CreateBankAccountDTO.html":{},"coverage.html":{}}}],["createclientbankaccount",{"_index":295,"title":{},"body":{"controllers/BankAccountController.html":{},"injectables/ClientBankAccountService.html":{}}}],["createclientbankaccount(bankaccount",{"_index":296,"title":{},"body":{"controllers/BankAccountController.html":{}}}],["createclientbankaccount(email",{"_index":430,"title":{},"body":{"injectables/ClientBankAccountService.html":{}}}],["createclientdetails",{"_index":1486,"title":{},"body":{"injectables/UserDetailsService.html":{}}}],["createclientdetails(userclientdetails",{"_index":1493,"title":{},"body":{"injectables/UserDetailsService.html":{}}}],["createclientrole",{"_index":1528,"title":{},"body":{"injectables/UserRoleService.html":{}}}],["createclientrole(user",{"_index":1531,"title":{},"body":{"injectables/UserRoleService.html":{}}}],["createclientstate",{"_index":1162,"title":{},"body":{"injectables/StateUserService.html":{}}}],["createclientstate(user",{"_index":1164,"title":{},"body":{"injectables/StateUserService.html":{}}}],["createcountry",{"_index":464,"title":{},"body":{"injectables/CountrySeederService.html":{}}}],["created",{"_index":321,"title":{},"body":{"controllers/BankAccountController.html":{},"injectables/BankAccountService.html":{},"injectables/TransactionService.html":{}}}],["createdbank.filter",{"_index":1039,"title":{},"body":{"injectables/Seeder.html":{}}}],["createdcountry.filter",{"_index":1021,"title":{},"body":{"injectables/Seeder.html":{}}}],["createdir",{"_index":1592,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["createdir(dir",{"_index":1628,"title":{},"body":{"interfaces/createOptionsParams.html":{},"miscellaneous/functions.html":{}}}],["createdplataforminterest.filter",{"_index":1032,"title":{},"body":{"injectables/Seeder.html":{}}}],["createdpointsconversion.filter",{"_index":1036,"title":{},"body":{"injectables/Seeder.html":{}}}],["createdrole.filter",{"_index":1017,"title":{},"body":{"injectables/Seeder.html":{}}}],["createdstate.filter",{"_index":1011,"title":{},"body":{"injectables/Seeder.html":{}}}],["createdsuscription.filter",{"_index":1025,"title":{},"body":{"injectables/Seeder.html":{}}}],["createdthirdpartyinterest.filter",{"_index":1029,"title":{},"body":{"injectables/Seeder.html":{}}}],["createduser",{"_index":199,"title":{},"body":{"injectables/AuthService.html":{}}}],["createduser.user.email",{"_index":205,"title":{},"body":{"injectables/AuthService.html":{}}}],["createduser.userdetails",{"_index":208,"title":{},"body":{"injectables/AuthService.html":{}}}],["createduser.userdetails.firstname",{"_index":206,"title":{},"body":{"injectables/AuthService.html":{}}}],["createlanguage",{"_index":639,"title":{},"body":{"injectables/LanguageSeederService.html":{}}}],["createoptions",{"_index":41,"title":{},"body":{"modules/AppModule.html":{},"coverage.html":{},"interfaces/createOptionsParams.html":{},"miscellaneous/functions.html":{}}}],["createoptions(params",{"_index":1614,"title":{},"body":{"interfaces/createOptionsParams.html":{},"miscellaneous/functions.html":{}}}],["createoptionsparams",{"_index":1589,"title":{"interfaces/createOptionsParams.html":{}},"body":{"coverage.html":{},"interfaces/createOptionsParams.html":{}}}],["createparamdecorator((data",{"_index":1888,"title":{},"body":{"miscellaneous/variables.html":{}}}],["createplatforminterest",{"_index":770,"title":{},"body":{"injectables/PlatformInterestSeederService.html":{}}}],["createpointsconversion",{"_index":832,"title":{},"body":{"injectables/PointsConversionSeederService.html":{}}}],["createquerybuilder",{"_index":1377,"title":{},"body":{"injectables/UserAdministratorService.html":{},"injectables/UserClientService.html":{}}}],["createrole",{"_index":935,"title":{},"body":{"injectables/RolesSeederService.html":{}}}],["createstate",{"_index":1103,"title":{},"body":{"injectables/StateSeederService.html":{}}}],["createstatebankaccount",{"_index":1090,"title":{},"body":{"injectables/StateBankAccountService.html":{}}}],["createstatebankaccount(statename",{"_index":1092,"title":{},"body":{"injectables/StateBankAccountService.html":{}}}],["createstatetransaction",{"_index":1135,"title":{},"body":{"injectables/StateTransactionService.html":{}}}],["createstatetransaction(transaction",{"_index":1137,"title":{},"body":{"injectables/StateTransactionService.html":{}}}],["createsuscription",{"_index":1204,"title":{},"body":{"injectables/SuscriptionSeederService.html":{}}}],["createthirdpartyinterest",{"_index":1228,"title":{},"body":{"injectables/ThirdPartyInterestSeederService.html":{}}}],["createtoken",{"_index":163,"title":{},"body":{"injectables/AuthService.html":{}}}],["createtoken(email",{"_index":174,"title":{},"body":{"injectables/AuthService.html":{}}}],["createtransaction",{"_index":1297,"title":{},"body":{"injectables/TransactionService.html":{}}}],["createtransaction(options",{"_index":1304,"title":{},"body":{"injectables/TransactionService.html":{}}}],["createtransactioninterest",{"_index":1280,"title":{},"body":{"injectables/TransactionInterestService.html":{}}}],["createtransactioninterest(transaction",{"_index":1281,"title":{},"body":{"injectables/TransactionInterestService.html":{}}}],["createuser",{"_index":1411,"title":{},"body":{"injectables/UserClientService.html":{}}}],["createuser(credentials",{"_index":1421,"title":{},"body":{"injectables/UserClientService.html":{}}}],["createuserclient",{"_index":164,"title":{},"body":{"injectables/AuthService.html":{}}}],["createuserclient(user",{"_index":178,"title":{},"body":{"injectables/AuthService.html":{}}}],["createuserdto",{"_index":97,"title":{"classes/CreateUserDTO.html":{}},"body":{"controllers/AuthController.html":{},"injectables/AuthService.html":{},"classes/CreateUserDTO.html":{},"injectables/UserClientService.html":{},"coverage.html":{}}}],["createverificationtransaction",{"_index":1298,"title":{},"body":{"injectables/TransactionService.html":{}}}],["createverificationtransaction(clientbankaccount",{"_index":1307,"title":{},"body":{"injectables/TransactionService.html":{}}}],["createwelcomeemail",{"_index":165,"title":{},"body":{"injectables/AuthService.html":{}}}],["createwelcomeemail(email",{"_index":181,"title":{},"body":{"injectables/AuthService.html":{}}}],["creating",{"_index":317,"title":{},"body":{"controllers/BankAccountController.html":{},"injectables/TransactionService.html":{}}}],["credentials",{"_index":94,"title":{},"body":{"controllers/AuthController.html":{},"injectables/AuthService.html":{},"injectables/UserClientService.html":{},"injectables/UserService.html":{}}}],["credentials.email",{"_index":134,"title":{},"body":{"controllers/AuthController.html":{}}}],["credit",{"_index":1824,"title":{},"body":{"miscellaneous/variables.html":{}}}],["ctx",{"_index":1889,"title":{},"body":{"miscellaneous/variables.html":{}}}],["ctx.switchtohttp().getrequest",{"_index":1890,"title":{},"body":{"miscellaneous/variables.html":{}}}],["current_date",{"_index":756,"title":{},"body":{"classes/PlatformInterest.html":{},"classes/PointsConversion.html":{},"classes/Promotion.html":{},"classes/ThirdPartyInterest.html":{}}}],["current_timestamp",{"_index":1088,"title":{},"body":{"classes/StateBankAccount.html":{},"classes/StateTransaction.html":{},"classes/Transaction.html":{},"classes/UserSuscription.html":{}}}],["data",{"_index":677,"title":{},"body":{"injectables/MailsService.html":{},"injectables/PoeditorService.html":{},"interfaces/Response.html":{},"injectables/TransformSignUpInterceptor.html":{},"dependencies.html":{}}}],["database",{"_index":1868,"title":{},"body":{"miscellaneous/variables.html":{}}}],["database.service",{"_index":522,"title":{},"body":{"modules/DatabaseModule.html":{}}}],["database/database.module",{"_index":48,"title":{},"body":{"modules/AppModule.html":{}}}],["databasemodule",{"_index":14,"title":{"modules/DatabaseModule.html":{}},"body":{"modules/AppModule.html":{},"modules/DatabaseModule.html":{},"modules.html":{},"overview.html":{}}}],["databaseprovider",{"_index":521,"title":{},"body":{"modules/DatabaseModule.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["date",{"_index":501,"title":{},"body":{"classes/CreateUserDTO.html":{},"classes/PlatformInterest.html":{},"classes/PointsConversion.html":{},"classes/Promotion.html":{},"classes/StateBankAccount.html":{},"classes/StateTransaction.html":{},"classes/StateUser.html":{},"injectables/StateUserService.html":{},"classes/ThirdPartyInterest.html":{},"classes/Transaction.html":{},"classes/UserDetails.html":{},"classes/UserSuscription.html":{},"miscellaneous/variables.html":{}}}],["date(msg.timestamp).tolocalestring",{"_index":1844,"title":{},"body":{"miscellaneous/variables.html":{}}}],["db",{"_index":1854,"title":{},"body":{"miscellaneous/variables.html":{}}}],["db.database",{"_index":1870,"title":{},"body":{"miscellaneous/variables.html":{}}}],["db.host",{"_index":1859,"title":{},"body":{"miscellaneous/variables.html":{}}}],["db.password",{"_index":1867,"title":{},"body":{"miscellaneous/variables.html":{}}}],["db.port",{"_index":1862,"title":{},"body":{"miscellaneous/variables.html":{}}}],["db.synchronize",{"_index":1876,"title":{},"body":{"miscellaneous/variables.html":{}}}],["db.type",{"_index":1856,"title":{},"body":{"miscellaneous/variables.html":{}}}],["db.user",{"_index":1865,"title":{},"body":{"miscellaneous/variables.html":{}}}],["dbconfig",{"_index":1582,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["dbconfig.database",{"_index":1884,"title":{},"body":{"miscellaneous/variables.html":{}}}],["dbconfig.host",{"_index":1880,"title":{},"body":{"miscellaneous/variables.html":{}}}],["dbconfig.password",{"_index":1883,"title":{},"body":{"miscellaneous/variables.html":{}}}],["dbconfig.port",{"_index":1881,"title":{},"body":{"miscellaneous/variables.html":{}}}],["dbconfig.synchronize",{"_index":1885,"title":{},"body":{"miscellaneous/variables.html":{}}}],["dbconfig.type",{"_index":1879,"title":{},"body":{"miscellaneous/variables.html":{}}}],["dbconfig.username",{"_index":1882,"title":{},"body":{"miscellaneous/variables.html":{}}}],["declarations",{"_index":5,"title":{},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/BankAccountModule.html":{},"modules/BankSeederModule.html":{},"modules/CountrySeederModule.html":{},"modules/ExampleModule.html":{},"modules/LanguageModule.html":{},"modules/LanguageSeederModule.html":{},"modules/MailsModule.html":{},"modules/ManagementModule.html":{},"modules/PlatformInterestSeederModule.html":{},"modules/PointsConversionSeederModule.html":{},"modules/RoleSeederModule.html":{},"modules/SeederModule.html":{},"modules/StatesSeederModule.html":{},"modules/SuscriptionSeederModule.html":{},"modules/ThirdPartyInterestSeederModule.html":{},"modules/TransactionModule.html":{},"modules/UserModule.html":{},"overview.html":{}}}],["decorators",{"_index":86,"title":{},"body":{"controllers/AuthController.html":{},"classes/Bank.html":{},"classes/BankAccount.html":{},"controllers/BankAccountController.html":{},"classes/ClientBankAccount.html":{},"classes/Country.html":{},"classes/CreateBankAccountDTO.html":{},"classes/CreateUserDTO.html":{},"controllers/ExampleController.html":{},"classes/Language.html":{},"controllers/LanguageController.html":{},"classes/PlatformInterest.html":{},"classes/PointsConversion.html":{},"classes/Promotion.html":{},"classes/Role.html":{},"classes/RoutingNumber.html":{},"classes/State.html":{},"classes/StateBankAccount.html":{},"classes/StateTransaction.html":{},"classes/StateUser.html":{},"classes/Suscription.html":{},"classes/ThirdPartyInterest.html":{},"classes/Transaction.html":{},"classes/TransactionInterest.html":{},"classes/UserAdministrator.html":{},"classes/UserClient.html":{},"controllers/UserController.html":{},"classes/UserDetails.html":{},"classes/UserRole.html":{},"classes/UserSuscription.html":{}}}],["default",{"_index":747,"title":{},"body":{"classes/PlatformInterest.html":{},"classes/PointsConversion.html":{},"classes/Promotion.html":{},"classes/StateBankAccount.html":{},"classes/StateTransaction.html":{},"injectables/StateUserService.html":{},"classes/ThirdPartyInterest.html":{},"classes/Transaction.html":{},"injectables/UserRoleService.html":{},"classes/UserSuscription.html":{},"interfaces/createOptionsParams.html":{},"miscellaneous/variables.html":{}}}],["defined",{"_index":88,"title":{},"body":{"controllers/AuthController.html":{},"injectables/AuthService.html":{},"classes/Bank.html":{},"classes/BankAccount.html":{},"controllers/BankAccountController.html":{},"injectables/BankAccountService.html":{},"injectables/BankSeederService.html":{},"classes/ClientBankAccount.html":{},"injectables/ClientBankAccountService.html":{},"classes/Country.html":{},"injectables/CountrySeederService.html":{},"classes/CreateBankAccountDTO.html":{},"classes/CreateUserDTO.html":{},"controllers/ExampleController.html":{},"injectables/JwtStrategy.html":{},"classes/Language.html":{},"controllers/LanguageController.html":{},"injectables/LanguageSeederService.html":{},"injectables/LanguageService.html":{},"injectables/MailsService.html":{},"classes/PlatformInterest.html":{},"injectables/PlatformInterestSeederService.html":{},"injectables/PlatformInterestService.html":{},"injectables/PoeditorService.html":{},"classes/PointsConversion.html":{},"injectables/PointsConversionSeederService.html":{},"injectables/PointsConversionService.html":{},"classes/Promotion.html":{},"classes/Role.html":{},"injectables/RoleService.html":{},"guards/RolesGuard.html":{},"injectables/RolesSeederService.html":{},"classes/RoutingNumber.html":{},"injectables/Seeder.html":{},"classes/State.html":{},"classes/StateBankAccount.html":{},"injectables/StateBankAccountService.html":{},"injectables/StateSeederService.html":{},"injectables/StateService.html":{},"classes/StateTransaction.html":{},"injectables/StateTransactionService.html":{},"classes/StateUser.html":{},"injectables/StateUserService.html":{},"classes/Suscription.html":{},"injectables/SuscriptionSeederService.html":{},"classes/ThirdPartyInterest.html":{},"injectables/ThirdPartyInterestSeederService.html":{},"injectables/ThirdPartyInterestService.html":{},"classes/Transaction.html":{},"classes/TransactionInterest.html":{},"injectables/TransactionInterestService.html":{},"injectables/TransactionService.html":{},"injectables/TransformSignUpInterceptor.html":{},"classes/UserAdministrator.html":{},"injectables/UserAdministratorService.html":{},"classes/UserClient.html":{},"injectables/UserClientService.html":{},"controllers/UserController.html":{},"classes/UserDetails.html":{},"injectables/UserDetailsService.html":{},"classes/UserRole.html":{},"injectables/UserRoleService.html":{},"injectables/UserService.html":{},"classes/UserSuscription.html":{}}}],["delete",{"_index":1684,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["dependencies",{"_index":3,"title":{"dependencies.html":{}},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/BankAccountModule.html":{},"modules/BankSeederModule.html":{},"modules/CountrySeederModule.html":{},"modules/ExampleModule.html":{},"modules/LanguageModule.html":{},"modules/LanguageSeederModule.html":{},"modules/MailsModule.html":{},"modules/ManagementModule.html":{},"modules/PlatformInterestSeederModule.html":{},"modules/PointsConversionSeederModule.html":{},"modules/RoleSeederModule.html":{},"modules/SeederModule.html":{},"modules/StatesSeederModule.html":{},"modules/SuscriptionSeederModule.html":{},"modules/ThirdPartyInterestSeederModule.html":{},"modules/TransactionModule.html":{},"modules/UserModule.html":{},"dependencies.html":{},"overview.html":{}}}],["deposit",{"_index":1705,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["description",{"_index":849,"title":{},"body":{"classes/Promotion.html":{},"classes/State.html":{},"classes/StateBankAccount.html":{},"injectables/StateBankAccountService.html":{},"classes/StateTransaction.html":{},"injectables/StateTransactionService.html":{},"classes/StateUser.html":{},"injectables/StateUserService.html":{},"classes/Suscription.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["destructuring",{"_index":804,"title":{},"body":{"injectables/PoeditorService.html":{}}}],["details",{"_index":1419,"title":{},"body":{"injectables/UserClientService.html":{}}}],["details.entity",{"_index":288,"title":{},"body":{"classes/BankAccount.html":{},"injectables/BankAccountService.html":{},"classes/Country.html":{},"classes/CreateBankAccountDTO.html":{},"classes/Language.html":{},"classes/UserAdministrator.html":{},"classes/UserClient.html":{},"injectables/UserClientService.html":{},"injectables/UserDetailsService.html":{},"modules/UserModule.html":{}}}],["details.entity.ts",{"_index":1465,"title":{},"body":{"classes/UserDetails.html":{},"coverage.html":{}}}],["details.entity.ts:22",{"_index":1472,"title":{},"body":{"classes/UserDetails.html":{}}}],["details.entity.ts:25",{"_index":1471,"title":{},"body":{"classes/UserDetails.html":{}}}],["details.entity.ts:28",{"_index":1477,"title":{},"body":{"classes/UserDetails.html":{}}}],["details.entity.ts:31",{"_index":1476,"title":{},"body":{"classes/UserDetails.html":{}}}],["details.entity.ts:34",{"_index":1480,"title":{},"body":{"classes/UserDetails.html":{}}}],["details.entity.ts:37",{"_index":1469,"title":{},"body":{"classes/UserDetails.html":{}}}],["details.entity.ts:40",{"_index":1467,"title":{},"body":{"classes/UserDetails.html":{}}}],["details.entity.ts:43",{"_index":1478,"title":{},"body":{"classes/UserDetails.html":{}}}],["details.entity.ts:46",{"_index":1479,"title":{},"body":{"classes/UserDetails.html":{}}}],["details.entity.ts:54",{"_index":1482,"title":{},"body":{"classes/UserDetails.html":{}}}],["details.entity.ts:62",{"_index":1481,"title":{},"body":{"classes/UserDetails.html":{}}}],["details.entity.ts:70",{"_index":1475,"title":{},"body":{"classes/UserDetails.html":{}}}],["details.entity.ts:78",{"_index":1470,"title":{},"body":{"classes/UserDetails.html":{}}}],["details.entity.ts:85",{"_index":1468,"title":{},"body":{"classes/UserDetails.html":{}}}],["details.service",{"_index":357,"title":{},"body":{"injectables/BankAccountService.html":{},"injectables/UserClientService.html":{},"modules/UserModule.html":{},"injectables/UserService.html":{}}}],["details.service.ts",{"_index":1485,"title":{},"body":{"injectables/UserDetailsService.html":{},"coverage.html":{}}}],["details.service.ts:12",{"_index":1492,"title":{},"body":{"injectables/UserDetailsService.html":{}}}],["details.service.ts:20",{"_index":1495,"title":{},"body":{"injectables/UserDetailsService.html":{}}}],["details.service.ts:27",{"_index":1494,"title":{},"body":{"injectables/UserDetailsService.html":{}}}],["details.service.ts:33",{"_index":1501,"title":{},"body":{"injectables/UserDetailsService.html":{}}}],["details.service.ts:37",{"_index":1499,"title":{},"body":{"injectables/UserDetailsService.html":{}}}],["details.service.ts:41",{"_index":1497,"title":{},"body":{"injectables/UserDetailsService.html":{}}}],["details/user",{"_index":287,"title":{},"body":{"classes/BankAccount.html":{},"injectables/BankAccountService.html":{},"classes/Country.html":{},"classes/CreateBankAccountDTO.html":{},"classes/Language.html":{},"classes/UserAdministrator.html":{},"classes/UserClient.html":{},"injectables/UserClientService.html":{},"classes/UserDetails.html":{},"injectables/UserDetailsService.html":{},"modules/UserModule.html":{},"injectables/UserService.html":{},"coverage.html":{}}}],["development",{"_index":1616,"title":{},"body":{"interfaces/createOptionsParams.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["didn't",{"_index":211,"title":{},"body":{"injectables/AuthService.html":{}}}],["digits",{"_index":385,"title":{},"body":{"injectables/BankAccountService.html":{}}}],["dir",{"_index":1711,"title":{},"body":{"miscellaneous/functions.html":{}}}],["disabled",{"_index":1909,"title":{},"body":{"miscellaneous/variables.html":{}}}],["documentation",{"_index":1564,"title":{},"body":{"coverage.html":{}}}],["dto/create",{"_index":1428,"title":{},"body":{"injectables/UserClientService.html":{}}}],["dynamic_template_data",{"_index":688,"title":{},"body":{"injectables/MailsService.html":{}}}],["e2e",{"_index":1741,"title":{},"body":{"index.html":{}}}],["each",{"_index":1353,"title":{},"body":{"injectables/TransactionService.html":{}}}],["eager",{"_index":1473,"title":{},"body":{"classes/UserDetails.html":{}}}],["efficient",{"_index":1719,"title":{},"body":{"index.html":{}}}],["email",{"_index":125,"title":{},"body":{"controllers/AuthController.html":{},"injectables/AuthService.html":{},"injectables/ClientBankAccountService.html":{},"classes/CreateUserDTO.html":{},"injectables/JwtStrategy.html":{},"injectables/MailsService.html":{},"classes/UserAdministrator.html":{},"injectables/UserAdministratorService.html":{},"classes/UserClient.html":{},"injectables/UserClientService.html":{},"injectables/UserService.html":{}}}],["emailfrom",{"_index":663,"title":{},"body":{"modules/MailsModule.html":{}}}],["en",{"_index":1887,"title":{},"body":{"miscellaneous/variables.html":{}}}],["encrypts",{"_index":881,"title":{},"body":{"interfaces/Response.html":{},"injectables/TransformSignUpInterceptor.html":{}}}],["enough",{"_index":931,"title":{},"body":{"guards/RolesGuard.html":{}}}],["entities",{"_index":338,"title":{},"body":{"modules/BankAccountModule.html":{},"classes/ClientBankAccount.html":{},"modules/ManagementModule.html":{},"modules/TransactionModule.html":{},"injectables/UserClientService.html":{},"classes/UserDetails.html":{},"modules/UserModule.html":{},"classes/UserRole.html":{},"classes/UserSuscription.html":{},"miscellaneous/variables.html":{}}}],["entity",{"_index":261,"title":{},"body":{"classes/Bank.html":{},"classes/BankAccount.html":{},"injectables/BankAccountService.html":{},"classes/ClientBankAccount.html":{},"classes/Country.html":{},"classes/Language.html":{},"classes/PlatformInterest.html":{},"classes/PointsConversion.html":{},"classes/Promotion.html":{},"classes/Role.html":{},"classes/RoutingNumber.html":{},"classes/State.html":{},"classes/StateBankAccount.html":{},"classes/StateTransaction.html":{},"classes/StateUser.html":{},"classes/Suscription.html":{},"classes/ThirdPartyInterest.html":{},"classes/Transaction.html":{},"classes/TransactionInterest.html":{},"classes/UserAdministrator.html":{},"classes/UserClient.html":{},"classes/UserDetails.html":{},"classes/UserRole.html":{},"classes/UserSuscription.html":{}}}],["entity.{js,ts",{"_index":1871,"title":{},"body":{"miscellaneous/variables.html":{}}}],["enumerations",{"_index":1671,"title":{"miscellaneous/enumerations.html":{}},"body":{"miscellaneous/enumerations.html":{}}}],["env",{"_index":62,"title":{},"body":{"modules/AppModule.html":{}}}],["env.development",{"_index":61,"title":{},"body":{"modules/AppModule.html":{}}}],["envfilepath",{"_index":59,"title":{},"body":{"modules/AppModule.html":{}}}],["equal",{"_index":1922,"title":{},"body":{"miscellaneous/variables.html":{}}}],["err",{"_index":693,"title":{},"body":{"injectables/MailsService.html":{}}}],["err.message",{"_index":697,"title":{},"body":{"injectables/MailsService.html":{}}}],["es",{"_index":1892,"title":{},"body":{"miscellaneous/variables.html":{}}}],["example",{"_index":525,"title":{},"body":{"controllers/ExampleController.html":{}}}],["example.controller",{"_index":577,"title":{},"body":{"modules/ExampleModule.html":{}}}],["examplecontroller",{"_index":523,"title":{"controllers/ExampleController.html":{}},"body":{"controllers/ExampleController.html":{},"modules/ExampleModule.html":{},"coverage.html":{}}}],["examplemodule",{"_index":15,"title":{"modules/ExampleModule.html":{}},"body":{"modules/AppModule.html":{},"modules/ExampleModule.html":{},"modules.html":{},"overview.html":{}}}],["exclude",{"_index":1407,"title":{},"body":{"classes/UserClient.html":{}}}],["executioncontext",{"_index":870,"title":{},"body":{"interfaces/Response.html":{},"guards/RolesGuard.html":{},"injectables/TransformSignUpInterceptor.html":{},"miscellaneous/variables.html":{}}}],["expiresin",{"_index":158,"title":{},"body":{"modules/AuthModule.html":{}}}],["export",{"_index":68,"title":{},"body":{"modules/AppModule.html":{},"controllers/AuthController.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"classes/Bank.html":{},"classes/BankAccount.html":{},"controllers/BankAccountController.html":{},"modules/BankAccountModule.html":{},"injectables/BankAccountService.html":{},"modules/BankSeederModule.html":{},"injectables/BankSeederService.html":{},"classes/ClientBankAccount.html":{},"injectables/ClientBankAccountService.html":{},"classes/Country.html":{},"modules/CountrySeederModule.html":{},"injectables/CountrySeederService.html":{},"classes/CreateBankAccountDTO.html":{},"classes/CreateUserDTO.html":{},"modules/DatabaseModule.html":{},"controllers/ExampleController.html":{},"modules/ExampleModule.html":{},"injectables/JwtStrategy.html":{},"classes/Language.html":{},"controllers/LanguageController.html":{},"modules/LanguageModule.html":{},"modules/LanguageSeederModule.html":{},"injectables/LanguageSeederService.html":{},"injectables/LanguageService.html":{},"modules/MailsModule.html":{},"injectables/MailsService.html":{},"modules/ManagementModule.html":{},"classes/PlatformInterest.html":{},"modules/PlatformInterestSeederModule.html":{},"injectables/PlatformInterestSeederService.html":{},"injectables/PlatformInterestService.html":{},"injectables/PoeditorService.html":{},"classes/PointsConversion.html":{},"modules/PointsConversionSeederModule.html":{},"injectables/PointsConversionSeederService.html":{},"injectables/PointsConversionService.html":{},"classes/Promotion.html":{},"interfaces/Response.html":{},"classes/Role.html":{},"modules/RoleSeederModule.html":{},"injectables/RoleService.html":{},"guards/RolesGuard.html":{},"injectables/RolesSeederService.html":{},"classes/RoutingNumber.html":{},"injectables/Seeder.html":{},"modules/SeederModule.html":{},"classes/State.html":{},"classes/StateBankAccount.html":{},"injectables/StateBankAccountService.html":{},"injectables/StateSeederService.html":{},"injectables/StateService.html":{},"classes/StateTransaction.html":{},"injectables/StateTransactionService.html":{},"classes/StateUser.html":{},"injectables/StateUserService.html":{},"modules/StatesSeederModule.html":{},"classes/Suscription.html":{},"modules/SuscriptionModule.html":{},"modules/SuscriptionSeederModule.html":{},"injectables/SuscriptionSeederService.html":{},"classes/ThirdPartyInterest.html":{},"modules/ThirdPartyInterestSeederModule.html":{},"injectables/ThirdPartyInterestSeederService.html":{},"injectables/ThirdPartyInterestService.html":{},"classes/Transaction.html":{},"classes/TransactionInterest.html":{},"injectables/TransactionInterestService.html":{},"modules/TransactionModule.html":{},"injectables/TransactionService.html":{},"injectables/TransformSignUpInterceptor.html":{},"classes/UserAdministrator.html":{},"injectables/UserAdministratorService.html":{},"classes/UserClient.html":{},"injectables/UserClientService.html":{},"controllers/UserController.html":{},"classes/UserDetails.html":{},"injectables/UserDetailsService.html":{},"modules/UserModule.html":{},"classes/UserRole.html":{},"injectables/UserRoleService.html":{},"injectables/UserService.html":{},"classes/UserSuscription.html":{},"interfaces/createOptionsParams.html":{}}}],["exports",{"_index":8,"title":{},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/BankAccountModule.html":{},"modules/BankSeederModule.html":{},"modules/CountrySeederModule.html":{},"modules/DatabaseModule.html":{},"modules/ExampleModule.html":{},"modules/LanguageModule.html":{},"modules/LanguageSeederModule.html":{},"modules/MailsModule.html":{},"modules/ManagementModule.html":{},"modules/PlatformInterestSeederModule.html":{},"modules/PointsConversionSeederModule.html":{},"modules/RoleSeederModule.html":{},"modules/SeederModule.html":{},"modules/StatesSeederModule.html":{},"modules/SuscriptionSeederModule.html":{},"modules/ThirdPartyInterestSeederModule.html":{},"modules/TransactionModule.html":{},"modules/UserModule.html":{},"overview.html":{}}}],["express",{"_index":1638,"title":{},"body":{"dependencies.html":{}}}],["extends",{"_index":238,"title":{},"body":{"classes/Bank.html":{},"classes/BankAccount.html":{},"classes/ClientBankAccount.html":{},"classes/Country.html":{},"injectables/JwtStrategy.html":{},"classes/Language.html":{},"classes/PlatformInterest.html":{},"classes/PointsConversion.html":{},"classes/Promotion.html":{},"classes/Role.html":{},"classes/RoutingNumber.html":{},"classes/State.html":{},"classes/StateBankAccount.html":{},"classes/StateTransaction.html":{},"classes/StateUser.html":{},"classes/Suscription.html":{},"classes/ThirdPartyInterest.html":{},"classes/Transaction.html":{},"classes/TransactionInterest.html":{},"classes/UserAdministrator.html":{},"classes/UserClient.html":{},"classes/UserDetails.html":{},"classes/UserRole.html":{},"classes/UserSuscription.html":{}}}],["extra",{"_index":1893,"title":{},"body":{"miscellaneous/variables.html":{}}}],["extractjwt",{"_index":585,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["extractjwt.fromauthheaderasbearertoken",{"_index":591,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["extrapoints",{"_index":1320,"title":{},"body":{"injectables/TransactionService.html":{}}}],["facebooktoken",{"_index":491,"title":{},"body":{"classes/CreateUserDTO.html":{},"classes/UserClient.html":{}}}],["false",{"_index":416,"title":{},"body":{"classes/ClientBankAccount.html":{},"injectables/JwtStrategy.html":{},"classes/RoutingNumber.html":{},"classes/StateBankAccount.html":{},"classes/StateTransaction.html":{},"classes/StateUser.html":{},"classes/Suscription.html":{},"classes/Transaction.html":{},"classes/TransactionInterest.html":{},"classes/UserClient.html":{},"classes/UserRole.html":{},"classes/UserSuscription.html":{}}}],["false})@joincolumn({name",{"_index":412,"title":{},"body":{"classes/ClientBankAccount.html":{},"classes/RoutingNumber.html":{},"classes/StateBankAccount.html":{},"classes/StateTransaction.html":{},"classes/StateUser.html":{},"classes/Transaction.html":{},"classes/TransactionInterest.html":{},"classes/UserRole.html":{},"classes/UserSuscription.html":{}}}],["fargo",{"_index":1809,"title":{},"body":{"miscellaneous/variables.html":{}}}],["federal",{"_index":1828,"title":{},"body":{"miscellaneous/variables.html":{}}}],["federated",{"_index":231,"title":{},"body":{"injectables/AuthService.html":{},"interfaces/Response.html":{},"injectables/TransformSignUpInterceptor.html":{}}}],["fifth",{"_index":1806,"title":{},"body":{"miscellaneous/variables.html":{}}}],["file",{"_index":27,"title":{},"body":{"modules/AppModule.html":{},"controllers/AuthController.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"classes/Bank.html":{},"classes/BankAccount.html":{},"controllers/BankAccountController.html":{},"modules/BankAccountModule.html":{},"injectables/BankAccountService.html":{},"modules/BankSeederModule.html":{},"injectables/BankSeederService.html":{},"classes/ClientBankAccount.html":{},"injectables/ClientBankAccountService.html":{},"classes/Country.html":{},"modules/CountrySeederModule.html":{},"injectables/CountrySeederService.html":{},"classes/CreateBankAccountDTO.html":{},"classes/CreateUserDTO.html":{},"modules/DatabaseModule.html":{},"controllers/ExampleController.html":{},"modules/ExampleModule.html":{},"injectables/JwtStrategy.html":{},"classes/Language.html":{},"controllers/LanguageController.html":{},"modules/LanguageModule.html":{},"modules/LanguageSeederModule.html":{},"injectables/LanguageSeederService.html":{},"injectables/LanguageService.html":{},"modules/MailsModule.html":{},"injectables/MailsService.html":{},"modules/ManagementModule.html":{},"classes/PlatformInterest.html":{},"modules/PlatformInterestSeederModule.html":{},"injectables/PlatformInterestSeederService.html":{},"injectables/PlatformInterestService.html":{},"injectables/PoeditorService.html":{},"classes/PointsConversion.html":{},"modules/PointsConversionSeederModule.html":{},"injectables/PointsConversionSeederService.html":{},"injectables/PointsConversionService.html":{},"classes/Promotion.html":{},"interfaces/Response.html":{},"classes/Role.html":{},"modules/RoleSeederModule.html":{},"injectables/RoleService.html":{},"guards/RolesGuard.html":{},"injectables/RolesSeederService.html":{},"classes/RoutingNumber.html":{},"injectables/Seeder.html":{},"modules/SeederModule.html":{},"classes/State.html":{},"classes/StateBankAccount.html":{},"injectables/StateBankAccountService.html":{},"injectables/StateSeederService.html":{},"injectables/StateService.html":{},"classes/StateTransaction.html":{},"injectables/StateTransactionService.html":{},"classes/StateUser.html":{},"injectables/StateUserService.html":{},"modules/StatesSeederModule.html":{},"classes/Suscription.html":{},"modules/SuscriptionModule.html":{},"modules/SuscriptionSeederModule.html":{},"injectables/SuscriptionSeederService.html":{},"classes/ThirdPartyInterest.html":{},"modules/ThirdPartyInterestSeederModule.html":{},"injectables/ThirdPartyInterestSeederService.html":{},"injectables/ThirdPartyInterestService.html":{},"classes/Transaction.html":{},"classes/TransactionInterest.html":{},"injectables/TransactionInterestService.html":{},"modules/TransactionModule.html":{},"injectables/TransactionService.html":{},"injectables/TransformSignUpInterceptor.html":{},"classes/UserAdministrator.html":{},"injectables/UserAdministratorService.html":{},"classes/UserClient.html":{},"injectables/UserClientService.html":{},"controllers/UserController.html":{},"classes/UserDetails.html":{},"injectables/UserDetailsService.html":{},"modules/UserModule.html":{},"classes/UserRole.html":{},"injectables/UserRoleService.html":{},"injectables/UserService.html":{},"classes/UserSuscription.html":{},"coverage.html":{},"interfaces/createOptionsParams.html":{}}}],["fileformat",{"_index":1586,"title":{},"body":{"coverage.html":{},"interfaces/createOptionsParams.html":{},"miscellaneous/variables.html":{}}}],["filename",{"_index":65,"title":{},"body":{"modules/AppModule.html":{},"interfaces/createOptionsParams.html":{}}}],["finaldate",{"_index":728,"title":{},"body":{"classes/PlatformInterest.html":{},"injectables/PlatformInterestService.html":{},"classes/PointsConversion.html":{},"injectables/PointsConversionService.html":{},"classes/Promotion.html":{},"classes/StateBankAccount.html":{},"classes/StateTransaction.html":{},"classes/StateUser.html":{},"classes/ThirdPartyInterest.html":{},"injectables/ThirdPartyInterestService.html":{},"classes/UserSuscription.html":{}}}],["findall",{"_index":1412,"title":{},"body":{"injectables/UserClientService.html":{},"controllers/UserController.html":{},"injectables/UserService.html":{}}}],["findall(@param('role",{"_index":1460,"title":{},"body":{"controllers/UserController.html":{}}}],["findall(role",{"_index":1451,"title":{},"body":{"controllers/UserController.html":{},"injectables/UserService.html":{}}}],["findallclients",{"_index":1487,"title":{},"body":{"injectables/UserDetailsService.html":{}}}],["firstname",{"_index":492,"title":{},"body":{"classes/CreateUserDTO.html":{},"injectables/UserClientService.html":{},"classes/UserDetails.html":{},"injectables/UserDetailsService.html":{}}}],["fk_bank",{"_index":949,"title":{},"body":{"classes/RoutingNumber.html":{}}}],["fk_bank_account",{"_index":413,"title":{},"body":{"classes/ClientBankAccount.html":{}}}],["fk_client_bank_account",{"_index":1077,"title":{},"body":{"classes/StateBankAccount.html":{},"classes/Transaction.html":{}}}],["fk_country",{"_index":248,"title":{},"body":{"classes/Bank.html":{},"classes/UserDetails.html":{}}}],["fk_language",{"_index":1474,"title":{},"body":{"classes/UserDetails.html":{}}}],["fk_person_details",{"_index":283,"title":{},"body":{"classes/BankAccount.html":{}}}],["fk_platform_interest",{"_index":1267,"title":{},"body":{"classes/TransactionInterest.html":{}}}],["fk_platform_interest_extra_points",{"_index":1268,"title":{},"body":{"classes/TransactionInterest.html":{}}}],["fk_points_conversion",{"_index":1250,"title":{},"body":{"classes/Transaction.html":{}}}],["fk_promotion",{"_index":1270,"title":{},"body":{"classes/TransactionInterest.html":{}}}],["fk_role",{"_index":1521,"title":{},"body":{"classes/UserRole.html":{}}}],["fk_state",{"_index":1085,"title":{},"body":{"classes/StateBankAccount.html":{},"classes/StateTransaction.html":{},"classes/StateUser.html":{}}}],["fk_suscription",{"_index":749,"title":{},"body":{"classes/PlatformInterest.html":{},"classes/UserSuscription.html":{}}}],["fk_third_party_interest",{"_index":1272,"title":{},"body":{"classes/TransactionInterest.html":{}}}],["fk_transaction",{"_index":1130,"title":{},"body":{"classes/StateTransaction.html":{},"classes/Transaction.html":{},"classes/TransactionInterest.html":{},"classes/UserSuscription.html":{}}}],["fk_user_administrator",{"_index":1153,"title":{},"body":{"classes/StateUser.html":{},"classes/UserDetails.html":{},"classes/UserRole.html":{}}}],["fk_user_client",{"_index":419,"title":{},"body":{"classes/ClientBankAccount.html":{},"classes/StateUser.html":{},"classes/UserDetails.html":{},"classes/UserRole.html":{},"classes/UserSuscription.html":{}}}],["folder",{"_index":552,"title":{},"body":{"controllers/ExampleController.html":{}}}],["foradministrators",{"_index":526,"title":{},"body":{"controllers/ExampleController.html":{}}}],["foradministrators(@getuser",{"_index":571,"title":{},"body":{"controllers/ExampleController.html":{}}}],["foradministrators(user",{"_index":530,"title":{},"body":{"controllers/ExampleController.html":{}}}],["forclients",{"_index":527,"title":{},"body":{"controllers/ExampleController.html":{}}}],["forclients(@getuser",{"_index":567,"title":{},"body":{"controllers/ExampleController.html":{}}}],["forclients(user",{"_index":533,"title":{},"body":{"controllers/ExampleController.html":{}}}],["form",{"_index":794,"title":{},"body":{"injectables/PoeditorService.html":{},"dependencies.html":{}}}],["format",{"_index":1612,"title":{},"body":{"interfaces/createOptionsParams.html":{}}}],["formdata",{"_index":793,"title":{},"body":{"injectables/PoeditorService.html":{}}}],["found",{"_index":223,"title":{},"body":{"injectables/AuthService.html":{}}}],["framework",{"_index":1717,"title":{},"body":{"index.html":{}}}],["from(useradministrator",{"_index":1379,"title":{},"body":{"injectables/UserAdministratorService.html":{}}}],["from(userclient",{"_index":1444,"title":{},"body":{"injectables/UserClientService.html":{}}}],["fs",{"_index":1613,"title":{},"body":{"interfaces/createOptionsParams.html":{}}}],["fs.existssync(dir",{"_index":1630,"title":{},"body":{"interfaces/createOptionsParams.html":{}}}],["fs.mkdirsync(dir",{"_index":1631,"title":{},"body":{"interfaces/createOptionsParams.html":{}}}],["function",{"_index":1591,"title":{},"body":{"coverage.html":{},"interfaces/createOptionsParams.html":{}}}],["functions",{"_index":1708,"title":{"miscellaneous/functions.html":{}},"body":{"miscellaneous/functions.html":{}}}],["generaterandomamounts",{"_index":1299,"title":{},"body":{"injectables/TransactionService.html":{}}}],["generaterandomamounts(amount",{"_index":1309,"title":{},"body":{"injectables/TransactionService.html":{}}}],["get(':lang",{"_index":613,"title":{},"body":{"controllers/LanguageController.html":{}}}],["get(':role",{"_index":1452,"title":{},"body":{"controllers/UserController.html":{}}}],["get('protected",{"_index":560,"title":{},"body":{"controllers/ExampleController.html":{}}}],["get('protected/admin",{"_index":570,"title":{},"body":{"controllers/ExampleController.html":{}}}],["get('protected/client",{"_index":566,"title":{},"body":{"controllers/ExampleController.html":{}}}],["getactiveadministrator",{"_index":1374,"title":{},"body":{"injectables/UserAdministratorService.html":{}}}],["getactiveadministrator(email",{"_index":1375,"title":{},"body":{"injectables/UserAdministratorService.html":{}}}],["getactiveclient",{"_index":1413,"title":{},"body":{"injectables/UserClientService.html":{}}}],["getactiveclient(email",{"_index":1424,"title":{},"body":{"injectables/UserClientService.html":{}}}],["getadministratordetails",{"_index":1488,"title":{},"body":{"injectables/UserDetailsService.html":{}}}],["getadministratordetails(useradministrator",{"_index":1496,"title":{},"body":{"injectables/UserDetailsService.html":{}}}],["getclient",{"_index":1414,"title":{},"body":{"injectables/UserClientService.html":{}}}],["getclient(email",{"_index":1426,"title":{},"body":{"injectables/UserClientService.html":{}}}],["getclientdetails",{"_index":1489,"title":{},"body":{"injectables/UserDetailsService.html":{}}}],["getclientdetails(userclient",{"_index":1498,"title":{},"body":{"injectables/UserDetailsService.html":{}}}],["getconnection",{"_index":977,"title":{},"body":{"injectables/Seeder.html":{},"injectables/StateBankAccountService.html":{},"injectables/StateTransactionService.html":{},"injectables/StateUserService.html":{},"injectables/TransactionInterestService.html":{},"injectables/UserAdministratorService.html":{},"injectables/UserClientService.html":{},"injectables/UserRoleService.html":{}}}],["getconnection().createqueryrunner",{"_index":986,"title":{},"body":{"injectables/Seeder.html":{}}}],["getinterestbyname",{"_index":781,"title":{},"body":{"injectables/PlatformInterestService.html":{}}}],["getinterestbyname(name",{"_index":783,"title":{},"body":{"injectables/PlatformInterestService.html":{}}}],["getlanguage",{"_index":1490,"title":{},"body":{"injectables/UserDetailsService.html":{}}}],["getlanguage(name",{"_index":1500,"title":{},"body":{"injectables/UserDetailsService.html":{}}}],["getone",{"_index":1392,"title":{},"body":{"injectables/UserAdministratorService.html":{},"injectables/UserClientService.html":{}}}],["getrecentpointsconversion",{"_index":843,"title":{},"body":{"injectables/PointsConversionService.html":{}}}],["getrepository(statebankaccount",{"_index":1100,"title":{},"body":{"injectables/StateBankAccountService.html":{}}}],["getrepository(statetransaction",{"_index":1142,"title":{},"body":{"injectables/StateTransactionService.html":{}}}],["getrepository(transactioninterest",{"_index":1287,"title":{},"body":{"injectables/TransactionInterestService.html":{}}}],["getrolebyname",{"_index":906,"title":{},"body":{"injectables/RoleService.html":{}}}],["getrolebyname(name",{"_index":910,"title":{},"body":{"injectables/RoleService.html":{}}}],["getstate",{"_index":1115,"title":{},"body":{"injectables/StateService.html":{}}}],["getstate(name",{"_index":1117,"title":{},"body":{"injectables/StateService.html":{}}}],["getterms",{"_index":611,"title":{},"body":{"controllers/LanguageController.html":{},"injectables/LanguageService.html":{},"injectables/PoeditorService.html":{}}}],["getterms(@param('lang",{"_index":621,"title":{},"body":{"controllers/LanguageController.html":{}}}],["getterms(lang",{"_index":612,"title":{},"body":{"controllers/LanguageController.html":{},"injectables/LanguageService.html":{},"injectables/PoeditorService.html":{}}}],["getthirdpartyinterest",{"_index":1238,"title":{},"body":{"injectables/ThirdPartyInterestService.html":{}}}],["getthirdpartyinterest(paymentprovider",{"_index":1239,"title":{},"body":{"injectables/ThirdPartyInterestService.html":{}}}],["getting",{"_index":1713,"title":{"index.html":{}},"body":{}}],["gettransactioninterests",{"_index":1300,"title":{},"body":{"injectables/TransactionService.html":{}}}],["gettransactioninterests(options",{"_index":1312,"title":{},"body":{"injectables/TransactionService.html":{}}}],["getuser",{"_index":304,"title":{},"body":{"controllers/BankAccountController.html":{},"controllers/ExampleController.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["getuserbyemail",{"_index":1539,"title":{},"body":{"injectables/UserService.html":{}}}],["getuserbyemail(credentials",{"_index":1543,"title":{},"body":{"injectables/UserService.html":{}}}],["global.log",{"_index":67,"title":{},"body":{"modules/AppModule.html":{}}}],["gold",{"_index":1894,"title":{},"body":{"miscellaneous/variables.html":{}}}],["gold_extra",{"_index":1690,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["googletoken",{"_index":493,"title":{},"body":{"classes/CreateUserDTO.html":{},"classes/UserClient.html":{}}}],["graph",{"_index":1772,"title":{},"body":{"modules.html":{}}}],["greater",{"_index":1921,"title":{},"body":{"miscellaneous/variables.html":{}}}],["grow",{"_index":1748,"title":{},"body":{"index.html":{}}}],["guard",{"_index":916,"title":{"guards/RolesGuard.html":{}},"body":{"coverage.html":{},"overview.html":{}}}],["guards",{"_index":917,"title":{},"body":{"guards/RolesGuard.html":{}}}],["hashpassword",{"_index":166,"title":{},"body":{"injectables/AuthService.html":{}}}],["hashpassword(password",{"_index":183,"title":{},"body":{"injectables/AuthService.html":{}}}],["head",{"_index":1686,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["headers",{"_index":809,"title":{},"body":{"injectables/PoeditorService.html":{}}}],["heavily",{"_index":1724,"title":{},"body":{"index.html":{}}}],["helmet",{"_index":1647,"title":{},"body":{"dependencies.html":{}}}],["here",{"_index":1758,"title":{},"body":{"index.html":{}}}],["host",{"_index":1857,"title":{},"body":{"miscellaneous/variables.html":{}}}],["hsbc",{"_index":1814,"title":{},"body":{"miscellaneous/variables.html":{}}}],["httpmodule",{"_index":627,"title":{},"body":{"modules/LanguageModule.html":{}}}],["httprequest",{"_index":1455,"title":{},"body":{"controllers/UserController.html":{},"miscellaneous/enumerations.html":{}}}],["httprequest.get",{"_index":1462,"title":{},"body":{"controllers/UserController.html":{}}}],["https://nestjs.com",{"_index":1765,"title":{},"body":{"index.html":{}}}],["httpservice",{"_index":790,"title":{},"body":{"injectables/PoeditorService.html":{}}}],["id",{"_index":380,"title":{},"body":{"injectables/BankAccountService.html":{},"injectables/JwtStrategy.html":{},"injectables/StateBankAccountService.html":{},"injectables/TransactionService.html":{},"injectables/UserClientService.html":{}}}],["idbank",{"_index":242,"title":{},"body":{"classes/Bank.html":{},"miscellaneous/variables.html":{}}}],["idbankaccount",{"_index":273,"title":{},"body":{"classes/BankAccount.html":{}}}],["idclientbankaccount",{"_index":409,"title":{},"body":{"classes/ClientBankAccount.html":{}}}],["idcountry",{"_index":446,"title":{},"body":{"classes/Country.html":{},"miscellaneous/variables.html":{}}}],["identifier",{"_index":1565,"title":{},"body":{"coverage.html":{}}}],["idlanguage",{"_index":605,"title":{},"body":{"classes/Language.html":{},"miscellaneous/variables.html":{}}}],["idplatforminterest",{"_index":729,"title":{},"body":{"classes/PlatformInterest.html":{},"miscellaneous/variables.html":{}}}],["idpointsconversion",{"_index":814,"title":{},"body":{"classes/PointsConversion.html":{}}}],["idpointsconvertion",{"_index":1898,"title":{},"body":{"miscellaneous/variables.html":{}}}],["idpromotion",{"_index":850,"title":{},"body":{"classes/Promotion.html":{}}}],["idrole",{"_index":888,"title":{},"body":{"classes/Role.html":{},"miscellaneous/variables.html":{}}}],["idroutingnumber",{"_index":945,"title":{},"body":{"classes/RoutingNumber.html":{}}}],["idstate",{"_index":1061,"title":{},"body":{"classes/State.html":{},"miscellaneous/variables.html":{}}}],["idstatebankaccount",{"_index":1076,"title":{},"body":{"classes/StateBankAccount.html":{}}}],["idstatetransaction",{"_index":1124,"title":{},"body":{"classes/StateTransaction.html":{}}}],["idstateuser",{"_index":1146,"title":{},"body":{"classes/StateUser.html":{}}}],["idsuscription",{"_index":1179,"title":{},"body":{"classes/Suscription.html":{},"miscellaneous/variables.html":{}}}],["idthirdpartyinterest",{"_index":1216,"title":{},"body":{"classes/ThirdPartyInterest.html":{},"miscellaneous/variables.html":{}}}],["idtransaction",{"_index":1244,"title":{},"body":{"classes/Transaction.html":{}}}],["idtransactioninterest",{"_index":1264,"title":{},"body":{"classes/TransactionInterest.html":{}}}],["iduseradministrator",{"_index":1363,"title":{},"body":{"classes/UserAdministrator.html":{}}}],["iduserclient",{"_index":1394,"title":{},"body":{"classes/UserClient.html":{}}}],["iduserdetails",{"_index":1466,"title":{},"body":{"classes/UserDetails.html":{}}}],["iduserrole",{"_index":1519,"title":{},"body":{"classes/UserRole.html":{}}}],["idusersuscription",{"_index":1555,"title":{},"body":{"classes/UserSuscription.html":{}}}],["ignoreexpiration",{"_index":592,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["implements",{"_index":874,"title":{},"body":{"interfaces/Response.html":{},"guards/RolesGuard.html":{},"injectables/TransformSignUpInterceptor.html":{}}}],["import",{"_index":32,"title":{},"body":{"modules/AppModule.html":{},"controllers/AuthController.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"classes/Bank.html":{},"classes/BankAccount.html":{},"controllers/BankAccountController.html":{},"modules/BankAccountModule.html":{},"injectables/BankAccountService.html":{},"modules/BankSeederModule.html":{},"injectables/BankSeederService.html":{},"classes/ClientBankAccount.html":{},"injectables/ClientBankAccountService.html":{},"classes/Country.html":{},"modules/CountrySeederModule.html":{},"injectables/CountrySeederService.html":{},"classes/CreateBankAccountDTO.html":{},"classes/CreateUserDTO.html":{},"modules/DatabaseModule.html":{},"controllers/ExampleController.html":{},"modules/ExampleModule.html":{},"injectables/JwtStrategy.html":{},"classes/Language.html":{},"controllers/LanguageController.html":{},"modules/LanguageModule.html":{},"modules/LanguageSeederModule.html":{},"injectables/LanguageSeederService.html":{},"injectables/LanguageService.html":{},"modules/MailsModule.html":{},"injectables/MailsService.html":{},"modules/ManagementModule.html":{},"classes/PlatformInterest.html":{},"modules/PlatformInterestSeederModule.html":{},"injectables/PlatformInterestSeederService.html":{},"injectables/PlatformInterestService.html":{},"injectables/PoeditorService.html":{},"classes/PointsConversion.html":{},"modules/PointsConversionSeederModule.html":{},"injectables/PointsConversionSeederService.html":{},"injectables/PointsConversionService.html":{},"classes/Promotion.html":{},"interfaces/Response.html":{},"classes/Role.html":{},"modules/RoleSeederModule.html":{},"injectables/RoleService.html":{},"guards/RolesGuard.html":{},"injectables/RolesSeederService.html":{},"classes/RoutingNumber.html":{},"injectables/Seeder.html":{},"modules/SeederModule.html":{},"classes/State.html":{},"classes/StateBankAccount.html":{},"injectables/StateBankAccountService.html":{},"injectables/StateSeederService.html":{},"injectables/StateService.html":{},"classes/StateTransaction.html":{},"injectables/StateTransactionService.html":{},"classes/StateUser.html":{},"injectables/StateUserService.html":{},"modules/StatesSeederModule.html":{},"classes/Suscription.html":{},"modules/SuscriptionModule.html":{},"modules/SuscriptionSeederModule.html":{},"injectables/SuscriptionSeederService.html":{},"classes/ThirdPartyInterest.html":{},"modules/ThirdPartyInterestSeederModule.html":{},"injectables/ThirdPartyInterestSeederService.html":{},"injectables/ThirdPartyInterestService.html":{},"classes/Transaction.html":{},"classes/TransactionInterest.html":{},"injectables/TransactionInterestService.html":{},"modules/TransactionModule.html":{},"injectables/TransactionService.html":{},"injectables/TransformSignUpInterceptor.html":{},"classes/UserAdministrator.html":{},"injectables/UserAdministratorService.html":{},"classes/UserClient.html":{},"injectables/UserClientService.html":{},"controllers/UserController.html":{},"classes/UserDetails.html":{},"injectables/UserDetailsService.html":{},"modules/UserModule.html":{},"classes/UserRole.html":{},"injectables/UserRoleService.html":{},"injectables/UserService.html":{},"classes/UserSuscription.html":{},"interfaces/createOptionsParams.html":{}}}],["imports",{"_index":29,"title":{},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/BankAccountModule.html":{},"modules/BankSeederModule.html":{},"modules/CountrySeederModule.html":{},"modules/DatabaseModule.html":{},"modules/ExampleModule.html":{},"modules/LanguageModule.html":{},"modules/LanguageSeederModule.html":{},"modules/MailsModule.html":{},"modules/ManagementModule.html":{},"modules/PlatformInterestSeederModule.html":{},"modules/PointsConversionSeederModule.html":{},"modules/RoleSeederModule.html":{},"modules/SeederModule.html":{},"modules/StatesSeederModule.html":{},"modules/SuscriptionSeederModule.html":{},"modules/ThirdPartyInterestSeederModule.html":{},"modules/TransactionModule.html":{},"modules/UserModule.html":{},"miscellaneous/variables.html":{}}}],["incorrect",{"_index":218,"title":{},"body":{"injectables/AuthService.html":{}}}],["index",{"_index":79,"title":{"index.html":{}},"body":{"controllers/AuthController.html":{},"injectables/AuthService.html":{},"classes/Bank.html":{},"classes/BankAccount.html":{},"controllers/BankAccountController.html":{},"injectables/BankAccountService.html":{},"injectables/BankSeederService.html":{},"classes/ClientBankAccount.html":{},"injectables/ClientBankAccountService.html":{},"classes/Country.html":{},"injectables/CountrySeederService.html":{},"classes/CreateBankAccountDTO.html":{},"classes/CreateUserDTO.html":{},"controllers/ExampleController.html":{},"injectables/JwtStrategy.html":{},"classes/Language.html":{},"controllers/LanguageController.html":{},"injectables/LanguageSeederService.html":{},"injectables/LanguageService.html":{},"injectables/MailsService.html":{},"classes/PlatformInterest.html":{},"injectables/PlatformInterestSeederService.html":{},"injectables/PlatformInterestService.html":{},"injectables/PoeditorService.html":{},"classes/PointsConversion.html":{},"injectables/PointsConversionSeederService.html":{},"injectables/PointsConversionService.html":{},"classes/Promotion.html":{},"interfaces/Response.html":{},"classes/Role.html":{},"injectables/RoleService.html":{},"guards/RolesGuard.html":{},"injectables/RolesSeederService.html":{},"classes/RoutingNumber.html":{},"injectables/Seeder.html":{},"classes/State.html":{},"classes/StateBankAccount.html":{},"injectables/StateBankAccountService.html":{},"injectables/StateSeederService.html":{},"injectables/StateService.html":{},"classes/StateTransaction.html":{},"injectables/StateTransactionService.html":{},"classes/StateUser.html":{},"injectables/StateUserService.html":{},"classes/Suscription.html":{},"injectables/SuscriptionSeederService.html":{},"classes/ThirdPartyInterest.html":{},"injectables/ThirdPartyInterestSeederService.html":{},"injectables/ThirdPartyInterestService.html":{},"classes/Transaction.html":{},"classes/TransactionInterest.html":{},"injectables/TransactionInterestService.html":{},"injectables/TransactionService.html":{},"injectables/TransformSignUpInterceptor.html":{},"classes/UserAdministrator.html":{},"injectables/UserAdministratorService.html":{},"classes/UserClient.html":{},"injectables/UserClientService.html":{},"controllers/UserController.html":{},"classes/UserDetails.html":{},"injectables/UserDetailsService.html":{},"classes/UserRole.html":{},"injectables/UserRoleService.html":{},"injectables/UserService.html":{},"classes/UserSuscription.html":{},"interfaces/createOptionsParams.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["indicates",{"_index":1905,"title":{},"body":{"miscellaneous/variables.html":{}}}],["info",{"_index":25,"title":{},"body":{"modules/AppModule.html":{},"controllers/AuthController.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"classes/Bank.html":{},"classes/BankAccount.html":{},"controllers/BankAccountController.html":{},"modules/BankAccountModule.html":{},"injectables/BankAccountService.html":{},"modules/BankSeederModule.html":{},"injectables/BankSeederService.html":{},"classes/ClientBankAccount.html":{},"injectables/ClientBankAccountService.html":{},"classes/Country.html":{},"modules/CountrySeederModule.html":{},"injectables/CountrySeederService.html":{},"classes/CreateBankAccountDTO.html":{},"classes/CreateUserDTO.html":{},"modules/DatabaseModule.html":{},"controllers/ExampleController.html":{},"modules/ExampleModule.html":{},"injectables/JwtStrategy.html":{},"classes/Language.html":{},"controllers/LanguageController.html":{},"modules/LanguageModule.html":{},"modules/LanguageSeederModule.html":{},"injectables/LanguageSeederService.html":{},"injectables/LanguageService.html":{},"modules/MailsModule.html":{},"injectables/MailsService.html":{},"modules/ManagementModule.html":{},"classes/PlatformInterest.html":{},"modules/PlatformInterestSeederModule.html":{},"injectables/PlatformInterestSeederService.html":{},"injectables/PlatformInterestService.html":{},"injectables/PoeditorService.html":{},"classes/PointsConversion.html":{},"modules/PointsConversionSeederModule.html":{},"injectables/PointsConversionSeederService.html":{},"injectables/PointsConversionService.html":{},"classes/Promotion.html":{},"interfaces/Response.html":{},"classes/Role.html":{},"modules/RoleSeederModule.html":{},"injectables/RoleService.html":{},"guards/RolesGuard.html":{},"injectables/RolesSeederService.html":{},"classes/RoutingNumber.html":{},"injectables/Seeder.html":{},"modules/SeederModule.html":{},"classes/State.html":{},"classes/StateBankAccount.html":{},"injectables/StateBankAccountService.html":{},"injectables/StateSeederService.html":{},"injectables/StateService.html":{},"classes/StateTransaction.html":{},"injectables/StateTransactionService.html":{},"classes/StateUser.html":{},"injectables/StateUserService.html":{},"modules/StatesSeederModule.html":{},"classes/Suscription.html":{},"modules/SuscriptionModule.html":{},"modules/SuscriptionSeederModule.html":{},"injectables/SuscriptionSeederService.html":{},"classes/ThirdPartyInterest.html":{},"modules/ThirdPartyInterestSeederModule.html":{},"injectables/ThirdPartyInterestSeederService.html":{},"injectables/ThirdPartyInterestService.html":{},"classes/Transaction.html":{},"classes/TransactionInterest.html":{},"injectables/TransactionInterestService.html":{},"modules/TransactionModule.html":{},"injectables/TransactionService.html":{},"injectables/TransformSignUpInterceptor.html":{},"classes/UserAdministrator.html":{},"injectables/UserAdministratorService.html":{},"classes/UserClient.html":{},"injectables/UserClientService.html":{},"controllers/UserController.html":{},"classes/UserDetails.html":{},"injectables/UserDetailsService.html":{},"modules/UserModule.html":{},"classes/UserRole.html":{},"injectables/UserRoleService.html":{},"injectables/UserService.html":{},"classes/UserSuscription.html":{},"interfaces/createOptionsParams.html":{}}}],["info.user.password",{"_index":212,"title":{},"body":{"injectables/AuthService.html":{}}}],["initial",{"_index":1915,"title":{},"body":{"miscellaneous/variables.html":{}}}],["initialdate",{"_index":730,"title":{},"body":{"classes/PlatformInterest.html":{},"classes/PointsConversion.html":{},"classes/Promotion.html":{},"classes/StateBankAccount.html":{},"classes/StateTransaction.html":{},"classes/StateUser.html":{},"classes/ThirdPartyInterest.html":{},"classes/Transaction.html":{},"classes/UserSuscription.html":{}}}],["inject",{"_index":105,"title":{},"body":{"controllers/AuthController.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"controllers/BankAccountController.html":{},"injectables/BankAccountService.html":{},"controllers/ExampleController.html":{},"injectables/JwtStrategy.html":{},"modules/MailsModule.html":{},"injectables/MailsService.html":{},"interfaces/Response.html":{},"guards/RolesGuard.html":{},"injectables/StateBankAccountService.html":{},"injectables/TransactionService.html":{},"injectables/TransformSignUpInterceptor.html":{},"injectables/UserClientService.html":{},"controllers/UserController.html":{},"miscellaneous/variables.html":{}}}],["inject('sendgrid_config",{"_index":682,"title":{},"body":{"injectables/MailsService.html":{}}}],["inject(winston_module_provider",{"_index":117,"title":{},"body":{"controllers/AuthController.html":{},"injectables/AuthService.html":{},"controllers/BankAccountController.html":{},"injectables/BankAccountService.html":{},"controllers/ExampleController.html":{},"injectables/JwtStrategy.html":{},"injectables/MailsService.html":{},"guards/RolesGuard.html":{},"injectables/StateBankAccountService.html":{},"injectables/TransactionService.html":{},"injectables/UserClientService.html":{},"controllers/UserController.html":{}}}],["injectable",{"_index":160,"title":{"injectables/AuthService.html":{},"injectables/BankAccountService.html":{},"injectables/BankSeederService.html":{},"injectables/ClientBankAccountService.html":{},"injectables/CountrySeederService.html":{},"injectables/JwtStrategy.html":{},"injectables/LanguageSeederService.html":{},"injectables/LanguageService.html":{},"injectables/MailsService.html":{},"injectables/PlatformInterestSeederService.html":{},"injectables/PlatformInterestService.html":{},"injectables/PoeditorService.html":{},"injectables/PointsConversionSeederService.html":{},"injectables/PointsConversionService.html":{},"injectables/RoleService.html":{},"injectables/RolesSeederService.html":{},"injectables/Seeder.html":{},"injectables/StateBankAccountService.html":{},"injectables/StateSeederService.html":{},"injectables/StateService.html":{},"injectables/StateTransactionService.html":{},"injectables/StateUserService.html":{},"injectables/SuscriptionSeederService.html":{},"injectables/ThirdPartyInterestSeederService.html":{},"injectables/ThirdPartyInterestService.html":{},"injectables/TransactionInterestService.html":{},"injectables/TransactionService.html":{},"injectables/TransformSignUpInterceptor.html":{},"injectables/UserAdministratorService.html":{},"injectables/UserClientService.html":{},"injectables/UserDetailsService.html":{},"injectables/UserRoleService.html":{},"injectables/UserService.html":{}},"body":{"injectables/AuthService.html":{},"injectables/BankAccountService.html":{},"injectables/BankSeederService.html":{},"injectables/ClientBankAccountService.html":{},"injectables/CountrySeederService.html":{},"injectables/JwtStrategy.html":{},"injectables/LanguageSeederService.html":{},"injectables/LanguageService.html":{},"injectables/MailsService.html":{},"injectables/PlatformInterestSeederService.html":{},"injectables/PlatformInterestService.html":{},"injectables/PoeditorService.html":{},"injectables/PointsConversionSeederService.html":{},"injectables/PointsConversionService.html":{},"interfaces/Response.html":{},"injectables/RoleService.html":{},"guards/RolesGuard.html":{},"injectables/RolesSeederService.html":{},"injectables/Seeder.html":{},"injectables/StateBankAccountService.html":{},"injectables/StateSeederService.html":{},"injectables/StateService.html":{},"injectables/StateTransactionService.html":{},"injectables/StateUserService.html":{},"injectables/SuscriptionSeederService.html":{},"injectables/ThirdPartyInterestSeederService.html":{},"injectables/ThirdPartyInterestService.html":{},"injectables/TransactionInterestService.html":{},"injectables/TransactionService.html":{},"injectables/TransformSignUpInterceptor.html":{},"injectables/UserAdministratorService.html":{},"injectables/UserClientService.html":{},"injectables/UserDetailsService.html":{},"injectables/UserRoleService.html":{},"injectables/UserService.html":{},"coverage.html":{}}}],["injectables",{"_index":161,"title":{},"body":{"injectables/AuthService.html":{},"injectables/BankAccountService.html":{},"injectables/BankSeederService.html":{},"injectables/ClientBankAccountService.html":{},"injectables/CountrySeederService.html":{},"injectables/JwtStrategy.html":{},"injectables/LanguageSeederService.html":{},"injectables/LanguageService.html":{},"injectables/MailsService.html":{},"injectables/PlatformInterestSeederService.html":{},"injectables/PlatformInterestService.html":{},"injectables/PoeditorService.html":{},"injectables/PointsConversionSeederService.html":{},"injectables/PointsConversionService.html":{},"injectables/RoleService.html":{},"injectables/RolesSeederService.html":{},"injectables/Seeder.html":{},"injectables/StateBankAccountService.html":{},"injectables/StateSeederService.html":{},"injectables/StateService.html":{},"injectables/StateTransactionService.html":{},"injectables/StateUserService.html":{},"injectables/SuscriptionSeederService.html":{},"injectables/ThirdPartyInterestSeederService.html":{},"injectables/ThirdPartyInterestService.html":{},"injectables/TransactionInterestService.html":{},"injectables/TransactionService.html":{},"injectables/TransformSignUpInterceptor.html":{},"injectables/UserAdministratorService.html":{},"injectables/UserClientService.html":{},"injectables/UserDetailsService.html":{},"injectables/UserRoleService.html":{},"injectables/UserService.html":{},"overview.html":{}}}],["injectrepository",{"_index":356,"title":{},"body":{"injectables/BankAccountService.html":{},"injectables/BankSeederService.html":{},"injectables/ClientBankAccountService.html":{},"injectables/CountrySeederService.html":{},"injectables/LanguageSeederService.html":{},"injectables/PlatformInterestSeederService.html":{},"injectables/PlatformInterestService.html":{},"injectables/PointsConversionSeederService.html":{},"injectables/PointsConversionService.html":{},"injectables/RoleService.html":{},"injectables/RolesSeederService.html":{},"injectables/StateSeederService.html":{},"injectables/StateService.html":{},"injectables/SuscriptionSeederService.html":{},"injectables/ThirdPartyInterestSeederService.html":{},"injectables/ThirdPartyInterestService.html":{},"injectables/TransactionService.html":{},"injectables/UserClientService.html":{},"injectables/UserDetailsService.html":{}}}],["injectrepository(bank",{"_index":406,"title":{},"body":{"injectables/BankSeederService.html":{}}}],["injectrepository(bankaccount",{"_index":358,"title":{},"body":{"injectables/BankAccountService.html":{}}}],["injectrepository(clientbankaccount",{"_index":436,"title":{},"body":{"injectables/ClientBankAccountService.html":{}}}],["injectrepository(country",{"_index":471,"title":{},"body":{"injectables/CountrySeederService.html":{}}}],["injectrepository(language",{"_index":646,"title":{},"body":{"injectables/LanguageSeederService.html":{},"injectables/UserDetailsService.html":{}}}],["injectrepository(platforminterest",{"_index":777,"title":{},"body":{"injectables/PlatformInterestSeederService.html":{},"injectables/PlatformInterestService.html":{}}}],["injectrepository(pointsconversion",{"_index":839,"title":{},"body":{"injectables/PointsConversionSeederService.html":{},"injectables/PointsConversionService.html":{}}}],["injectrepository(role",{"_index":914,"title":{},"body":{"injectables/RoleService.html":{},"injectables/RolesSeederService.html":{}}}],["injectrepository(state",{"_index":1111,"title":{},"body":{"injectables/StateSeederService.html":{},"injectables/StateService.html":{}}}],["injectrepository(suscription",{"_index":1211,"title":{},"body":{"injectables/SuscriptionSeederService.html":{}}}],["injectrepository(thirdpartyinterest",{"_index":1235,"title":{},"body":{"injectables/ThirdPartyInterestSeederService.html":{},"injectables/ThirdPartyInterestService.html":{}}}],["injectrepository(transaction",{"_index":1316,"title":{},"body":{"injectables/TransactionService.html":{}}}],["injectrepository(userclient",{"_index":1430,"title":{},"body":{"injectables/UserClientService.html":{}}}],["injectrepository(userdetails",{"_index":1502,"title":{},"body":{"injectables/UserDetailsService.html":{}}}],["injectsendgrid",{"_index":679,"title":{},"body":{"injectables/MailsService.html":{}}}],["innerjoin",{"_index":1381,"title":{},"body":{"injectables/UserAdministratorService.html":{},"injectables/UserClientService.html":{}}}],["innerjoin(state",{"_index":1385,"title":{},"body":{"injectables/UserAdministratorService.html":{},"injectables/UserClientService.html":{}}}],["insertresult",{"_index":404,"title":{},"body":{"injectables/BankSeederService.html":{},"injectables/CountrySeederService.html":{},"injectables/LanguageSeederService.html":{},"injectables/PlatformInterestSeederService.html":{},"injectables/PointsConversionSeederService.html":{},"injectables/RolesSeederService.html":{},"injectables/StateSeederService.html":{},"injectables/SuscriptionSeederService.html":{},"injectables/ThirdPartyInterestSeederService.html":{}}}],["inspired",{"_index":1725,"title":{},"body":{"index.html":{}}}],["install",{"_index":1649,"title":{},"body":{"dependencies.html":{}}}],["installation",{"_index":1728,"title":{},"body":{"index.html":{}}}],["installrunning",{"_index":1729,"title":{},"body":{"index.html":{}}}],["intercept",{"_index":876,"title":{},"body":{"interfaces/Response.html":{},"injectables/TransformSignUpInterceptor.html":{}}}],["intercept(context",{"_index":1359,"title":{},"body":{"injectables/TransformSignUpInterceptor.html":{}}}],["interceptors/transform",{"_index":112,"title":{},"body":{"controllers/AuthController.html":{}}}],["interest",{"_index":1317,"title":{},"body":{"injectables/TransactionService.html":{},"miscellaneous/variables.html":{}}}],["interest.entity",{"_index":720,"title":{},"body":{"modules/ManagementModule.html":{},"classes/PlatformInterest.html":{},"modules/PlatformInterestSeederModule.html":{},"injectables/PlatformInterestSeederService.html":{},"injectables/PlatformInterestService.html":{},"classes/Promotion.html":{},"classes/Suscription.html":{},"classes/ThirdPartyInterest.html":{},"modules/ThirdPartyInterestSeederModule.html":{},"injectables/ThirdPartyInterestSeederService.html":{},"injectables/ThirdPartyInterestService.html":{},"classes/Transaction.html":{},"classes/TransactionInterest.html":{},"injectables/TransactionInterestService.html":{},"modules/TransactionModule.html":{}}}],["interest.entity.ts",{"_index":726,"title":{},"body":{"classes/PlatformInterest.html":{},"classes/ThirdPartyInterest.html":{},"classes/TransactionInterest.html":{},"coverage.html":{}}}],["interest.entity.ts:13",{"_index":1218,"title":{},"body":{"classes/ThirdPartyInterest.html":{}}}],["interest.entity.ts:16",{"_index":742,"title":{},"body":{"classes/PlatformInterest.html":{},"classes/ThirdPartyInterest.html":{}}}],["interest.entity.ts:17",{"_index":1266,"title":{},"body":{"classes/TransactionInterest.html":{}}}],["interest.entity.ts:19",{"_index":745,"title":{},"body":{"classes/PlatformInterest.html":{},"classes/ThirdPartyInterest.html":{}}}],["interest.entity.ts:22",{"_index":740,"title":{},"body":{"classes/PlatformInterest.html":{},"classes/ThirdPartyInterest.html":{}}}],["interest.entity.ts:25",{"_index":746,"title":{},"body":{"classes/PlatformInterest.html":{},"classes/ThirdPartyInterest.html":{},"classes/TransactionInterest.html":{}}}],["interest.entity.ts:28",{"_index":744,"title":{},"body":{"classes/PlatformInterest.html":{},"classes/ThirdPartyInterest.html":{}}}],["interest.entity.ts:31",{"_index":741,"title":{},"body":{"classes/PlatformInterest.html":{},"classes/ThirdPartyInterest.html":{}}}],["interest.entity.ts:33",{"_index":1269,"title":{},"body":{"classes/TransactionInterest.html":{}}}],["interest.entity.ts:38",{"_index":1219,"title":{},"body":{"classes/ThirdPartyInterest.html":{}}}],["interest.entity.ts:39",{"_index":750,"title":{},"body":{"classes/PlatformInterest.html":{}}}],["interest.entity.ts:41",{"_index":1273,"title":{},"body":{"classes/TransactionInterest.html":{}}}],["interest.entity.ts:46",{"_index":751,"title":{},"body":{"classes/PlatformInterest.html":{}}}],["interest.entity.ts:49",{"_index":1271,"title":{},"body":{"classes/TransactionInterest.html":{}}}],["interest.entity.ts:54",{"_index":752,"title":{},"body":{"classes/PlatformInterest.html":{}}}],["interest.entity.ts:57",{"_index":1274,"title":{},"body":{"classes/TransactionInterest.html":{}}}],["interest.enum",{"_index":786,"title":{},"body":{"injectables/PlatformInterestService.html":{},"injectables/ThirdPartyInterestService.html":{},"injectables/TransactionService.html":{}}}],["interest.enum.ts",{"_index":1676,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["interest.service",{"_index":708,"title":{},"body":{"modules/ManagementModule.html":{},"modules/TransactionModule.html":{},"injectables/TransactionService.html":{}}}],["interest.service.ts",{"_index":780,"title":{},"body":{"injectables/PlatformInterestService.html":{},"injectables/ThirdPartyInterestService.html":{},"injectables/TransactionInterestService.html":{},"coverage.html":{}}}],["interest.service.ts:13",{"_index":785,"title":{},"body":{"injectables/PlatformInterestService.html":{},"injectables/TransactionInterestService.html":{}}}],["interest.service.ts:14",{"_index":1241,"title":{},"body":{"injectables/ThirdPartyInterestService.html":{}}}],["interest.service.ts:8",{"_index":782,"title":{},"body":{"injectables/PlatformInterestService.html":{},"injectables/ThirdPartyInterestService.html":{}}}],["interest/platform",{"_index":707,"title":{},"body":{"modules/ManagementModule.html":{},"classes/PlatformInterest.html":{},"modules/PlatformInterestSeederModule.html":{},"injectables/PlatformInterestSeederService.html":{},"injectables/PlatformInterestService.html":{},"classes/Suscription.html":{},"classes/TransactionInterest.html":{},"injectables/TransactionInterestService.html":{},"injectables/TransactionService.html":{},"coverage.html":{},"miscellaneous/enumerations.html":{}}}],["interest/third",{"_index":714,"title":{},"body":{"modules/ManagementModule.html":{},"classes/ThirdPartyInterest.html":{},"modules/ThirdPartyInterestSeederModule.html":{},"injectables/ThirdPartyInterestSeederService.html":{},"injectables/ThirdPartyInterestService.html":{},"classes/TransactionInterest.html":{},"injectables/TransactionInterestService.html":{},"injectables/TransactionService.html":{},"coverage.html":{},"miscellaneous/enumerations.html":{}}}],["interest/transaction",{"_index":755,"title":{},"body":{"classes/PlatformInterest.html":{},"classes/Promotion.html":{},"classes/ThirdPartyInterest.html":{},"classes/Transaction.html":{},"classes/TransactionInterest.html":{},"injectables/TransactionInterestService.html":{},"modules/TransactionModule.html":{},"injectables/TransactionService.html":{},"coverage.html":{}}}],["interface",{"_index":863,"title":{"interfaces/Response.html":{},"interfaces/createOptionsParams.html":{}},"body":{"interfaces/Response.html":{},"injectables/TransformSignUpInterceptor.html":{},"coverage.html":{},"interfaces/createOptionsParams.html":{}}}],["interfaces",{"_index":865,"title":{},"body":{"interfaces/Response.html":{},"injectables/UserClientService.html":{},"interfaces/createOptionsParams.html":{},"overview.html":{}}}],["invalid",{"_index":1701,"title":{},"body":{"miscellaneous/enumerations.html":{},"miscellaneous/variables.html":{}}}],["isadiscount",{"_index":851,"title":{},"body":{"classes/Promotion.html":{}}}],["isemail",{"_index":517,"title":{},"body":{"classes/CreateUserDTO.html":{}}}],["isemail()@isnotempty",{"_index":503,"title":{},"body":{"classes/CreateUserDTO.html":{}}}],["isglobal",{"_index":57,"title":{},"body":{"modules/AppModule.html":{}}}],["isint",{"_index":482,"title":{},"body":{"classes/CreateBankAccountDTO.html":{}}}],["isn't",{"_index":362,"title":{},"body":{"injectables/BankAccountService.html":{}}}],["isnotempty",{"_index":475,"title":{},"body":{"classes/CreateBankAccountDTO.html":{},"classes/CreateUserDTO.html":{}}}],["isnotempty()@isstring",{"_index":506,"title":{},"body":{"classes/CreateUserDTO.html":{}}}],["isnumber",{"_index":483,"title":{},"body":{"classes/CreateBankAccountDTO.html":{}}}],["isoptional",{"_index":480,"title":{},"body":{"classes/CreateBankAccountDTO.html":{},"classes/CreateUserDTO.html":{}}}],["isstring",{"_index":518,"title":{},"body":{"classes/CreateUserDTO.html":{}}}],["isstring()@isoptional",{"_index":499,"title":{},"body":{"classes/CreateUserDTO.html":{}}}],["j.p",{"_index":1817,"title":{},"body":{"miscellaneous/variables.html":{}}}],["join",{"_index":1755,"title":{},"body":{"index.html":{}}}],["joincolumn",{"_index":263,"title":{},"body":{"classes/Bank.html":{},"classes/BankAccount.html":{},"classes/ClientBankAccount.html":{},"classes/PlatformInterest.html":{},"classes/RoutingNumber.html":{},"classes/StateBankAccount.html":{},"classes/StateTransaction.html":{},"classes/StateUser.html":{},"classes/Transaction.html":{},"classes/TransactionInterest.html":{},"classes/UserDetails.html":{},"classes/UserRole.html":{},"classes/UserSuscription.html":{}}}],["js",{"_index":803,"title":{},"body":{"injectables/PoeditorService.html":{}}}],["jwt",{"_index":587,"title":{},"body":{"injectables/JwtStrategy.html":{},"dependencies.html":{}}}],["jwtfromrequest",{"_index":590,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["jwtmodule",{"_index":143,"title":{},"body":{"modules/AuthModule.html":{}}}],["jwtmodule.registerasync",{"_index":153,"title":{},"body":{"modules/AuthModule.html":{}}}],["jwtservice",{"_index":170,"title":{},"body":{"injectables/AuthService.html":{}}}],["jwtstrategy",{"_index":578,"title":{"injectables/JwtStrategy.html":{}},"body":{"injectables/JwtStrategy.html":{},"coverage.html":{}}}],["kamil",{"_index":1762,"title":{},"body":{"index.html":{}}}],["keybank",{"_index":1821,"title":{},"body":{"miscellaneous/variables.html":{}}}],["kinetic",{"_index":1823,"title":{},"body":{"miscellaneous/variables.html":{}}}],["lang",{"_index":615,"title":{},"body":{"controllers/LanguageController.html":{},"injectables/LanguageService.html":{},"injectables/PoeditorService.html":{}}}],["language",{"_index":603,"title":{"classes/Language.html":{}},"body":{"classes/Language.html":{},"controllers/LanguageController.html":{},"modules/LanguageSeederModule.html":{},"injectables/LanguageSeederService.html":{},"injectables/Seeder.html":{},"injectables/UserClientService.html":{},"classes/UserDetails.html":{},"injectables/UserDetailsService.html":{},"modules/UserModule.html":{},"coverage.html":{}}}],["language.controller",{"_index":628,"title":{},"body":{"modules/LanguageModule.html":{}}}],["language.data",{"_index":645,"title":{},"body":{"injectables/LanguageSeederService.html":{}}}],["language.idlanguage",{"_index":1484,"title":{},"body":{"classes/UserDetails.html":{}}}],["language.service",{"_index":618,"title":{},"body":{"controllers/LanguageController.html":{},"modules/LanguageModule.html":{},"modules/LanguageSeederModule.html":{}}}],["language/language.entity",{"_index":1483,"title":{},"body":{"classes/UserDetails.html":{},"injectables/UserDetailsService.html":{},"modules/UserModule.html":{}}}],["language/language.module",{"_index":1051,"title":{},"body":{"modules/SeederModule.html":{}}}],["language/language.service",{"_index":979,"title":{},"body":{"injectables/Seeder.html":{}}}],["language_rows",{"_index":990,"title":{},"body":{"injectables/Seeder.html":{}}}],["languagecontroller",{"_index":609,"title":{"controllers/LanguageController.html":{}},"body":{"controllers/LanguageController.html":{},"modules/LanguageModule.html":{},"coverage.html":{}}}],["languagemodule",{"_index":16,"title":{"modules/LanguageModule.html":{}},"body":{"modules/AppModule.html":{},"modules/LanguageModule.html":{},"modules.html":{},"overview.html":{}}}],["languagerepository",{"_index":642,"title":{},"body":{"injectables/LanguageSeederService.html":{},"injectables/UserDetailsService.html":{}}}],["languages",{"_index":644,"title":{},"body":{"injectables/LanguageSeederService.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["languages.map(language",{"_index":647,"title":{},"body":{"injectables/LanguageSeederService.html":{}}}],["languageseedermodule",{"_index":630,"title":{"modules/LanguageSeederModule.html":{}},"body":{"modules/LanguageSeederModule.html":{},"modules/SeederModule.html":{},"modules.html":{},"overview.html":{}}}],["languageseederservice",{"_index":634,"title":{"injectables/LanguageSeederService.html":{}},"body":{"modules/LanguageSeederModule.html":{},"injectables/LanguageSeederService.html":{},"injectables/Seeder.html":{},"coverage.html":{},"overview.html":{}}}],["languageservice",{"_index":617,"title":{"injectables/LanguageService.html":{}},"body":{"controllers/LanguageController.html":{},"modules/LanguageModule.html":{},"injectables/LanguageService.html":{},"coverage.html":{},"overview.html":{}}}],["lastname",{"_index":494,"title":{},"body":{"classes/CreateUserDTO.html":{},"injectables/UserClientService.html":{},"classes/UserDetails.html":{},"injectables/UserDetailsService.html":{}}}],["legend",{"_index":4,"title":{},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/BankAccountModule.html":{},"modules/BankSeederModule.html":{},"modules/CountrySeederModule.html":{},"modules/ExampleModule.html":{},"modules/LanguageModule.html":{},"modules/LanguageSeederModule.html":{},"modules/MailsModule.html":{},"modules/ManagementModule.html":{},"modules/PlatformInterestSeederModule.html":{},"modules/PointsConversionSeederModule.html":{},"modules/RoleSeederModule.html":{},"modules/SeederModule.html":{},"modules/StatesSeederModule.html":{},"modules/SuscriptionSeederModule.html":{},"modules/ThirdPartyInterestSeederModule.html":{},"modules/TransactionModule.html":{},"modules/UserModule.html":{},"overview.html":{}}}],["length",{"_index":1013,"title":{},"body":{"injectables/Seeder.html":{}}}],["level",{"_index":1620,"title":{},"body":{"interfaces/createOptionsParams.html":{}}}],["license",{"_index":1768,"title":{},"body":{"index.html":{}}}],["licensed",{"_index":1745,"title":{},"body":{"index.html":{}}}],["load",{"_index":63,"title":{},"body":{"modules/AppModule.html":{}}}],["local",{"_index":1656,"title":{},"body":{"dependencies.html":{}}}],["log",{"_index":598,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["logged",{"_index":138,"title":{},"body":{"controllers/AuthController.html":{}}}],["logger",{"_index":38,"title":{},"body":{"modules/AppModule.html":{},"controllers/AuthController.html":{},"injectables/AuthService.html":{},"controllers/BankAccountController.html":{},"injectables/BankAccountService.html":{},"controllers/ExampleController.html":{},"injectables/JwtStrategy.html":{},"injectables/MailsService.html":{},"guards/RolesGuard.html":{},"injectables/Seeder.html":{},"modules/SeederModule.html":{},"injectables/StateBankAccountService.html":{},"injectables/TransactionService.html":{},"injectables/UserClientService.html":{},"controllers/UserController.html":{}}}],["logger/http",{"_index":1456,"title":{},"body":{"controllers/UserController.html":{}}}],["logger/winston/winston",{"_index":42,"title":{},"body":{"modules/AppModule.html":{}}}],["loggers",{"_index":549,"title":{},"body":{"controllers/ExampleController.html":{}}}],["login",{"_index":82,"title":{},"body":{"controllers/AuthController.html":{}}}],["login(@body",{"_index":133,"title":{},"body":{"controllers/AuthController.html":{}}}],["login(credentials",{"_index":84,"title":{},"body":{"controllers/AuthController.html":{}}}],["made",{"_index":1912,"title":{},"body":{"miscellaneous/variables.html":{}}}],["mails",{"_index":690,"title":{},"body":{"injectables/MailsService.html":{}}}],["mails.service",{"_index":658,"title":{},"body":{"modules/MailsModule.html":{}}}],["mails/mails.enum",{"_index":198,"title":{},"body":{"injectables/AuthService.html":{}}}],["mails/mails.module",{"_index":150,"title":{},"body":{"modules/AuthModule.html":{}}}],["mails/mails.service",{"_index":195,"title":{},"body":{"injectables/AuthService.html":{}}}],["mailsmodule",{"_index":17,"title":{"modules/MailsModule.html":{}},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/MailsModule.html":{},"modules.html":{},"overview.html":{}}}],["mailsservice",{"_index":171,"title":{"injectables/MailsService.html":{}},"body":{"injectables/AuthService.html":{},"modules/MailsModule.html":{},"injectables/MailsService.html":{},"coverage.html":{},"overview.html":{}}}],["mailssubject",{"_index":197,"title":{},"body":{"injectables/AuthService.html":{},"miscellaneous/enumerations.html":{}}}],["mailssubject.welcome",{"_index":229,"title":{},"body":{"injectables/AuthService.html":{}}}],["management/country/country.entity",{"_index":257,"title":{},"body":{"classes/Bank.html":{},"classes/UserDetails.html":{}}}],["management/management.module",{"_index":148,"title":{},"body":{"modules/AuthModule.html":{},"modules/BankAccountModule.html":{},"modules/TransactionModule.html":{},"modules/UserModule.html":{}}}],["management/platform",{"_index":1189,"title":{},"body":{"classes/Suscription.html":{},"classes/TransactionInterest.html":{},"injectables/TransactionService.html":{}}}],["management/points",{"_index":1261,"title":{},"body":{"classes/Transaction.html":{},"injectables/TransactionService.html":{}}}],["management/promotion/promotion.entity",{"_index":1276,"title":{},"body":{"classes/TransactionInterest.html":{},"injectables/TransactionInterestService.html":{}}}],["management/role/role.entity",{"_index":1525,"title":{},"body":{"classes/UserRole.html":{}}}],["management/role/role.enum",{"_index":543,"title":{},"body":{"controllers/ExampleController.html":{},"injectables/UserClientService.html":{},"controllers/UserController.html":{}}}],["management/role/role.service",{"_index":1533,"title":{},"body":{"injectables/UserRoleService.html":{}}}],["management/state/state.entity",{"_index":1087,"title":{},"body":{"classes/StateBankAccount.html":{},"classes/StateTransaction.html":{},"classes/StateUser.html":{},"injectables/UserAdministratorService.html":{},"injectables/UserClientService.html":{},"modules/UserModule.html":{}}}],["management/state/state.enum",{"_index":1094,"title":{},"body":{"injectables/StateBankAccountService.html":{},"injectables/StateTransactionService.html":{},"injectables/StateUserService.html":{},"injectables/TransactionService.html":{},"injectables/UserClientService.html":{}}}],["management/state/state.service",{"_index":337,"title":{},"body":{"modules/BankAccountModule.html":{},"injectables/StateBankAccountService.html":{},"injectables/StateTransactionService.html":{},"injectables/StateUserService.html":{}}}],["management/third",{"_index":1275,"title":{},"body":{"classes/TransactionInterest.html":{},"injectables/TransactionInterestService.html":{},"injectables/TransactionService.html":{}}}],["managementmodule",{"_index":18,"title":{"modules/ManagementModule.html":{}},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/BankAccountModule.html":{},"modules/ManagementModule.html":{},"modules/TransactionModule.html":{},"modules/UserModule.html":{},"modules.html":{},"overview.html":{}}}],["manytoone",{"_index":262,"title":{},"body":{"classes/Bank.html":{},"classes/BankAccount.html":{},"classes/ClientBankAccount.html":{},"classes/PlatformInterest.html":{},"classes/RoutingNumber.html":{},"classes/StateBankAccount.html":{},"classes/StateTransaction.html":{},"classes/StateUser.html":{},"classes/Transaction.html":{},"classes/TransactionInterest.html":{},"classes/UserDetails.html":{},"classes/UserRole.html":{},"classes/UserSuscription.html":{}}}],["manytoone(undefined",{"_index":244,"title":{},"body":{"classes/Bank.html":{},"classes/BankAccount.html":{},"classes/ClientBankAccount.html":{},"classes/PlatformInterest.html":{},"classes/RoutingNumber.html":{},"classes/StateBankAccount.html":{},"classes/StateTransaction.html":{},"classes/StateUser.html":{},"classes/Transaction.html":{},"classes/TransactionInterest.html":{},"classes/UserDetails.html":{},"classes/UserRole.html":{},"classes/UserSuscription.html":{}}}],["matching",{"_index":71,"title":{},"body":{"modules/AppModule.html":{},"controllers/AuthController.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"classes/Bank.html":{},"classes/BankAccount.html":{},"controllers/BankAccountController.html":{},"modules/BankAccountModule.html":{},"injectables/BankAccountService.html":{},"modules/BankSeederModule.html":{},"injectables/BankSeederService.html":{},"classes/ClientBankAccount.html":{},"injectables/ClientBankAccountService.html":{},"classes/Country.html":{},"modules/CountrySeederModule.html":{},"injectables/CountrySeederService.html":{},"classes/CreateBankAccountDTO.html":{},"classes/CreateUserDTO.html":{},"modules/DatabaseModule.html":{},"controllers/ExampleController.html":{},"modules/ExampleModule.html":{},"injectables/JwtStrategy.html":{},"classes/Language.html":{},"controllers/LanguageController.html":{},"modules/LanguageModule.html":{},"modules/LanguageSeederModule.html":{},"injectables/LanguageSeederService.html":{},"injectables/LanguageService.html":{},"modules/MailsModule.html":{},"injectables/MailsService.html":{},"modules/ManagementModule.html":{},"classes/PlatformInterest.html":{},"modules/PlatformInterestSeederModule.html":{},"injectables/PlatformInterestSeederService.html":{},"injectables/PlatformInterestService.html":{},"injectables/PoeditorService.html":{},"classes/PointsConversion.html":{},"modules/PointsConversionSeederModule.html":{},"injectables/PointsConversionSeederService.html":{},"injectables/PointsConversionService.html":{},"classes/Promotion.html":{},"interfaces/Response.html":{},"classes/Role.html":{},"modules/RoleSeederModule.html":{},"injectables/RoleService.html":{},"guards/RolesGuard.html":{},"injectables/RolesSeederService.html":{},"classes/RoutingNumber.html":{},"injectables/Seeder.html":{},"modules/SeederModule.html":{},"classes/State.html":{},"classes/StateBankAccount.html":{},"injectables/StateBankAccountService.html":{},"injectables/StateSeederService.html":{},"injectables/StateService.html":{},"classes/StateTransaction.html":{},"injectables/StateTransactionService.html":{},"classes/StateUser.html":{},"injectables/StateUserService.html":{},"modules/StatesSeederModule.html":{},"classes/Suscription.html":{},"modules/SuscriptionModule.html":{},"modules/SuscriptionSeederModule.html":{},"injectables/SuscriptionSeederService.html":{},"classes/ThirdPartyInterest.html":{},"modules/ThirdPartyInterestSeederModule.html":{},"injectables/ThirdPartyInterestSeederService.html":{},"injectables/ThirdPartyInterestService.html":{},"classes/Transaction.html":{},"classes/TransactionInterest.html":{},"injectables/TransactionInterestService.html":{},"modules/TransactionModule.html":{},"injectables/TransactionService.html":{},"injectables/TransformSignUpInterceptor.html":{},"classes/UserAdministrator.html":{},"injectables/UserAdministratorService.html":{},"classes/UserClient.html":{},"injectables/UserClientService.html":{},"controllers/UserController.html":{},"classes/UserDetails.html":{},"injectables/UserDetailsService.html":{},"modules/UserModule.html":{},"classes/UserRole.html":{},"injectables/UserRoleService.html":{},"injectables/UserService.html":{},"classes/UserSuscription.html":{},"coverage.html":{},"interfaces/createOptionsParams.html":{},"dependencies.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{},"index.html":{},"modules.html":{},"overview.html":{},"miscellaneous/variables.html":{}}}],["math.random",{"_index":1335,"title":{},"body":{"injectables/TransactionService.html":{}}}],["max",{"_index":1333,"title":{},"body":{"injectables/TransactionService.html":{}}}],["maxfiles",{"_index":1625,"title":{},"body":{"interfaces/createOptionsParams.html":{}}}],["maxlength",{"_index":484,"title":{},"body":{"classes/CreateBankAccountDTO.html":{}}}],["maxsize",{"_index":1623,"title":{},"body":{"interfaces/createOptionsParams.html":{}}}],["metadata",{"_index":1660,"title":{},"body":{"dependencies.html":{}}}],["methods",{"_index":80,"title":{},"body":{"controllers/AuthController.html":{},"injectables/AuthService.html":{},"controllers/BankAccountController.html":{},"injectables/BankAccountService.html":{},"injectables/BankSeederService.html":{},"injectables/ClientBankAccountService.html":{},"injectables/CountrySeederService.html":{},"controllers/ExampleController.html":{},"injectables/JwtStrategy.html":{},"controllers/LanguageController.html":{},"injectables/LanguageSeederService.html":{},"injectables/LanguageService.html":{},"injectables/MailsService.html":{},"injectables/PlatformInterestSeederService.html":{},"injectables/PlatformInterestService.html":{},"injectables/PoeditorService.html":{},"injectables/PointsConversionSeederService.html":{},"injectables/PointsConversionService.html":{},"injectables/RoleService.html":{},"guards/RolesGuard.html":{},"injectables/RolesSeederService.html":{},"injectables/Seeder.html":{},"injectables/StateBankAccountService.html":{},"injectables/StateSeederService.html":{},"injectables/StateService.html":{},"injectables/StateTransactionService.html":{},"injectables/StateUserService.html":{},"injectables/SuscriptionSeederService.html":{},"injectables/ThirdPartyInterestSeederService.html":{},"injectables/ThirdPartyInterestService.html":{},"injectables/TransactionInterestService.html":{},"injectables/TransactionService.html":{},"injectables/TransformSignUpInterceptor.html":{},"injectables/UserAdministratorService.html":{},"injectables/UserClientService.html":{},"controllers/UserController.html":{},"injectables/UserDetailsService.html":{},"injectables/UserRoleService.html":{},"injectables/UserService.html":{}}}],["middlename",{"_index":495,"title":{},"body":{"classes/CreateUserDTO.html":{},"injectables/UserClientService.html":{},"classes/UserDetails.html":{}}}],["migrations",{"_index":1872,"title":{},"body":{"miscellaneous/variables.html":{}}}],["migrations/*{.ts,.js",{"_index":1873,"title":{},"body":{"miscellaneous/variables.html":{}}}],["minlength",{"_index":485,"title":{},"body":{"classes/CreateBankAccountDTO.html":{},"classes/CreateUserDTO.html":{}}}],["minlength(8",{"_index":519,"title":{},"body":{"classes/CreateUserDTO.html":{}}}],["minlength(8)@isstring()@isoptional",{"_index":511,"title":{},"body":{"classes/CreateUserDTO.html":{}}}],["miscellaneous",{"_index":1670,"title":{"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}},"body":{"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["mit",{"_index":1744,"title":{},"body":{"index.html":{}}}],["mode",{"_index":1734,"title":{},"body":{"index.html":{}}}],["module",{"_index":0,"title":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/BankAccountModule.html":{},"modules/BankSeederModule.html":{},"modules/CountrySeederModule.html":{},"modules/DatabaseModule.html":{},"modules/ExampleModule.html":{},"modules/LanguageModule.html":{},"modules/LanguageSeederModule.html":{},"modules/MailsModule.html":{},"modules/ManagementModule.html":{},"modules/PlatformInterestSeederModule.html":{},"modules/PointsConversionSeederModule.html":{},"modules/RoleSeederModule.html":{},"modules/SeederModule.html":{},"modules/StatesSeederModule.html":{},"modules/SuscriptionModule.html":{},"modules/SuscriptionSeederModule.html":{},"modules/ThirdPartyInterestSeederModule.html":{},"modules/TransactionModule.html":{},"modules/UserModule.html":{}},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/BankAccountModule.html":{},"modules/BankSeederModule.html":{},"modules/CountrySeederModule.html":{},"modules/DatabaseModule.html":{},"modules/ExampleModule.html":{},"modules/LanguageModule.html":{},"modules/LanguageSeederModule.html":{},"modules/MailsModule.html":{},"modules/ManagementModule.html":{},"modules/PlatformInterestSeederModule.html":{},"modules/PointsConversionSeederModule.html":{},"modules/RoleSeederModule.html":{},"modules/SeederModule.html":{},"modules/StatesSeederModule.html":{},"modules/SuscriptionModule.html":{},"modules/SuscriptionSeederModule.html":{},"modules/ThirdPartyInterestSeederModule.html":{},"modules/TransactionModule.html":{},"modules/UserModule.html":{},"overview.html":{}}}],["modules",{"_index":2,"title":{"modules.html":{}},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/BankAccountModule.html":{},"modules/BankSeederModule.html":{},"modules/CountrySeederModule.html":{},"modules/DatabaseModule.html":{},"modules/ExampleModule.html":{},"modules/LanguageModule.html":{},"modules/LanguageSeederModule.html":{},"modules/MailsModule.html":{},"modules/ManagementModule.html":{},"modules/PlatformInterestSeederModule.html":{},"modules/PointsConversionSeederModule.html":{},"modules/RoleSeederModule.html":{},"modules/SeederModule.html":{},"modules/StatesSeederModule.html":{},"modules/SuscriptionModule.html":{},"modules/SuscriptionSeederModule.html":{},"modules/ThirdPartyInterestSeederModule.html":{},"modules/TransactionModule.html":{},"modules/UserModule.html":{},"modules.html":{},"overview.html":{}}}],["modules/auth/auth.module",{"_index":44,"title":{},"body":{"modules/AppModule.html":{}}}],["modules/bank",{"_index":45,"title":{},"body":{"modules/AppModule.html":{},"modules/BankSeederModule.html":{}}}],["modules/example/example.module",{"_index":49,"title":{},"body":{"modules/AppModule.html":{}}}],["modules/language/language.module",{"_index":50,"title":{},"body":{"modules/AppModule.html":{}}}],["modules/mails/mails.module",{"_index":51,"title":{},"body":{"modules/AppModule.html":{}}}],["modules/management/country/country.entity",{"_index":461,"title":{},"body":{"modules/CountrySeederModule.html":{},"injectables/CountrySeederService.html":{}}}],["modules/management/management.module",{"_index":52,"title":{},"body":{"modules/AppModule.html":{}}}],["modules/management/platform",{"_index":767,"title":{},"body":{"modules/PlatformInterestSeederModule.html":{},"injectables/PlatformInterestSeederService.html":{}}}],["modules/management/points",{"_index":829,"title":{},"body":{"modules/PointsConversionSeederModule.html":{},"injectables/PointsConversionSeederService.html":{}}}],["modules/management/role/role.entity",{"_index":903,"title":{},"body":{"modules/RoleSeederModule.html":{},"injectables/RolesSeederService.html":{}}}],["modules/management/state/state.entity",{"_index":1110,"title":{},"body":{"injectables/StateSeederService.html":{},"modules/StatesSeederModule.html":{}}}],["modules/management/third",{"_index":1224,"title":{},"body":{"modules/ThirdPartyInterestSeederModule.html":{},"injectables/ThirdPartyInterestSeederService.html":{}}}],["modules/suscription/suscription.module",{"_index":53,"title":{},"body":{"modules/AppModule.html":{}}}],["modules/suscription/suscription/suscription.entity",{"_index":1201,"title":{},"body":{"modules/SuscriptionSeederModule.html":{},"injectables/SuscriptionSeederService.html":{}}}],["modules/transaction/transaction.module",{"_index":54,"title":{},"body":{"modules/AppModule.html":{}}}],["modules/user/language/language.entity",{"_index":636,"title":{},"body":{"modules/LanguageSeederModule.html":{},"injectables/LanguageSeederService.html":{}}}],["modules/user/user.module",{"_index":55,"title":{},"body":{"modules/AppModule.html":{}}}],["more",{"_index":1757,"title":{},"body":{"index.html":{}}}],["morgan",{"_index":1818,"title":{},"body":{"miscellaneous/variables.html":{}}}],["msg",{"_index":684,"title":{},"body":{"injectables/MailsService.html":{}}}],["msg.level",{"_index":1845,"title":{},"body":{"miscellaneous/variables.html":{}}}],["msg.level.touppercase",{"_index":1849,"title":{},"body":{"miscellaneous/variables.html":{}}}],["msg.message",{"_index":1846,"title":{},"body":{"miscellaneous/variables.html":{}}}],["msg.timestamp",{"_index":1847,"title":{},"body":{"miscellaneous/variables.html":{}}}],["myśliwiec",{"_index":1763,"title":{},"body":{"index.html":{}}}],["n",{"_index":387,"title":{},"body":{"injectables/BankAccountService.html":{}}}],["name",{"_index":91,"title":{},"body":{"controllers/AuthController.html":{},"injectables/AuthService.html":{},"classes/Bank.html":{},"classes/BankAccount.html":{},"controllers/BankAccountController.html":{},"injectables/BankAccountService.html":{},"injectables/BankSeederService.html":{},"classes/ClientBankAccount.html":{},"injectables/ClientBankAccountService.html":{},"classes/Country.html":{},"injectables/CountrySeederService.html":{},"controllers/ExampleController.html":{},"injectables/JwtStrategy.html":{},"classes/Language.html":{},"controllers/LanguageController.html":{},"injectables/LanguageSeederService.html":{},"injectables/LanguageService.html":{},"injectables/MailsService.html":{},"classes/PlatformInterest.html":{},"injectables/PlatformInterestSeederService.html":{},"injectables/PlatformInterestService.html":{},"injectables/PoeditorService.html":{},"injectables/PointsConversionSeederService.html":{},"injectables/PointsConversionService.html":{},"classes/Promotion.html":{},"classes/Role.html":{},"injectables/RoleService.html":{},"guards/RolesGuard.html":{},"injectables/RolesSeederService.html":{},"classes/RoutingNumber.html":{},"injectables/Seeder.html":{},"classes/State.html":{},"classes/StateBankAccount.html":{},"injectables/StateBankAccountService.html":{},"injectables/StateSeederService.html":{},"injectables/StateService.html":{},"classes/StateTransaction.html":{},"injectables/StateTransactionService.html":{},"classes/StateUser.html":{},"injectables/StateUserService.html":{},"classes/Suscription.html":{},"injectables/SuscriptionSeederService.html":{},"classes/ThirdPartyInterest.html":{},"injectables/ThirdPartyInterestSeederService.html":{},"injectables/ThirdPartyInterestService.html":{},"classes/Transaction.html":{},"classes/TransactionInterest.html":{},"injectables/TransactionInterestService.html":{},"injectables/TransactionService.html":{},"injectables/TransformSignUpInterceptor.html":{},"injectables/UserAdministratorService.html":{},"injectables/UserClientService.html":{},"controllers/UserController.html":{},"classes/UserDetails.html":{},"injectables/UserDetailsService.html":{},"classes/UserRole.html":{},"injectables/UserRoleService.html":{},"injectables/UserService.html":{},"classes/UserSuscription.html":{},"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["navy",{"_index":1827,"title":{},"body":{"miscellaneous/variables.html":{}}}],["needs",{"_index":232,"title":{},"body":{"injectables/AuthService.html":{}}}],["nest",{"_index":30,"title":{},"body":{"modules/AppModule.html":{},"controllers/AuthController.html":{},"injectables/AuthService.html":{},"controllers/BankAccountController.html":{},"injectables/BankAccountService.html":{},"controllers/ExampleController.html":{},"injectables/JwtStrategy.html":{},"injectables/MailsService.html":{},"guards/RolesGuard.html":{},"injectables/StateBankAccountService.html":{},"injectables/TransactionService.html":{},"injectables/UserClientService.html":{},"controllers/UserController.html":{},"interfaces/createOptionsParams.html":{},"dependencies.html":{},"index.html":{}}}],["nestframework",{"_index":1767,"title":{},"body":{"index.html":{}}}],["nestinterceptor",{"_index":869,"title":{},"body":{"interfaces/Response.html":{},"injectables/TransformSignUpInterceptor.html":{}}}],["nestjs/common",{"_index":33,"title":{},"body":{"modules/AppModule.html":{},"controllers/AuthController.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"controllers/BankAccountController.html":{},"modules/BankAccountModule.html":{},"injectables/BankAccountService.html":{},"modules/BankSeederModule.html":{},"injectables/BankSeederService.html":{},"injectables/ClientBankAccountService.html":{},"modules/CountrySeederModule.html":{},"injectables/CountrySeederService.html":{},"modules/DatabaseModule.html":{},"controllers/ExampleController.html":{},"modules/ExampleModule.html":{},"injectables/JwtStrategy.html":{},"controllers/LanguageController.html":{},"modules/LanguageModule.html":{},"modules/LanguageSeederModule.html":{},"injectables/LanguageSeederService.html":{},"injectables/LanguageService.html":{},"modules/MailsModule.html":{},"injectables/MailsService.html":{},"modules/ManagementModule.html":{},"modules/PlatformInterestSeederModule.html":{},"injectables/PlatformInterestSeederService.html":{},"injectables/PlatformInterestService.html":{},"injectables/PoeditorService.html":{},"modules/PointsConversionSeederModule.html":{},"injectables/PointsConversionSeederService.html":{},"injectables/PointsConversionService.html":{},"interfaces/Response.html":{},"modules/RoleSeederModule.html":{},"injectables/RoleService.html":{},"guards/RolesGuard.html":{},"injectables/RolesSeederService.html":{},"injectables/Seeder.html":{},"modules/SeederModule.html":{},"injectables/StateBankAccountService.html":{},"injectables/StateSeederService.html":{},"injectables/StateService.html":{},"injectables/StateTransactionService.html":{},"injectables/StateUserService.html":{},"modules/StatesSeederModule.html":{},"modules/SuscriptionModule.html":{},"modules/SuscriptionSeederModule.html":{},"injectables/SuscriptionSeederService.html":{},"modules/ThirdPartyInterestSeederModule.html":{},"injectables/ThirdPartyInterestSeederService.html":{},"injectables/ThirdPartyInterestService.html":{},"injectables/TransactionInterestService.html":{},"modules/TransactionModule.html":{},"injectables/TransactionService.html":{},"injectables/TransformSignUpInterceptor.html":{},"injectables/UserAdministratorService.html":{},"injectables/UserClientService.html":{},"controllers/UserController.html":{},"injectables/UserDetailsService.html":{},"modules/UserModule.html":{},"injectables/UserRoleService.html":{},"injectables/UserService.html":{},"dependencies.html":{}}}],["nestjs/config",{"_index":35,"title":{},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"controllers/ExampleController.html":{},"injectables/JwtStrategy.html":{},"modules/LanguageModule.html":{},"modules/MailsModule.html":{},"injectables/PoeditorService.html":{},"dependencies.html":{}}}],["nestjs/core",{"_index":924,"title":{},"body":{"guards/RolesGuard.html":{},"dependencies.html":{}}}],["nestjs/jwt",{"_index":144,"title":{},"body":{"modules/AuthModule.html":{},"injectables/AuthService.html":{},"dependencies.html":{}}}],["nestjs/passport",{"_index":147,"title":{},"body":{"modules/AuthModule.html":{},"controllers/BankAccountController.html":{},"controllers/ExampleController.html":{},"injectables/JwtStrategy.html":{},"dependencies.html":{}}}],["nestjs/platform",{"_index":1637,"title":{},"body":{"dependencies.html":{}}}],["nestjs/typeorm",{"_index":332,"title":{},"body":{"modules/BankAccountModule.html":{},"injectables/BankAccountService.html":{},"modules/BankSeederModule.html":{},"injectables/BankSeederService.html":{},"injectables/ClientBankAccountService.html":{},"modules/CountrySeederModule.html":{},"injectables/CountrySeederService.html":{},"modules/LanguageSeederModule.html":{},"injectables/LanguageSeederService.html":{},"modules/ManagementModule.html":{},"modules/PlatformInterestSeederModule.html":{},"injectables/PlatformInterestSeederService.html":{},"injectables/PlatformInterestService.html":{},"modules/PointsConversionSeederModule.html":{},"injectables/PointsConversionSeederService.html":{},"injectables/PointsConversionService.html":{},"modules/RoleSeederModule.html":{},"injectables/RoleService.html":{},"injectables/RolesSeederService.html":{},"modules/SeederModule.html":{},"injectables/StateSeederService.html":{},"injectables/StateService.html":{},"modules/StatesSeederModule.html":{},"modules/SuscriptionSeederModule.html":{},"injectables/SuscriptionSeederService.html":{},"modules/ThirdPartyInterestSeederModule.html":{},"injectables/ThirdPartyInterestSeederService.html":{},"injectables/ThirdPartyInterestService.html":{},"modules/TransactionModule.html":{},"injectables/TransactionService.html":{},"injectables/UserClientService.html":{},"injectables/UserDetailsService.html":{},"modules/UserModule.html":{},"dependencies.html":{}}}],["new",{"_index":220,"title":{},"body":{"injectables/AuthService.html":{},"injectables/BankAccountService.html":{},"injectables/JwtStrategy.html":{},"injectables/PoeditorService.html":{},"guards/RolesGuard.html":{},"injectables/StateBankAccountService.html":{},"injectables/StateTransactionService.html":{},"injectables/StateUserService.html":{},"injectables/TransactionInterestService.html":{},"injectables/UserClientService.html":{},"injectables/UserRoleService.html":{},"coverage.html":{},"interfaces/createOptionsParams.html":{},"miscellaneous/variables.html":{}}}],["newly_created_account",{"_index":1695,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["next",{"_index":878,"title":{},"body":{"interfaces/Response.html":{},"injectables/TransformSignUpInterceptor.html":{}}}],["next.handle().pipe",{"_index":886,"title":{},"body":{"interfaces/Response.html":{},"injectables/TransformSignUpInterceptor.html":{}}}],["node.js",{"_index":1716,"title":{},"body":{"index.html":{}}}],["npm",{"_index":1652,"title":{},"body":{"dependencies.html":{},"index.html":{}}}],["ntegral/nestjs",{"_index":680,"title":{},"body":{"injectables/MailsService.html":{},"dependencies.html":{}}}],["null",{"_index":366,"title":{},"body":{"injectables/BankAccountService.html":{},"injectables/PlatformInterestService.html":{},"injectables/PointsConversionService.html":{},"injectables/ThirdPartyInterestService.html":{},"injectables/TransactionService.html":{},"injectables/UserAdministratorService.html":{},"injectables/UserClientService.html":{},"injectables/UserDetailsService.html":{},"injectables/UserService.html":{}}}],["nullable",{"_index":246,"title":{},"body":{"classes/Bank.html":{},"classes/BankAccount.html":{},"classes/ClientBankAccount.html":{},"classes/Country.html":{},"classes/Language.html":{},"classes/PlatformInterest.html":{},"classes/PointsConversion.html":{},"classes/Promotion.html":{},"classes/Role.html":{},"classes/RoutingNumber.html":{},"classes/State.html":{},"classes/StateBankAccount.html":{},"classes/StateTransaction.html":{},"classes/StateUser.html":{},"classes/Suscription.html":{},"classes/ThirdPartyInterest.html":{},"classes/Transaction.html":{},"classes/TransactionInterest.html":{},"classes/UserAdministrator.html":{},"classes/UserClient.html":{},"classes/UserDetails.html":{},"classes/UserRole.html":{},"classes/UserSuscription.html":{}}}],["nullvalueorcreatedlanguage",{"_index":1012,"title":{},"body":{"injectables/Seeder.html":{}}}],["number",{"_index":250,"title":{},"body":{"classes/Bank.html":{},"classes/BankAccount.html":{},"injectables/BankAccountService.html":{},"classes/ClientBankAccount.html":{},"classes/Country.html":{},"classes/CreateBankAccountDTO.html":{},"classes/Language.html":{},"classes/PlatformInterest.html":{},"classes/PointsConversion.html":{},"classes/Promotion.html":{},"classes/Role.html":{},"classes/RoutingNumber.html":{},"classes/State.html":{},"classes/StateBankAccount.html":{},"classes/StateTransaction.html":{},"classes/StateUser.html":{},"classes/Suscription.html":{},"classes/ThirdPartyInterest.html":{},"classes/Transaction.html":{},"classes/TransactionInterest.html":{},"injectables/TransactionService.html":{},"classes/UserAdministrator.html":{},"classes/UserClient.html":{},"classes/UserDetails.html":{},"classes/UserRole.html":{},"classes/UserSuscription.html":{}}}],["number((amount",{"_index":1338,"title":{},"body":{"injectables/TransactionService.html":{}}}],["number.entity",{"_index":260,"title":{},"body":{"classes/Bank.html":{}}}],["number.entity.ts",{"_index":942,"title":{},"body":{"classes/RoutingNumber.html":{},"coverage.html":{}}}],["number.entity.ts:16",{"_index":953,"title":{},"body":{"classes/RoutingNumber.html":{}}}],["number.entity.ts:19",{"_index":954,"title":{},"body":{"classes/RoutingNumber.html":{}}}],["number.entity.ts:22",{"_index":947,"title":{},"body":{"classes/RoutingNumber.html":{}}}],["number.entity.ts:25",{"_index":948,"title":{},"body":{"classes/RoutingNumber.html":{}}}],["number.entity.ts:32",{"_index":952,"title":{},"body":{"classes/RoutingNumber.html":{}}}],["number.entity.ts:39",{"_index":950,"title":{},"body":{"classes/RoutingNumber.html":{}}}],["number/routing",{"_index":259,"title":{},"body":{"classes/Bank.html":{},"classes/RoutingNumber.html":{},"coverage.html":{}}}],["object",{"_index":1906,"title":{},"body":{"miscellaneous/variables.html":{}}}],["observable",{"_index":872,"title":{},"body":{"interfaces/Response.html":{},"injectables/TransformSignUpInterceptor.html":{}}}],["one",{"_index":1802,"title":{},"body":{"miscellaneous/variables.html":{}}}],["onepointequalsdollars",{"_index":815,"title":{},"body":{"classes/PointsConversion.html":{},"miscellaneous/variables.html":{}}}],["onetomany",{"_index":264,"title":{},"body":{"classes/Bank.html":{},"classes/BankAccount.html":{},"classes/ClientBankAccount.html":{},"classes/Country.html":{},"classes/Language.html":{},"classes/PlatformInterest.html":{},"classes/PointsConversion.html":{},"classes/Promotion.html":{},"classes/Role.html":{},"classes/RoutingNumber.html":{},"classes/State.html":{},"classes/Suscription.html":{},"classes/ThirdPartyInterest.html":{},"classes/Transaction.html":{},"classes/UserAdministrator.html":{},"classes/UserClient.html":{},"classes/UserDetails.html":{}}}],["onetomany(undefined",{"_index":255,"title":{},"body":{"classes/Bank.html":{},"classes/BankAccount.html":{},"classes/ClientBankAccount.html":{},"classes/Country.html":{},"classes/Language.html":{},"classes/PlatformInterest.html":{},"classes/PointsConversion.html":{},"classes/Promotion.html":{},"classes/Role.html":{},"classes/State.html":{},"classes/Suscription.html":{},"classes/ThirdPartyInterest.html":{},"classes/Transaction.html":{},"classes/UserAdministrator.html":{},"classes/UserClient.html":{},"classes/UserDetails.html":{}}}],["onetoone",{"_index":289,"title":{},"body":{"classes/BankAccount.html":{},"classes/RoutingNumber.html":{},"classes/Transaction.html":{},"classes/UserAdministrator.html":{},"classes/UserClient.html":{},"classes/UserDetails.html":{},"classes/UserSuscription.html":{}}}],["onetoone(undefined",{"_index":951,"title":{},"body":{"classes/RoutingNumber.html":{},"classes/Transaction.html":{},"classes/UserAdministrator.html":{},"classes/UserClient.html":{},"classes/UserDetails.html":{},"classes/UserSuscription.html":{}}}],["open",{"_index":1746,"title":{},"body":{"index.html":{}}}],["optional",{"_index":93,"title":{},"body":{"controllers/AuthController.html":{},"injectables/AuthService.html":{},"classes/BankAccount.html":{},"controllers/BankAccountController.html":{},"injectables/BankAccountService.html":{},"injectables/BankSeederService.html":{},"injectables/ClientBankAccountService.html":{},"injectables/CountrySeederService.html":{},"classes/CreateUserDTO.html":{},"controllers/ExampleController.html":{},"injectables/JwtStrategy.html":{},"controllers/LanguageController.html":{},"injectables/LanguageSeederService.html":{},"injectables/LanguageService.html":{},"injectables/MailsService.html":{},"injectables/PlatformInterestSeederService.html":{},"injectables/PlatformInterestService.html":{},"injectables/PoeditorService.html":{},"injectables/PointsConversionSeederService.html":{},"injectables/PointsConversionService.html":{},"classes/Role.html":{},"injectables/RoleService.html":{},"guards/RolesGuard.html":{},"injectables/RolesSeederService.html":{},"injectables/Seeder.html":{},"classes/State.html":{},"classes/StateBankAccount.html":{},"injectables/StateBankAccountService.html":{},"injectables/StateSeederService.html":{},"injectables/StateService.html":{},"classes/StateTransaction.html":{},"injectables/StateTransactionService.html":{},"classes/StateUser.html":{},"injectables/StateUserService.html":{},"injectables/SuscriptionSeederService.html":{},"injectables/ThirdPartyInterestSeederService.html":{},"injectables/ThirdPartyInterestService.html":{},"injectables/TransactionInterestService.html":{},"injectables/TransactionService.html":{},"injectables/TransformSignUpInterceptor.html":{},"classes/UserAdministrator.html":{},"injectables/UserAdministratorService.html":{},"injectables/UserClientService.html":{},"controllers/UserController.html":{},"classes/UserDetails.html":{},"injectables/UserDetailsService.html":{},"classes/UserRole.html":{},"injectables/UserRoleService.html":{},"injectables/UserService.html":{},"miscellaneous/functions.html":{}}}],["options",{"_index":351,"title":{},"body":{"injectables/BankAccountService.html":{},"injectables/TransactionService.html":{},"miscellaneous/enumerations.html":{}}}],["options.accountnumber",{"_index":373,"title":{},"body":{"injectables/BankAccountService.html":{}}}],["options.checknumber",{"_index":377,"title":{},"body":{"injectables/BankAccountService.html":{}}}],["options.interest.amount",{"_index":1349,"title":{},"body":{"injectables/TransactionService.html":{}}}],["options.platforminterest",{"_index":1330,"title":{},"body":{"injectables/TransactionService.html":{}}}],["options.platforminterestextrapoints",{"_index":1332,"title":{},"body":{"injectables/TransactionService.html":{}}}],["options.platforminterestextrapointstype",{"_index":1321,"title":{},"body":{"injectables/TransactionService.html":{}}}],["options.platforminteresttype",{"_index":1319,"title":{},"body":{"injectables/TransactionService.html":{}}}],["options.promotion",{"_index":1331,"title":{},"body":{"injectables/TransactionService.html":{}}}],["options.routingnumber",{"_index":370,"title":{},"body":{"injectables/BankAccountService.html":{}}}],["options.statetransactiondescription",{"_index":1327,"title":{},"body":{"injectables/TransactionService.html":{}}}],["options.thirdpartyinterest",{"_index":1329,"title":{},"body":{"injectables/TransactionService.html":{}}}],["options.thirdpartyinterest.amountdollarcents",{"_index":1350,"title":{},"body":{"injectables/TransactionService.html":{}}}],["options.thirdpartyinteresttype",{"_index":1324,"title":{},"body":{"injectables/TransactionService.html":{}}}],["options.type",{"_index":375,"title":{},"body":{"injectables/BankAccountService.html":{}}}],["options.userdetails",{"_index":367,"title":{},"body":{"injectables/BankAccountService.html":{}}}],["out",{"_index":24,"title":{},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/BankAccountModule.html":{},"modules/BankSeederModule.html":{},"modules/CountrySeederModule.html":{},"controllers/ExampleController.html":{},"modules/ExampleModule.html":{},"modules/LanguageModule.html":{},"modules/LanguageSeederModule.html":{},"modules/MailsModule.html":{},"modules/ManagementModule.html":{},"modules/PlatformInterestSeederModule.html":{},"modules/PointsConversionSeederModule.html":{},"modules/RoleSeederModule.html":{},"modules/SeederModule.html":{},"modules/StatesSeederModule.html":{},"modules/SuscriptionSeederModule.html":{},"modules/ThirdPartyInterestSeederModule.html":{},"modules/TransactionModule.html":{},"modules/UserModule.html":{},"overview.html":{}}}],["overview",{"_index":1774,"title":{"overview.html":{}},"body":{"overview.html":{}}}],["package",{"_index":1632,"title":{"dependencies.html":{}},"body":{}}],["param",{"_index":616,"title":{},"body":{"controllers/LanguageController.html":{},"controllers/UserController.html":{}}}],["parameters",{"_index":90,"title":{},"body":{"controllers/AuthController.html":{},"injectables/AuthService.html":{},"controllers/BankAccountController.html":{},"injectables/BankAccountService.html":{},"injectables/BankSeederService.html":{},"injectables/ClientBankAccountService.html":{},"injectables/CountrySeederService.html":{},"controllers/ExampleController.html":{},"injectables/JwtStrategy.html":{},"controllers/LanguageController.html":{},"injectables/LanguageSeederService.html":{},"injectables/LanguageService.html":{},"injectables/MailsService.html":{},"injectables/PlatformInterestSeederService.html":{},"injectables/PlatformInterestService.html":{},"injectables/PoeditorService.html":{},"injectables/PointsConversionSeederService.html":{},"injectables/PointsConversionService.html":{},"injectables/RoleService.html":{},"guards/RolesGuard.html":{},"injectables/RolesSeederService.html":{},"injectables/Seeder.html":{},"injectables/StateBankAccountService.html":{},"injectables/StateSeederService.html":{},"injectables/StateService.html":{},"injectables/StateTransactionService.html":{},"injectables/StateUserService.html":{},"injectables/SuscriptionSeederService.html":{},"injectables/ThirdPartyInterestSeederService.html":{},"injectables/ThirdPartyInterestService.html":{},"injectables/TransactionInterestService.html":{},"injectables/TransactionService.html":{},"injectables/TransformSignUpInterceptor.html":{},"injectables/UserAdministratorService.html":{},"injectables/UserClientService.html":{},"controllers/UserController.html":{},"injectables/UserDetailsService.html":{},"injectables/UserRoleService.html":{},"injectables/UserService.html":{},"miscellaneous/functions.html":{}}}],["params",{"_index":1712,"title":{},"body":{"miscellaneous/functions.html":{}}}],["party",{"_index":713,"title":{},"body":{"modules/ManagementModule.html":{},"classes/ThirdPartyInterest.html":{},"modules/ThirdPartyInterestSeederModule.html":{},"injectables/ThirdPartyInterestSeederService.html":{},"injectables/ThirdPartyInterestService.html":{},"classes/TransactionInterest.html":{},"injectables/TransactionInterestService.html":{},"injectables/TransactionService.html":{},"coverage.html":{},"miscellaneous/enumerations.html":{}}}],["passhash",{"_index":213,"title":{},"body":{"injectables/AuthService.html":{}}}],["passport",{"_index":586,"title":{},"body":{"injectables/JwtStrategy.html":{},"dependencies.html":{}}}],["passportmodule",{"_index":146,"title":{},"body":{"modules/AuthModule.html":{}}}],["passportstrategy",{"_index":583,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["passportstrategy(strategy",{"_index":588,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["password",{"_index":186,"title":{},"body":{"injectables/AuthService.html":{},"classes/CreateUserDTO.html":{},"interfaces/Response.html":{},"injectables/TransformSignUpInterceptor.html":{},"classes/UserAdministrator.html":{},"classes/UserClient.html":{},"injectables/UserService.html":{},"miscellaneous/variables.html":{}}}],["patch",{"_index":1685,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["payload",{"_index":225,"title":{},"body":{"injectables/AuthService.html":{},"injectables/JwtStrategy.html":{}}}],["payload.email",{"_index":596,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["payload.role",{"_index":602,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["paymentprovider",{"_index":1217,"title":{},"body":{"classes/ThirdPartyInterest.html":{},"injectables/ThirdPartyInterestService.html":{},"miscellaneous/variables.html":{}}}],["paymentproviderinterest",{"_index":1310,"title":{},"body":{"injectables/TransactionService.html":{}}}],["percentage",{"_index":731,"title":{},"body":{"classes/PlatformInterest.html":{},"classes/Promotion.html":{},"classes/ThirdPartyInterest.html":{},"miscellaneous/variables.html":{}}}],["person",{"_index":364,"title":{},"body":{"injectables/BankAccountService.html":{}}}],["petromiles",{"_index":66,"title":{},"body":{"modules/AppModule.html":{},"injectables/BankAccountService.html":{},"miscellaneous/enumerations.html":{}}}],["pg",{"_index":1657,"title":{},"body":{"dependencies.html":{}}}],["phone",{"_index":496,"title":{},"body":{"classes/CreateUserDTO.html":{},"injectables/UserClientService.html":{},"classes/UserDetails.html":{}}}],["photo",{"_index":497,"title":{},"body":{"classes/CreateUserDTO.html":{},"classes/UserAdministrator.html":{},"injectables/UserClientService.html":{},"classes/UserDetails.html":{}}}],["plataform_interests",{"_index":775,"title":{},"body":{"injectables/PlatformInterestSeederService.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["plataform_interests.map(platforminterest",{"_index":778,"title":{},"body":{"injectables/PlatformInterestSeederService.html":{}}}],["platform",{"_index":706,"title":{},"body":{"modules/ManagementModule.html":{},"injectables/PlatformInterestService.html":{}}}],["platform_interest.data",{"_index":776,"title":{},"body":{"injectables/PlatformInterestSeederService.html":{}}}],["platform_interest.service",{"_index":766,"title":{},"body":{"modules/PlatformInterestSeederModule.html":{}}}],["platform_interest/platform_interest.module",{"_index":1053,"title":{},"body":{"modules/SeederModule.html":{}}}],["platform_interest/platform_interest.service",{"_index":981,"title":{},"body":{"injectables/Seeder.html":{}}}],["platform_rows",{"_index":992,"title":{},"body":{"injectables/Seeder.html":{}}}],["platforminterest",{"_index":719,"title":{"classes/PlatformInterest.html":{}},"body":{"modules/ManagementModule.html":{},"classes/PlatformInterest.html":{},"modules/PlatformInterestSeederModule.html":{},"injectables/PlatformInterestSeederService.html":{},"injectables/PlatformInterestService.html":{},"injectables/Seeder.html":{},"classes/Suscription.html":{},"classes/TransactionInterest.html":{},"injectables/TransactionInterestService.html":{},"injectables/TransactionService.html":{},"coverage.html":{},"miscellaneous/enumerations.html":{}}}],["platforminterest.idplatforminterest",{"_index":1194,"title":{},"body":{"classes/Suscription.html":{},"classes/TransactionInterest.html":{}}}],["platforminterest.verification",{"_index":1343,"title":{},"body":{"injectables/TransactionService.html":{}}}],["platforminterestenum",{"_index":784,"title":{},"body":{"injectables/PlatformInterestService.html":{}}}],["platforminterestextrapoints",{"_index":1265,"title":{},"body":{"classes/TransactionInterest.html":{},"injectables/TransactionInterestService.html":{}}}],["platforminterestextrapointstype",{"_index":1344,"title":{},"body":{"injectables/TransactionService.html":{}}}],["platforminterestrepository",{"_index":773,"title":{},"body":{"injectables/PlatformInterestSeederService.html":{},"injectables/PlatformInterestService.html":{}}}],["platforminterestseedermodule",{"_index":760,"title":{"modules/PlatformInterestSeederModule.html":{}},"body":{"modules/PlatformInterestSeederModule.html":{},"modules/SeederModule.html":{},"modules.html":{},"overview.html":{}}}],["platforminterestseederservice",{"_index":764,"title":{"injectables/PlatformInterestSeederService.html":{}},"body":{"modules/PlatformInterestSeederModule.html":{},"injectables/PlatformInterestSeederService.html":{},"injectables/Seeder.html":{},"coverage.html":{},"overview.html":{}}}],["platforminterestservice",{"_index":701,"title":{"injectables/PlatformInterestService.html":{}},"body":{"modules/ManagementModule.html":{},"injectables/PlatformInterestService.html":{},"injectables/TransactionService.html":{},"coverage.html":{},"overview.html":{}}}],["platforminteresttype",{"_index":1342,"title":{},"body":{"injectables/TransactionService.html":{}}}],["please",{"_index":550,"title":{},"body":{"controllers/ExampleController.html":{},"index.html":{}}}],["pnc",{"_index":1830,"title":{},"body":{"miscellaneous/variables.html":{}}}],["poeditor/poeditor.service",{"_index":629,"title":{},"body":{"modules/LanguageModule.html":{},"injectables/LanguageService.html":{}}}],["poeditorconfig",{"_index":795,"title":{},"body":{"injectables/PoeditorService.html":{}}}],["poeditorconfig.apisecretkey",{"_index":799,"title":{},"body":{"injectables/PoeditorService.html":{}}}],["poeditorconfig.projectid",{"_index":801,"title":{},"body":{"injectables/PoeditorService.html":{}}}],["poeditorservice",{"_index":625,"title":{"injectables/PoeditorService.html":{}},"body":{"modules/LanguageModule.html":{},"injectables/LanguageService.html":{},"injectables/PoeditorService.html":{},"coverage.html":{},"overview.html":{}}}],["poeditorterms",{"_index":806,"title":{},"body":{"injectables/PoeditorService.html":{}}}],["points",{"_index":709,"title":{},"body":{"modules/ManagementModule.html":{},"injectables/PointsConversionService.html":{}}}],["points_conversion",{"_index":837,"title":{},"body":{"injectables/PointsConversionSeederService.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["points_conversion.data",{"_index":838,"title":{},"body":{"injectables/PointsConversionSeederService.html":{}}}],["points_conversion.map(pointsconversion",{"_index":840,"title":{},"body":{"injectables/PointsConversionSeederService.html":{}}}],["points_conversion.service",{"_index":828,"title":{},"body":{"modules/PointsConversionSeederModule.html":{}}}],["points_conversion/points_conversion.module",{"_index":1055,"title":{},"body":{"modules/SeederModule.html":{}}}],["points_conversion/points_conversion.service",{"_index":983,"title":{},"body":{"injectables/Seeder.html":{}}}],["points_conversion_rows",{"_index":994,"title":{},"body":{"injectables/Seeder.html":{}}}],["points_convertion_rows",{"_index":1035,"title":{},"body":{"injectables/Seeder.html":{}}}],["pointsconversion",{"_index":721,"title":{"classes/PointsConversion.html":{}},"body":{"modules/ManagementModule.html":{},"classes/PointsConversion.html":{},"modules/PointsConversionSeederModule.html":{},"injectables/PointsConversionSeederService.html":{},"injectables/PointsConversionService.html":{},"injectables/Seeder.html":{},"classes/Transaction.html":{},"injectables/TransactionService.html":{},"coverage.html":{}}}],["pointsconversion.idpointsconversion",{"_index":1262,"title":{},"body":{"classes/Transaction.html":{}}}],["pointsconversionrepository",{"_index":835,"title":{},"body":{"injectables/PointsConversionSeederService.html":{},"injectables/PointsConversionService.html":{}}}],["pointsconversionseedermodule",{"_index":822,"title":{"modules/PointsConversionSeederModule.html":{}},"body":{"modules/PointsConversionSeederModule.html":{},"modules/SeederModule.html":{},"modules.html":{},"overview.html":{}}}],["pointsconversionseederservice",{"_index":826,"title":{"injectables/PointsConversionSeederService.html":{}},"body":{"modules/PointsConversionSeederModule.html":{},"injectables/PointsConversionSeederService.html":{},"injectables/Seeder.html":{},"coverage.html":{},"overview.html":{}}}],["pointsconversionservice",{"_index":702,"title":{"injectables/PointsConversionService.html":{}},"body":{"modules/ManagementModule.html":{},"injectables/PointsConversionService.html":{},"injectables/TransactionService.html":{},"coverage.html":{},"overview.html":{}}}],["port",{"_index":1860,"title":{},"body":{"miscellaneous/variables.html":{}}}],["post",{"_index":101,"title":{},"body":{"controllers/AuthController.html":{},"controllers/BankAccountController.html":{},"miscellaneous/enumerations.html":{}}}],["post('https://api.poeditor.com/v2/terms/list",{"_index":808,"title":{},"body":{"injectables/PoeditorService.html":{}}}],["post('login",{"_index":87,"title":{},"body":{"controllers/AuthController.html":{}}}],["post('signup",{"_index":121,"title":{},"body":{"controllers/AuthController.html":{}}}],["precision",{"_index":736,"title":{},"body":{"classes/PlatformInterest.html":{},"classes/PointsConversion.html":{},"classes/Promotion.html":{},"classes/Transaction.html":{}}}],["prefix",{"_index":77,"title":{},"body":{"controllers/AuthController.html":{},"controllers/BankAccountController.html":{},"controllers/ExampleController.html":{},"controllers/LanguageController.html":{},"controllers/UserController.html":{}}}],["premium",{"_index":1689,"title":{},"body":{"miscellaneous/enumerations.html":{},"miscellaneous/variables.html":{}}}],["primary",{"_index":274,"title":{},"body":{"classes/BankAccount.html":{}}}],["primarygeneratedcolumn",{"_index":251,"title":{},"body":{"classes/Bank.html":{},"classes/BankAccount.html":{},"classes/ClientBankAccount.html":{},"classes/Country.html":{},"classes/Language.html":{},"classes/PlatformInterest.html":{},"classes/PointsConversion.html":{},"classes/Promotion.html":{},"classes/Role.html":{},"classes/RoutingNumber.html":{},"classes/State.html":{},"classes/StateBankAccount.html":{},"classes/StateTransaction.html":{},"classes/StateUser.html":{},"classes/Suscription.html":{},"classes/ThirdPartyInterest.html":{},"classes/Transaction.html":{},"classes/TransactionInterest.html":{},"classes/UserAdministrator.html":{},"classes/UserClient.html":{},"classes/UserDetails.html":{},"classes/UserRole.html":{},"classes/UserSuscription.html":{}}}],["private",{"_index":118,"title":{},"body":{"controllers/AuthController.html":{},"injectables/AuthService.html":{},"controllers/BankAccountController.html":{},"injectables/BankAccountService.html":{},"injectables/BankSeederService.html":{},"injectables/ClientBankAccountService.html":{},"injectables/CountrySeederService.html":{},"controllers/ExampleController.html":{},"injectables/JwtStrategy.html":{},"injectables/LanguageSeederService.html":{},"injectables/MailsService.html":{},"injectables/PlatformInterestSeederService.html":{},"injectables/PlatformInterestService.html":{},"injectables/PoeditorService.html":{},"injectables/PointsConversionSeederService.html":{},"injectables/PointsConversionService.html":{},"interfaces/Response.html":{},"injectables/RoleService.html":{},"guards/RolesGuard.html":{},"injectables/RolesSeederService.html":{},"injectables/Seeder.html":{},"injectables/StateBankAccountService.html":{},"injectables/StateSeederService.html":{},"injectables/StateService.html":{},"injectables/StateUserService.html":{},"injectables/SuscriptionSeederService.html":{},"injectables/ThirdPartyInterestSeederService.html":{},"injectables/ThirdPartyInterestService.html":{},"injectables/TransactionService.html":{},"injectables/TransformSignUpInterceptor.html":{},"injectables/UserClientService.html":{},"controllers/UserController.html":{},"injectables/UserDetailsService.html":{},"injectables/UserRoleService.html":{},"injectables/UserService.html":{}}}],["privileges",{"_index":932,"title":{},"body":{"guards/RolesGuard.html":{}}}],["problem",{"_index":694,"title":{},"body":{"injectables/MailsService.html":{}}}],["process",{"_index":129,"title":{},"body":{"controllers/AuthController.html":{},"miscellaneous/variables.html":{}}}],["process.env.database_host",{"_index":1858,"title":{},"body":{"miscellaneous/variables.html":{}}}],["process.env.database_name",{"_index":1869,"title":{},"body":{"miscellaneous/variables.html":{}}}],["process.env.database_password",{"_index":1866,"title":{},"body":{"miscellaneous/variables.html":{}}}],["process.env.database_port",{"_index":1861,"title":{},"body":{"miscellaneous/variables.html":{}}}],["process.env.database_synchronize",{"_index":1875,"title":{},"body":{"miscellaneous/variables.html":{}}}],["process.env.database_user",{"_index":1864,"title":{},"body":{"miscellaneous/variables.html":{}}}],["process.env.node_env",{"_index":60,"title":{},"body":{"modules/AppModule.html":{},"interfaces/createOptionsParams.html":{}}}],["production",{"_index":1736,"title":{},"body":{"index.html":{}}}],["progressive",{"_index":1715,"title":{},"body":{"index.html":{}}}],["project",{"_index":1747,"title":{},"body":{"index.html":{}}}],["promise",{"_index":180,"title":{},"body":{"injectables/AuthService.html":{},"injectables/BankAccountService.html":{},"injectables/BankSeederService.html":{},"injectables/ClientBankAccountService.html":{},"injectables/CountrySeederService.html":{},"injectables/LanguageSeederService.html":{},"injectables/PlatformInterestSeederService.html":{},"injectables/PlatformInterestService.html":{},"injectables/PointsConversionSeederService.html":{},"injectables/PointsConversionService.html":{},"interfaces/Response.html":{},"injectables/RoleService.html":{},"injectables/RolesSeederService.html":{},"injectables/Seeder.html":{},"injectables/StateSeederService.html":{},"injectables/StateService.html":{},"injectables/StateTransactionService.html":{},"injectables/StateUserService.html":{},"injectables/SuscriptionSeederService.html":{},"injectables/ThirdPartyInterestSeederService.html":{},"injectables/ThirdPartyInterestService.html":{},"injectables/TransactionInterestService.html":{},"injectables/TransactionService.html":{},"injectables/TransformSignUpInterceptor.html":{},"injectables/UserAdministratorService.html":{},"injectables/UserClientService.html":{},"injectables/UserDetailsService.html":{},"injectables/UserRoleService.html":{}}}],["promise.all",{"_index":1026,"title":{},"body":{"injectables/Seeder.html":{}}}],["promise.all(this.bankseederservice.createbank",{"_index":1037,"title":{},"body":{"injectables/Seeder.html":{}}}],["promise.all(this.countryseederservice.createcountry",{"_index":1018,"title":{},"body":{"injectables/Seeder.html":{}}}],["promise.all(this.languageseederservice.createlanguage",{"_index":1022,"title":{},"body":{"injectables/Seeder.html":{}}}],["promise.all(this.roleseederservice.createrole",{"_index":1014,"title":{},"body":{"injectables/Seeder.html":{}}}],["promise.all(this.stateseederservice.createstate",{"_index":1009,"title":{},"body":{"injectables/Seeder.html":{}}}],["promise.all(this.suscriptionseederservice.createsuscription",{"_index":1023,"title":{},"body":{"injectables/Seeder.html":{}}}],["promise.reject(error",{"_index":1000,"title":{},"body":{"injectables/Seeder.html":{}}}],["promotion",{"_index":847,"title":{"classes/Promotion.html":{}},"body":{"classes/Promotion.html":{},"classes/TransactionInterest.html":{},"injectables/TransactionInterestService.html":{},"coverage.html":{}}}],["promotion.idpromotion",{"_index":1278,"title":{},"body":{"classes/TransactionInterest.html":{}}}],["properties",{"_index":240,"title":{},"body":{"classes/Bank.html":{},"classes/BankAccount.html":{},"classes/ClientBankAccount.html":{},"classes/Country.html":{},"classes/CreateBankAccountDTO.html":{},"classes/CreateUserDTO.html":{},"classes/Language.html":{},"classes/PlatformInterest.html":{},"classes/PointsConversion.html":{},"classes/Promotion.html":{},"interfaces/Response.html":{},"classes/Role.html":{},"classes/RoutingNumber.html":{},"classes/State.html":{},"classes/StateBankAccount.html":{},"classes/StateTransaction.html":{},"classes/StateUser.html":{},"injectables/StateUserService.html":{},"classes/Suscription.html":{},"classes/ThirdPartyInterest.html":{},"classes/Transaction.html":{},"classes/TransactionInterest.html":{},"classes/UserAdministrator.html":{},"classes/UserClient.html":{},"classes/UserDetails.html":{},"classes/UserRole.html":{},"injectables/UserRoleService.html":{},"classes/UserSuscription.html":{},"interfaces/createOptionsParams.html":{}}}],["protectedwithoutrole",{"_index":528,"title":{},"body":{"controllers/ExampleController.html":{}}}],["protectedwithoutrole(@getuser",{"_index":561,"title":{},"body":{"controllers/ExampleController.html":{}}}],["protectedwithoutrole(user",{"_index":536,"title":{},"body":{"controllers/ExampleController.html":{}}}],["provide",{"_index":661,"title":{},"body":{"modules/MailsModule.html":{}}}],["providers",{"_index":7,"title":{},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/BankAccountModule.html":{},"modules/BankSeederModule.html":{},"modules/CountrySeederModule.html":{},"modules/ExampleModule.html":{},"modules/LanguageModule.html":{},"modules/LanguageSeederModule.html":{},"modules/MailsModule.html":{},"modules/ManagementModule.html":{},"modules/PlatformInterestSeederModule.html":{},"modules/PointsConversionSeederModule.html":{},"modules/RoleSeederModule.html":{},"modules/SeederModule.html":{},"modules/StatesSeederModule.html":{},"modules/SuscriptionSeederModule.html":{},"modules/ThirdPartyInterestSeederModule.html":{},"modules/TransactionModule.html":{},"modules/UserModule.html":{},"overview.html":{}}}],["public",{"_index":669,"title":{},"body":{"injectables/MailsService.html":{}}}],["put",{"_index":1683,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["queryrunner",{"_index":985,"title":{},"body":{"injectables/Seeder.html":{}}}],["random",{"_index":1351,"title":{},"body":{"injectables/TransactionService.html":{}}}],["randomamount",{"_index":1337,"title":{},"body":{"injectables/TransactionService.html":{}}}],["randomamounts",{"_index":1347,"title":{},"body":{"injectables/TransactionService.html":{}}}],["randomamounts[0",{"_index":1354,"title":{},"body":{"injectables/TransactionService.html":{}}}],["randomamounts[1",{"_index":1355,"title":{},"body":{"injectables/TransactionService.html":{}}}],["rawamount",{"_index":1245,"title":{},"body":{"classes/Transaction.html":{}}}],["read",{"_index":1756,"title":{},"body":{"index.html":{}}}],["readonly",{"_index":119,"title":{},"body":{"controllers/AuthController.html":{},"controllers/BankAccountController.html":{},"injectables/BankAccountService.html":{},"injectables/BankSeederService.html":{},"injectables/CountrySeederService.html":{},"controllers/ExampleController.html":{},"controllers/LanguageController.html":{},"injectables/LanguageSeederService.html":{},"injectables/MailsService.html":{},"injectables/PlatformInterestSeederService.html":{},"injectables/PointsConversionSeederService.html":{},"injectables/RolesSeederService.html":{},"injectables/Seeder.html":{},"injectables/StateBankAccountService.html":{},"injectables/StateSeederService.html":{},"injectables/SuscriptionSeederService.html":{},"injectables/ThirdPartyInterestSeederService.html":{},"injectables/TransactionService.html":{},"injectables/UserClientService.html":{},"controllers/UserController.html":{}}}],["ready",{"_index":1907,"title":{},"body":{"miscellaneous/variables.html":{}}}],["reason",{"_index":696,"title":{},"body":{"injectables/MailsService.html":{}}}],["reflect",{"_index":1659,"title":{},"body":{"dependencies.html":{}}}],["reflector",{"_index":920,"title":{},"body":{"guards/RolesGuard.html":{}}}],["region",{"_index":946,"title":{},"body":{"classes/RoutingNumber.html":{}}}],["regions",{"_index":1832,"title":{},"body":{"miscellaneous/variables.html":{}}}],["registered",{"_index":1440,"title":{},"body":{"injectables/UserClientService.html":{}}}],["relations",{"_index":1505,"title":{},"body":{"injectables/UserDetailsService.html":{}}}],["repository",{"_index":345,"title":{},"body":{"injectables/BankAccountService.html":{},"injectables/BankSeederService.html":{},"injectables/ClientBankAccountService.html":{},"injectables/CountrySeederService.html":{},"injectables/LanguageSeederService.html":{},"injectables/PlatformInterestSeederService.html":{},"injectables/PlatformInterestService.html":{},"injectables/PointsConversionSeederService.html":{},"injectables/PointsConversionService.html":{},"injectables/RoleService.html":{},"injectables/RolesSeederService.html":{},"injectables/StateSeederService.html":{},"injectables/StateService.html":{},"injectables/SuscriptionSeederService.html":{},"injectables/ThirdPartyInterestSeederService.html":{},"injectables/ThirdPartyInterestService.html":{},"injectables/TransactionService.html":{},"injectables/UserClientService.html":{},"injectables/UserDetailsService.html":{},"index.html":{}}}],["req",{"_index":879,"title":{},"body":{"interfaces/Response.html":{},"injectables/TransformSignUpInterceptor.html":{},"miscellaneous/variables.html":{}}}],["req.body.password",{"_index":882,"title":{},"body":{"interfaces/Response.html":{},"injectables/TransformSignUpInterceptor.html":{}}}],["req.body.salt",{"_index":885,"title":{},"body":{"interfaces/Response.html":{},"injectables/TransformSignUpInterceptor.html":{}}}],["req.user",{"_index":1891,"title":{},"body":{"miscellaneous/variables.html":{}}}],["request",{"_index":542,"title":{},"body":{"controllers/ExampleController.html":{},"guards/RolesGuard.html":{}}}],["request.user",{"_index":928,"title":{},"body":{"guards/RolesGuard.html":{}}}],["requests.enum",{"_index":1457,"title":{},"body":{"controllers/UserController.html":{}}}],["requests.enum.ts",{"_index":1673,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["reset",{"_index":23,"title":{},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/BankAccountModule.html":{},"modules/BankSeederModule.html":{},"modules/CountrySeederModule.html":{},"modules/ExampleModule.html":{},"modules/LanguageModule.html":{},"modules/LanguageSeederModule.html":{},"modules/MailsModule.html":{},"modules/ManagementModule.html":{},"modules/PlatformInterestSeederModule.html":{},"modules/PointsConversionSeederModule.html":{},"modules/RoleSeederModule.html":{},"modules/SeederModule.html":{},"modules/StatesSeederModule.html":{},"modules/SuscriptionSeederModule.html":{},"modules/ThirdPartyInterestSeederModule.html":{},"modules/TransactionModule.html":{},"modules/UserModule.html":{},"overview.html":{}}}],["response",{"_index":864,"title":{"interfaces/Response.html":{}},"body":{"interfaces/Response.html":{},"injectables/TransformSignUpInterceptor.html":{},"coverage.html":{}}}],["restrictions",{"_index":559,"title":{},"body":{"controllers/ExampleController.html":{}}}],["result",{"_index":70,"title":{},"body":{"modules/AppModule.html":{},"controllers/AuthController.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"classes/Bank.html":{},"classes/BankAccount.html":{},"controllers/BankAccountController.html":{},"modules/BankAccountModule.html":{},"injectables/BankAccountService.html":{},"modules/BankSeederModule.html":{},"injectables/BankSeederService.html":{},"classes/ClientBankAccount.html":{},"injectables/ClientBankAccountService.html":{},"classes/Country.html":{},"modules/CountrySeederModule.html":{},"injectables/CountrySeederService.html":{},"classes/CreateBankAccountDTO.html":{},"classes/CreateUserDTO.html":{},"modules/DatabaseModule.html":{},"controllers/ExampleController.html":{},"modules/ExampleModule.html":{},"injectables/JwtStrategy.html":{},"classes/Language.html":{},"controllers/LanguageController.html":{},"modules/LanguageModule.html":{},"modules/LanguageSeederModule.html":{},"injectables/LanguageSeederService.html":{},"injectables/LanguageService.html":{},"modules/MailsModule.html":{},"injectables/MailsService.html":{},"modules/ManagementModule.html":{},"classes/PlatformInterest.html":{},"modules/PlatformInterestSeederModule.html":{},"injectables/PlatformInterestSeederService.html":{},"injectables/PlatformInterestService.html":{},"injectables/PoeditorService.html":{},"classes/PointsConversion.html":{},"modules/PointsConversionSeederModule.html":{},"injectables/PointsConversionSeederService.html":{},"injectables/PointsConversionService.html":{},"classes/Promotion.html":{},"interfaces/Response.html":{},"classes/Role.html":{},"modules/RoleSeederModule.html":{},"injectables/RoleService.html":{},"guards/RolesGuard.html":{},"injectables/RolesSeederService.html":{},"classes/RoutingNumber.html":{},"injectables/Seeder.html":{},"modules/SeederModule.html":{},"classes/State.html":{},"classes/StateBankAccount.html":{},"injectables/StateBankAccountService.html":{},"injectables/StateSeederService.html":{},"injectables/StateService.html":{},"classes/StateTransaction.html":{},"injectables/StateTransactionService.html":{},"classes/StateUser.html":{},"injectables/StateUserService.html":{},"modules/StatesSeederModule.html":{},"classes/Suscription.html":{},"modules/SuscriptionModule.html":{},"modules/SuscriptionSeederModule.html":{},"injectables/SuscriptionSeederService.html":{},"classes/ThirdPartyInterest.html":{},"modules/ThirdPartyInterestSeederModule.html":{},"injectables/ThirdPartyInterestSeederService.html":{},"injectables/ThirdPartyInterestService.html":{},"classes/Transaction.html":{},"classes/TransactionInterest.html":{},"injectables/TransactionInterestService.html":{},"modules/TransactionModule.html":{},"injectables/TransactionService.html":{},"injectables/TransformSignUpInterceptor.html":{},"classes/UserAdministrator.html":{},"injectables/UserAdministratorService.html":{},"classes/UserClient.html":{},"injectables/UserClientService.html":{},"controllers/UserController.html":{},"classes/UserDetails.html":{},"injectables/UserDetailsService.html":{},"modules/UserModule.html":{},"classes/UserRole.html":{},"injectables/UserRoleService.html":{},"injectables/UserService.html":{},"classes/UserSuscription.html":{},"coverage.html":{},"interfaces/createOptionsParams.html":{},"dependencies.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{},"index.html":{},"modules.html":{},"overview.html":{},"miscellaneous/variables.html":{}}}],["result.userclient",{"_index":1507,"title":{},"body":{"injectables/UserDetailsService.html":{}}}],["results",{"_index":72,"title":{},"body":{"modules/AppModule.html":{},"controllers/AuthController.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"classes/Bank.html":{},"classes/BankAccount.html":{},"controllers/BankAccountController.html":{},"modules/BankAccountModule.html":{},"injectables/BankAccountService.html":{},"modules/BankSeederModule.html":{},"injectables/BankSeederService.html":{},"classes/ClientBankAccount.html":{},"injectables/ClientBankAccountService.html":{},"classes/Country.html":{},"modules/CountrySeederModule.html":{},"injectables/CountrySeederService.html":{},"classes/CreateBankAccountDTO.html":{},"classes/CreateUserDTO.html":{},"modules/DatabaseModule.html":{},"controllers/ExampleController.html":{},"modules/ExampleModule.html":{},"injectables/JwtStrategy.html":{},"classes/Language.html":{},"controllers/LanguageController.html":{},"modules/LanguageModule.html":{},"modules/LanguageSeederModule.html":{},"injectables/LanguageSeederService.html":{},"injectables/LanguageService.html":{},"modules/MailsModule.html":{},"injectables/MailsService.html":{},"modules/ManagementModule.html":{},"classes/PlatformInterest.html":{},"modules/PlatformInterestSeederModule.html":{},"injectables/PlatformInterestSeederService.html":{},"injectables/PlatformInterestService.html":{},"injectables/PoeditorService.html":{},"classes/PointsConversion.html":{},"modules/PointsConversionSeederModule.html":{},"injectables/PointsConversionSeederService.html":{},"injectables/PointsConversionService.html":{},"classes/Promotion.html":{},"interfaces/Response.html":{},"classes/Role.html":{},"modules/RoleSeederModule.html":{},"injectables/RoleService.html":{},"guards/RolesGuard.html":{},"injectables/RolesSeederService.html":{},"classes/RoutingNumber.html":{},"injectables/Seeder.html":{},"modules/SeederModule.html":{},"classes/State.html":{},"classes/StateBankAccount.html":{},"injectables/StateBankAccountService.html":{},"injectables/StateSeederService.html":{},"injectables/StateService.html":{},"classes/StateTransaction.html":{},"injectables/StateTransactionService.html":{},"classes/StateUser.html":{},"injectables/StateUserService.html":{},"modules/StatesSeederModule.html":{},"classes/Suscription.html":{},"modules/SuscriptionModule.html":{},"modules/SuscriptionSeederModule.html":{},"injectables/SuscriptionSeederService.html":{},"classes/ThirdPartyInterest.html":{},"modules/ThirdPartyInterestSeederModule.html":{},"injectables/ThirdPartyInterestSeederService.html":{},"injectables/ThirdPartyInterestService.html":{},"classes/Transaction.html":{},"classes/TransactionInterest.html":{},"injectables/TransactionInterestService.html":{},"modules/TransactionModule.html":{},"injectables/TransactionService.html":{},"injectables/TransformSignUpInterceptor.html":{},"classes/UserAdministrator.html":{},"injectables/UserAdministratorService.html":{},"classes/UserClient.html":{},"injectables/UserClientService.html":{},"controllers/UserController.html":{},"classes/UserDetails.html":{},"injectables/UserDetailsService.html":{},"modules/UserModule.html":{},"classes/UserRole.html":{},"injectables/UserRoleService.html":{},"injectables/UserService.html":{},"classes/UserSuscription.html":{},"coverage.html":{},"interfaces/createOptionsParams.html":{},"dependencies.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{},"index.html":{},"modules.html":{},"overview.html":{},"miscellaneous/variables.html":{}}}],["return",{"_index":130,"title":{},"body":{"controllers/AuthController.html":{},"injectables/AuthService.html":{},"controllers/BankAccountController.html":{},"injectables/BankAccountService.html":{},"injectables/BankSeederService.html":{},"injectables/ClientBankAccountService.html":{},"injectables/CountrySeederService.html":{},"controllers/ExampleController.html":{},"injectables/JwtStrategy.html":{},"controllers/LanguageController.html":{},"injectables/LanguageSeederService.html":{},"injectables/LanguageService.html":{},"modules/MailsModule.html":{},"injectables/PlatformInterestSeederService.html":{},"injectables/PlatformInterestService.html":{},"injectables/PoeditorService.html":{},"injectables/PointsConversionSeederService.html":{},"injectables/PointsConversionService.html":{},"interfaces/Response.html":{},"injectables/RoleService.html":{},"guards/RolesGuard.html":{},"injectables/RolesSeederService.html":{},"injectables/Seeder.html":{},"injectables/StateBankAccountService.html":{},"injectables/StateSeederService.html":{},"injectables/StateService.html":{},"injectables/StateTransactionService.html":{},"injectables/StateUserService.html":{},"injectables/SuscriptionSeederService.html":{},"injectables/ThirdPartyInterestSeederService.html":{},"injectables/ThirdPartyInterestService.html":{},"injectables/TransactionInterestService.html":{},"injectables/TransactionService.html":{},"injectables/TransformSignUpInterceptor.html":{},"injectables/UserAdministratorService.html":{},"injectables/UserClientService.html":{},"controllers/UserController.html":{},"injectables/UserDetailsService.html":{},"injectables/UserRoleService.html":{},"injectables/UserService.html":{},"interfaces/createOptionsParams.html":{},"miscellaneous/variables.html":{}}}],["returns",{"_index":95,"title":{},"body":{"controllers/AuthController.html":{},"injectables/AuthService.html":{},"controllers/BankAccountController.html":{},"injectables/BankAccountService.html":{},"injectables/BankSeederService.html":{},"injectables/ClientBankAccountService.html":{},"injectables/CountrySeederService.html":{},"controllers/ExampleController.html":{},"injectables/JwtStrategy.html":{},"controllers/LanguageController.html":{},"injectables/LanguageSeederService.html":{},"injectables/LanguageService.html":{},"injectables/MailsService.html":{},"injectables/PlatformInterestSeederService.html":{},"injectables/PlatformInterestService.html":{},"injectables/PoeditorService.html":{},"injectables/PointsConversionSeederService.html":{},"injectables/PointsConversionService.html":{},"injectables/RoleService.html":{},"guards/RolesGuard.html":{},"injectables/RolesSeederService.html":{},"injectables/Seeder.html":{},"injectables/StateBankAccountService.html":{},"injectables/StateSeederService.html":{},"injectables/StateService.html":{},"injectables/StateTransactionService.html":{},"injectables/StateUserService.html":{},"injectables/SuscriptionSeederService.html":{},"injectables/ThirdPartyInterestSeederService.html":{},"injectables/ThirdPartyInterestService.html":{},"injectables/TransactionInterestService.html":{},"injectables/TransactionService.html":{},"injectables/TransformSignUpInterceptor.html":{},"injectables/UserAdministratorService.html":{},"injectables/UserClientService.html":{},"controllers/UserController.html":{},"injectables/UserDetailsService.html":{},"injectables/UserRoleService.html":{},"injectables/UserService.html":{},"miscellaneous/functions.html":{}}}],["rimraf",{"_index":1662,"title":{},"body":{"dependencies.html":{}}}],["role",{"_index":176,"title":{"classes/Role.html":{}},"body":{"injectables/AuthService.html":{},"controllers/ExampleController.html":{},"injectables/JwtStrategy.html":{},"modules/ManagementModule.html":{},"classes/Role.html":{},"modules/RoleSeederModule.html":{},"injectables/RoleService.html":{},"injectables/RolesSeederService.html":{},"injectables/Seeder.html":{},"injectables/UserClientService.html":{},"controllers/UserController.html":{},"classes/UserRole.html":{},"injectables/UserRoleService.html":{},"injectables/UserService.html":{},"coverage.html":{},"miscellaneous/enumerations.html":{}}}],["role.client",{"_index":203,"title":{},"body":{"injectables/AuthService.html":{},"injectables/UserClientService.html":{}}}],["role.data",{"_index":938,"title":{},"body":{"injectables/RolesSeederService.html":{}}}],["role.entity",{"_index":894,"title":{},"body":{"classes/Role.html":{},"injectables/RoleService.html":{},"classes/UserAdministrator.html":{},"classes/UserClient.html":{},"injectables/UserRoleService.html":{}}}],["role.entity.ts",{"_index":1518,"title":{},"body":{"classes/UserRole.html":{},"coverage.html":{}}}],["role.entity.ts:17",{"_index":1520,"title":{},"body":{"classes/UserRole.html":{}}}],["role.entity.ts:25",{"_index":1523,"title":{},"body":{"classes/UserRole.html":{}}}],["role.entity.ts:33",{"_index":1524,"title":{},"body":{"classes/UserRole.html":{}}}],["role.entity.ts:41",{"_index":1522,"title":{},"body":{"classes/UserRole.html":{}}}],["role.enum",{"_index":913,"title":{},"body":{"injectables/RoleService.html":{}}}],["role.idrole",{"_index":1526,"title":{},"body":{"classes/UserRole.html":{}}}],["role.service",{"_index":902,"title":{},"body":{"modules/RoleSeederModule.html":{},"injectables/UserClientService.html":{},"modules/UserModule.html":{}}}],["role.service.ts",{"_index":1527,"title":{},"body":{"injectables/UserRoleService.html":{},"coverage.html":{}}}],["role.service.ts:12",{"_index":1530,"title":{},"body":{"injectables/UserRoleService.html":{}}}],["role.service.ts:16",{"_index":1532,"title":{},"body":{"injectables/UserRoleService.html":{}}}],["role/role.entity",{"_index":718,"title":{},"body":{"modules/ManagementModule.html":{}}}],["role/role.module",{"_index":1049,"title":{},"body":{"modules/SeederModule.html":{}}}],["role/role.service",{"_index":715,"title":{},"body":{"modules/ManagementModule.html":{},"injectables/Seeder.html":{}}}],["role/user",{"_index":893,"title":{},"body":{"classes/Role.html":{},"classes/UserAdministrator.html":{},"classes/UserClient.html":{},"injectables/UserClientService.html":{},"modules/UserModule.html":{},"classes/UserRole.html":{},"injectables/UserRoleService.html":{},"coverage.html":{}}}],["role_row",{"_index":1016,"title":{},"body":{"injectables/Seeder.html":{}}}],["roleemun",{"_index":911,"title":{},"body":{"injectables/RoleService.html":{}}}],["roleenum",{"_index":1545,"title":{},"body":{"injectables/UserService.html":{}}}],["roleenum.administrator",{"_index":1548,"title":{},"body":{"injectables/UserService.html":{}}}],["roleenum.client",{"_index":1546,"title":{},"body":{"injectables/UserService.html":{}}}],["rolerepository",{"_index":909,"title":{},"body":{"injectables/RoleService.html":{},"injectables/RolesSeederService.html":{}}}],["roles",{"_index":307,"title":{},"body":{"controllers/BankAccountController.html":{},"controllers/ExampleController.html":{},"guards/RolesGuard.html":{},"injectables/RolesSeederService.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["roles()@useguards(rolesguard)@get",{"_index":540,"title":{},"body":{"controllers/ExampleController.html":{}}}],["roles()@useguards(rolesguard)@get('protected",{"_index":537,"title":{},"body":{"controllers/ExampleController.html":{}}}],["roles()@useguards(rolesguard)@post",{"_index":298,"title":{},"body":{"controllers/BankAccountController.html":{}}}],["roles(role.administrator",{"_index":569,"title":{},"body":{"controllers/ExampleController.html":{}}}],["roles(role.administrator)@useguards(rolesguard)@get('protected/admin",{"_index":531,"title":{},"body":{"controllers/ExampleController.html":{}}}],["roles(role.client",{"_index":565,"title":{},"body":{"controllers/ExampleController.html":{}}}],["roles(role.client)@useguards(rolesguard)@get('protected/client",{"_index":534,"title":{},"body":{"controllers/ExampleController.html":{}}}],["roles.length",{"_index":927,"title":{},"body":{"guards/RolesGuard.html":{}}}],["roles.map(role",{"_index":939,"title":{},"body":{"injectables/RolesSeederService.html":{}}}],["roles[0",{"_index":929,"title":{},"body":{"guards/RolesGuard.html":{}}}],["roles_rows",{"_index":987,"title":{},"body":{"injectables/Seeder.html":{}}}],["roleseedermodule",{"_index":896,"title":{"modules/RoleSeederModule.html":{}},"body":{"modules/RoleSeederModule.html":{},"modules/SeederModule.html":{},"modules.html":{},"overview.html":{}}}],["roleseederservice",{"_index":962,"title":{},"body":{"injectables/Seeder.html":{}}}],["roleservice",{"_index":703,"title":{"injectables/RoleService.html":{}},"body":{"modules/ManagementModule.html":{},"injectables/RoleService.html":{},"injectables/UserRoleService.html":{},"coverage.html":{},"overview.html":{}}}],["rolesguard",{"_index":310,"title":{"guards/RolesGuard.html":{}},"body":{"controllers/BankAccountController.html":{},"controllers/ExampleController.html":{},"guards/RolesGuard.html":{},"coverage.html":{}}}],["rolesseederservice",{"_index":900,"title":{"injectables/RolesSeederService.html":{}},"body":{"modules/RoleSeederModule.html":{},"injectables/RolesSeederService.html":{},"injectables/Seeder.html":{},"coverage.html":{},"overview.html":{}}}],["router",{"_index":557,"title":{},"body":{"controllers/ExampleController.html":{}}}],["routing",{"_index":258,"title":{},"body":{"classes/Bank.html":{},"injectables/BankAccountService.html":{}}}],["routingnumber",{"_index":243,"title":{"classes/RoutingNumber.html":{}},"body":{"classes/Bank.html":{},"classes/BankAccount.html":{},"injectables/BankAccountService.html":{},"classes/CreateBankAccountDTO.html":{},"classes/RoutingNumber.html":{},"coverage.html":{}}}],["routingnumber.idroutingnumber",{"_index":267,"title":{},"body":{"classes/Bank.html":{}}}],["routingnumber.tostring",{"_index":386,"title":{},"body":{"injectables/BankAccountService.html":{}}}],["run",{"_index":1731,"title":{},"body":{"index.html":{}}}],["rxjs",{"_index":873,"title":{},"body":{"interfaces/Response.html":{},"injectables/TransformSignUpInterceptor.html":{},"dependencies.html":{}}}],["s",{"_index":318,"title":{},"body":{"controllers/BankAccountController.html":{},"injectables/BankAccountService.html":{},"controllers/ExampleController.html":{}}}],["salt",{"_index":184,"title":{},"body":{"injectables/AuthService.html":{},"classes/CreateUserDTO.html":{},"interfaces/Response.html":{},"injectables/TransformSignUpInterceptor.html":{},"classes/UserAdministrator.html":{},"classes/UserClient.html":{},"injectables/UserService.html":{}}}],["save",{"_index":440,"title":{},"body":{"injectables/ClientBankAccountService.html":{}}}],["save(statebankaccount",{"_index":1101,"title":{},"body":{"injectables/StateBankAccountService.html":{}}}],["save(statetransaction",{"_index":1143,"title":{},"body":{"injectables/StateTransactionService.html":{}}}],["save(transactioninterest",{"_index":1288,"title":{},"body":{"injectables/TransactionInterestService.html":{}}}],["scalable",{"_index":1720,"title":{},"body":{"index.html":{}}}],["scale",{"_index":738,"title":{},"body":{"classes/PlatformInterest.html":{},"classes/PointsConversion.html":{},"classes/Promotion.html":{},"classes/Transaction.html":{}}}],["secondlastname",{"_index":498,"title":{},"body":{"classes/CreateUserDTO.html":{},"injectables/UserClientService.html":{},"classes/UserDetails.html":{}}}],["secret",{"_index":155,"title":{},"body":{"modules/AuthModule.html":{}}}],["secretorkey",{"_index":593,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["seed",{"_index":959,"title":{},"body":{"injectables/Seeder.html":{},"dependencies.html":{}}}],["seeder",{"_index":956,"title":{"injectables/Seeder.html":{}},"body":{"injectables/Seeder.html":{},"modules/SeederModule.html":{},"coverage.html":{},"overview.html":{}}}],["seedermodule",{"_index":1040,"title":{"modules/SeederModule.html":{}},"body":{"modules/SeederModule.html":{},"modules.html":{},"overview.html":{}}}],["seeding",{"_index":1666,"title":{},"body":{"dependencies.html":{}}}],["select",{"_index":1504,"title":{},"body":{"injectables/UserDetailsService.html":{}}}],["select('admin",{"_index":1378,"title":{},"body":{"injectables/UserAdministratorService.html":{}}}],["select('client",{"_index":1443,"title":{},"body":{"injectables/UserClientService.html":{}}}],["sendemail",{"_index":668,"title":{},"body":{"injectables/MailsService.html":{}}}],["sendemail(email",{"_index":674,"title":{},"body":{"injectables/MailsService.html":{}}}],["sendgrid",{"_index":681,"title":{},"body":{"injectables/MailsService.html":{},"dependencies.html":{}}}],["sendgrid.config",{"_index":660,"title":{},"body":{"modules/MailsModule.html":{}}}],["sendgrid/mail",{"_index":1640,"title":{},"body":{"dependencies.html":{}}}],["sendgrid_config",{"_index":662,"title":{},"body":{"modules/MailsModule.html":{}}}],["sendgridclient",{"_index":673,"title":{},"body":{"injectables/MailsService.html":{}}}],["sendgridconfig",{"_index":659,"title":{},"body":{"modules/MailsModule.html":{},"injectables/MailsService.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["sendgridmodule.forrootasync",{"_index":1901,"title":{},"body":{"miscellaneous/variables.html":{}}}],["sendgridservice",{"_index":671,"title":{},"body":{"injectables/MailsService.html":{}}}],["sending",{"_index":695,"title":{},"body":{"injectables/MailsService.html":{}}}],["sent",{"_index":691,"title":{},"body":{"injectables/MailsService.html":{}}}],["server",{"_index":1721,"title":{},"body":{"index.html":{}}}],["services",{"_index":152,"title":{},"body":{"modules/AuthModule.html":{},"modules/BankAccountModule.html":{},"modules/LanguageModule.html":{},"modules/ManagementModule.html":{},"modules/TransactionModule.html":{},"injectables/UserClientService.html":{},"modules/UserModule.html":{}}}],["setmetadata('roles",{"_index":1900,"title":{},"body":{"miscellaneous/variables.html":{}}}],["side",{"_index":1722,"title":{},"body":{"index.html":{}}}],["sign",{"_index":113,"title":{},"body":{"controllers/AuthController.html":{},"injectables/AuthService.html":{},"interfaces/Response.html":{},"injectables/TransformSignUpInterceptor.html":{},"coverage.html":{}}}],["signoptions",{"_index":157,"title":{},"body":{"modules/AuthModule.html":{}}}],["signupclient",{"_index":83,"title":{},"body":{"controllers/AuthController.html":{}}}],["signupclient(@body(validationpipe",{"_index":122,"title":{},"body":{"controllers/AuthController.html":{}}}],["signupclient(user",{"_index":96,"title":{},"body":{"controllers/AuthController.html":{}}}],["silly",{"_index":1621,"title":{},"body":{"interfaces/createOptionsParams.html":{}}}],["solo",{"_index":1886,"title":{},"body":{"miscellaneous/variables.html":{}}}],["source",{"_index":26,"title":{},"body":{"modules/AppModule.html":{},"controllers/AuthController.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"classes/Bank.html":{},"classes/BankAccount.html":{},"controllers/BankAccountController.html":{},"modules/BankAccountModule.html":{},"injectables/BankAccountService.html":{},"modules/BankSeederModule.html":{},"injectables/BankSeederService.html":{},"classes/ClientBankAccount.html":{},"injectables/ClientBankAccountService.html":{},"classes/Country.html":{},"modules/CountrySeederModule.html":{},"injectables/CountrySeederService.html":{},"classes/CreateBankAccountDTO.html":{},"classes/CreateUserDTO.html":{},"modules/DatabaseModule.html":{},"controllers/ExampleController.html":{},"modules/ExampleModule.html":{},"injectables/JwtStrategy.html":{},"classes/Language.html":{},"controllers/LanguageController.html":{},"modules/LanguageModule.html":{},"modules/LanguageSeederModule.html":{},"injectables/LanguageSeederService.html":{},"injectables/LanguageService.html":{},"modules/MailsModule.html":{},"injectables/MailsService.html":{},"modules/ManagementModule.html":{},"classes/PlatformInterest.html":{},"modules/PlatformInterestSeederModule.html":{},"injectables/PlatformInterestSeederService.html":{},"injectables/PlatformInterestService.html":{},"injectables/PoeditorService.html":{},"classes/PointsConversion.html":{},"modules/PointsConversionSeederModule.html":{},"injectables/PointsConversionSeederService.html":{},"injectables/PointsConversionService.html":{},"classes/Promotion.html":{},"interfaces/Response.html":{},"classes/Role.html":{},"modules/RoleSeederModule.html":{},"injectables/RoleService.html":{},"guards/RolesGuard.html":{},"injectables/RolesSeederService.html":{},"classes/RoutingNumber.html":{},"injectables/Seeder.html":{},"modules/SeederModule.html":{},"classes/State.html":{},"classes/StateBankAccount.html":{},"injectables/StateBankAccountService.html":{},"injectables/StateSeederService.html":{},"injectables/StateService.html":{},"classes/StateTransaction.html":{},"injectables/StateTransactionService.html":{},"classes/StateUser.html":{},"injectables/StateUserService.html":{},"modules/StatesSeederModule.html":{},"classes/Suscription.html":{},"modules/SuscriptionModule.html":{},"modules/SuscriptionSeederModule.html":{},"injectables/SuscriptionSeederService.html":{},"classes/ThirdPartyInterest.html":{},"modules/ThirdPartyInterestSeederModule.html":{},"injectables/ThirdPartyInterestSeederService.html":{},"injectables/ThirdPartyInterestService.html":{},"classes/Transaction.html":{},"classes/TransactionInterest.html":{},"injectables/TransactionInterestService.html":{},"modules/TransactionModule.html":{},"injectables/TransactionService.html":{},"injectables/TransformSignUpInterceptor.html":{},"classes/UserAdministrator.html":{},"injectables/UserAdministratorService.html":{},"classes/UserClient.html":{},"injectables/UserClientService.html":{},"controllers/UserController.html":{},"classes/UserDetails.html":{},"injectables/UserDetailsService.html":{},"modules/UserModule.html":{},"classes/UserRole.html":{},"injectables/UserRoleService.html":{},"injectables/UserService.html":{},"classes/UserSuscription.html":{},"interfaces/createOptionsParams.html":{},"index.html":{}}}],["spend",{"_index":1920,"title":{},"body":{"miscellaneous/variables.html":{}}}],["sponsors",{"_index":1750,"title":{},"body":{"index.html":{}}}],["src/.../bank.data.ts",{"_index":1780,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../country.data.ts",{"_index":1782,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../database.service.ts",{"_index":1783,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../format.ts",{"_index":1781,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../get",{"_index":1785,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../http",{"_index":1672,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["src/.../language.data.ts",{"_index":1786,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../mails.enum.ts",{"_index":1674,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["src/.../main.ts",{"_index":1709,"title":{},"body":{"miscellaneous/functions.html":{}}}],["src/.../platform",{"_index":1675,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["src/.../platform_interest.data.ts",{"_index":1787,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../points_conversion.data.ts",{"_index":1788,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../role.data.ts",{"_index":1790,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../role.enum.ts",{"_index":1677,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["src/.../roles.decorator.ts",{"_index":1789,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../sendgrid.config.ts",{"_index":1791,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../state.data.ts",{"_index":1792,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../state.enum.ts",{"_index":1678,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["src/.../suscription.data.ts",{"_index":1793,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../third",{"_index":1680,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["src/.../third_party_interest.data.ts",{"_index":1794,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../transaction.enum.ts",{"_index":1681,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["src/.../typeorm.config.ts",{"_index":1784,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../winston",{"_index":1710,"title":{},"body":{"miscellaneous/functions.html":{}}}],["src/app.module.ts",{"_index":28,"title":{},"body":{"modules/AppModule.html":{}}}],["src/database/database.module.ts",{"_index":520,"title":{},"body":{"modules/DatabaseModule.html":{}}}],["src/database/database.service.ts",{"_index":1567,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/database/seeders/bank/bank.data.ts",{"_index":1570,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/database/seeders/bank/bank.module.ts",{"_index":394,"title":{},"body":{"modules/BankSeederModule.html":{}}}],["src/database/seeders/bank/bank.service.ts",{"_index":398,"title":{},"body":{"injectables/BankSeederService.html":{},"coverage.html":{}}}],["src/database/seeders/bank/bank.service.ts:15",{"_index":403,"title":{},"body":{"injectables/BankSeederService.html":{}}}],["src/database/seeders/bank/bank.service.ts:9",{"_index":401,"title":{},"body":{"injectables/BankSeederService.html":{}}}],["src/database/seeders/country/country.data.ts",{"_index":1572,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/database/seeders/country/country.module.ts",{"_index":459,"title":{},"body":{"modules/CountrySeederModule.html":{}}}],["src/database/seeders/country/country.service.ts",{"_index":463,"title":{},"body":{"injectables/CountrySeederService.html":{},"coverage.html":{}}}],["src/database/seeders/country/country.service.ts:14",{"_index":468,"title":{},"body":{"injectables/CountrySeederService.html":{}}}],["src/database/seeders/country/country.service.ts:8",{"_index":466,"title":{},"body":{"injectables/CountrySeederService.html":{}}}],["src/database/seeders/language/language.data.ts",{"_index":1573,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/database/seeders/language/language.module.ts",{"_index":635,"title":{},"body":{"modules/LanguageSeederModule.html":{}}}],["src/database/seeders/language/language.service.ts",{"_index":638,"title":{},"body":{"injectables/LanguageSeederService.html":{},"coverage.html":{}}}],["src/database/seeders/language/language.service.ts:15",{"_index":643,"title":{},"body":{"injectables/LanguageSeederService.html":{}}}],["src/database/seeders/language/language.service.ts:9",{"_index":641,"title":{},"body":{"injectables/LanguageSeederService.html":{}}}],["src/database/seeders/platform_interest/platform_interest.data.ts",{"_index":1574,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/database/seeders/platform_interest/platform_interest.module.ts",{"_index":765,"title":{},"body":{"modules/PlatformInterestSeederModule.html":{}}}],["src/database/seeders/platform_interest/platform_interest.service.ts",{"_index":769,"title":{},"body":{"injectables/PlatformInterestSeederService.html":{},"coverage.html":{}}}],["src/database/seeders/platform_interest/platform_interest.service.ts:15",{"_index":774,"title":{},"body":{"injectables/PlatformInterestSeederService.html":{}}}],["src/database/seeders/platform_interest/platform_interest.service.ts:9",{"_index":772,"title":{},"body":{"injectables/PlatformInterestSeederService.html":{}}}],["src/database/seeders/points_conversion/points_conversion.data.ts",{"_index":1575,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/database/seeders/points_conversion/points_conversion.module.ts",{"_index":827,"title":{},"body":{"modules/PointsConversionSeederModule.html":{}}}],["src/database/seeders/points_conversion/points_conversion.service.ts",{"_index":831,"title":{},"body":{"injectables/PointsConversionSeederService.html":{},"coverage.html":{}}}],["src/database/seeders/points_conversion/points_conversion.service.ts:15",{"_index":836,"title":{},"body":{"injectables/PointsConversionSeederService.html":{}}}],["src/database/seeders/points_conversion/points_conversion.service.ts:9",{"_index":834,"title":{},"body":{"injectables/PointsConversionSeederService.html":{}}}],["src/database/seeders/role/role.data.ts",{"_index":1576,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/database/seeders/role/role.module.ts",{"_index":901,"title":{},"body":{"modules/RoleSeederModule.html":{}}}],["src/database/seeders/role/role.service.ts",{"_index":934,"title":{},"body":{"injectables/RolesSeederService.html":{},"coverage.html":{}}}],["src/database/seeders/role/role.service.ts:15",{"_index":937,"title":{},"body":{"injectables/RolesSeederService.html":{}}}],["src/database/seeders/role/role.service.ts:9",{"_index":936,"title":{},"body":{"injectables/RolesSeederService.html":{}}}],["src/database/seeders/seeder.module.ts",{"_index":1047,"title":{},"body":{"modules/SeederModule.html":{}}}],["src/database/seeders/seeder.ts",{"_index":957,"title":{},"body":{"injectables/Seeder.html":{},"coverage.html":{}}}],["src/database/seeders/seeder.ts:124",{"_index":974,"title":{},"body":{"injectables/Seeder.html":{}}}],["src/database/seeders/seeder.ts:137",{"_index":972,"title":{},"body":{"injectables/Seeder.html":{}}}],["src/database/seeders/seeder.ts:14",{"_index":965,"title":{},"body":{"injectables/Seeder.html":{}}}],["src/database/seeders/seeder.ts:150",{"_index":968,"title":{},"body":{"injectables/Seeder.html":{}}}],["src/database/seeders/seeder.ts:163",{"_index":969,"title":{},"body":{"injectables/Seeder.html":{}}}],["src/database/seeders/seeder.ts:176",{"_index":975,"title":{},"body":{"injectables/Seeder.html":{}}}],["src/database/seeders/seeder.ts:189",{"_index":976,"title":{},"body":{"injectables/Seeder.html":{}}}],["src/database/seeders/seeder.ts:204",{"_index":970,"title":{},"body":{"injectables/Seeder.html":{}}}],["src/database/seeders/seeder.ts:219",{"_index":971,"title":{},"body":{"injectables/Seeder.html":{}}}],["src/database/seeders/seeder.ts:234",{"_index":966,"title":{},"body":{"injectables/Seeder.html":{}}}],["src/database/seeders/seeder.ts:27",{"_index":967,"title":{},"body":{"injectables/Seeder.html":{}}}],["src/database/seeders/seeder.ts:31",{"_index":973,"title":{},"body":{"injectables/Seeder.html":{}}}],["src/database/seeders/state/state.data.ts",{"_index":1578,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/database/seeders/state/state.module.ts",{"_index":1175,"title":{},"body":{"modules/StatesSeederModule.html":{}}}],["src/database/seeders/state/state.service.ts",{"_index":1102,"title":{},"body":{"injectables/StateSeederService.html":{},"coverage.html":{}}}],["src/database/seeders/state/state.service.ts:15",{"_index":1107,"title":{},"body":{"injectables/StateSeederService.html":{}}}],["src/database/seeders/state/state.service.ts:9",{"_index":1105,"title":{},"body":{"injectables/StateSeederService.html":{}}}],["src/database/seeders/suscription/suscription.data.ts",{"_index":1579,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/database/seeders/suscription/suscription.module.ts",{"_index":1199,"title":{},"body":{"modules/SuscriptionSeederModule.html":{}}}],["src/database/seeders/suscription/suscription.service.ts",{"_index":1203,"title":{},"body":{"injectables/SuscriptionSeederService.html":{},"coverage.html":{}}}],["src/database/seeders/suscription/suscription.service.ts:15",{"_index":1208,"title":{},"body":{"injectables/SuscriptionSeederService.html":{}}}],["src/database/seeders/suscription/suscription.service.ts:9",{"_index":1206,"title":{},"body":{"injectables/SuscriptionSeederService.html":{}}}],["src/database/seeders/third_party_interest/third_party_interest.data.ts",{"_index":1580,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/database/seeders/third_party_interest/third_party_interest.module.ts",{"_index":1223,"title":{},"body":{"modules/ThirdPartyInterestSeederModule.html":{}}}],["src/database/seeders/third_party_interest/third_party_interest.service.ts",{"_index":1227,"title":{},"body":{"injectables/ThirdPartyInterestSeederService.html":{},"coverage.html":{}}}],["src/database/seeders/third_party_interest/third_party_interest.service.ts:17",{"_index":1232,"title":{},"body":{"injectables/ThirdPartyInterestSeederService.html":{}}}],["src/database/seeders/third_party_interest/third_party_interest.service.ts:9",{"_index":1230,"title":{},"body":{"injectables/ThirdPartyInterestSeederService.html":{}}}],["src/database/seeders/typeorm.config.ts",{"_index":1581,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/logger/http",{"_index":1682,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["src/logger/winston/format.ts",{"_index":1583,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/logger/winston/winston",{"_index":1587,"title":{},"body":{"coverage.html":{},"interfaces/createOptionsParams.html":{},"miscellaneous/functions.html":{}}}],["src/main.ts",{"_index":1593,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["src/modules/auth/auth.controller.ts",{"_index":76,"title":{},"body":{"controllers/AuthController.html":{},"coverage.html":{}}}],["src/modules/auth/auth.controller.ts:26",{"_index":99,"title":{},"body":{"controllers/AuthController.html":{}}}],["src/modules/auth/auth.controller.ts:34",{"_index":89,"title":{},"body":{"controllers/AuthController.html":{}}}],["src/modules/auth/auth.module.ts",{"_index":142,"title":{},"body":{"modules/AuthModule.html":{}}}],["src/modules/auth/auth.service.ts",{"_index":162,"title":{},"body":{"injectables/AuthService.html":{},"coverage.html":{}}}],["src/modules/auth/auth.service.ts:17",{"_index":173,"title":{},"body":{"injectables/AuthService.html":{}}}],["src/modules/auth/auth.service.ts:27",{"_index":179,"title":{},"body":{"injectables/AuthService.html":{}}}],["src/modules/auth/auth.service.ts:45",{"_index":188,"title":{},"body":{"injectables/AuthService.html":{}}}],["src/modules/auth/auth.service.ts:82",{"_index":177,"title":{},"body":{"injectables/AuthService.html":{}}}],["src/modules/auth/auth.service.ts:87",{"_index":182,"title":{},"body":{"injectables/AuthService.html":{}}}],["src/modules/auth/auth.service.ts:98",{"_index":185,"title":{},"body":{"injectables/AuthService.html":{}}}],["src/modules/auth/decorators/get",{"_index":1595,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/modules/auth/decorators/roles.decorator.ts",{"_index":1597,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/modules/auth/guards/roles.guard.ts",{"_index":918,"title":{},"body":{"guards/RolesGuard.html":{},"coverage.html":{}}}],["src/modules/auth/guards/roles.guard.ts:14",{"_index":921,"title":{},"body":{"guards/RolesGuard.html":{}}}],["src/modules/auth/guards/roles.guard.ts:20",{"_index":923,"title":{},"body":{"guards/RolesGuard.html":{}}}],["src/modules/auth/interceptors/transform",{"_index":866,"title":{},"body":{"interfaces/Response.html":{},"injectables/TransformSignUpInterceptor.html":{},"coverage.html":{}}}],["src/modules/auth/jwt.strategy.ts",{"_index":579,"title":{},"body":{"injectables/JwtStrategy.html":{},"coverage.html":{}}}],["src/modules/auth/jwt.strategy.ts:12",{"_index":580,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["src/modules/auth/jwt.strategy.ts:25",{"_index":582,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["src/modules/bank",{"_index":236,"title":{},"body":{"classes/Bank.html":{},"classes/BankAccount.html":{},"controllers/BankAccountController.html":{},"modules/BankAccountModule.html":{},"injectables/BankAccountService.html":{},"injectables/BankSeederService.html":{},"classes/ClientBankAccount.html":{},"injectables/ClientBankAccountService.html":{},"classes/CreateBankAccountDTO.html":{},"classes/RoutingNumber.html":{},"classes/StateBankAccount.html":{},"injectables/StateBankAccountService.html":{},"coverage.html":{}}}],["src/modules/example/example.controller.ts",{"_index":524,"title":{},"body":{"controllers/ExampleController.html":{},"coverage.html":{}}}],["src/modules/example/example.controller.ts:22",{"_index":541,"title":{},"body":{"controllers/ExampleController.html":{}}}],["src/modules/example/example.controller.ts:52",{"_index":538,"title":{},"body":{"controllers/ExampleController.html":{}}}],["src/modules/example/example.controller.ts:61",{"_index":535,"title":{},"body":{"controllers/ExampleController.html":{}}}],["src/modules/example/example.controller.ts:69",{"_index":532,"title":{},"body":{"controllers/ExampleController.html":{}}}],["src/modules/example/example.module.ts",{"_index":575,"title":{},"body":{"modules/ExampleModule.html":{}}}],["src/modules/language/language.controller.ts",{"_index":610,"title":{},"body":{"controllers/LanguageController.html":{},"coverage.html":{}}}],["src/modules/language/language.controller.ts:9",{"_index":614,"title":{},"body":{"controllers/LanguageController.html":{}}}],["src/modules/language/language.module.ts",{"_index":626,"title":{},"body":{"modules/LanguageModule.html":{}}}],["src/modules/language/language.service.ts",{"_index":649,"title":{},"body":{"injectables/LanguageService.html":{},"coverage.html":{}}}],["src/modules/language/language.service.ts:5",{"_index":651,"title":{},"body":{"injectables/LanguageService.html":{}}}],["src/modules/language/language.service.ts:8",{"_index":652,"title":{},"body":{"injectables/LanguageService.html":{}}}],["src/modules/language/poeditor/poeditor.service.ts",{"_index":788,"title":{},"body":{"injectables/PoeditorService.html":{},"coverage.html":{}}}],["src/modules/language/poeditor/poeditor.service.ts:11",{"_index":792,"title":{},"body":{"injectables/PoeditorService.html":{}}}],["src/modules/language/poeditor/poeditor.service.ts:6",{"_index":791,"title":{},"body":{"injectables/PoeditorService.html":{}}}],["src/modules/mails/mails.enum.ts",{"_index":1687,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["src/modules/mails/mails.module.ts",{"_index":657,"title":{},"body":{"modules/MailsModule.html":{}}}],["src/modules/mails/mails.service.ts",{"_index":667,"title":{},"body":{"injectables/MailsService.html":{},"coverage.html":{}}}],["src/modules/mails/mails.service.ts:16",{"_index":678,"title":{},"body":{"injectables/MailsService.html":{}}}],["src/modules/mails/mails.service.ts:9",{"_index":672,"title":{},"body":{"injectables/MailsService.html":{}}}],["src/modules/mails/sendgrid.config.ts",{"_index":1602,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/modules/management/country/country.entity.ts",{"_index":445,"title":{},"body":{"classes/Country.html":{},"coverage.html":{}}}],["src/modules/management/country/country.entity.ts:14",{"_index":448,"title":{},"body":{"classes/Country.html":{}}}],["src/modules/management/country/country.entity.ts:17",{"_index":450,"title":{},"body":{"classes/Country.html":{}}}],["src/modules/management/country/country.entity.ts:24",{"_index":447,"title":{},"body":{"classes/Country.html":{}}}],["src/modules/management/country/country.entity.ts:31",{"_index":451,"title":{},"body":{"classes/Country.html":{}}}],["src/modules/management/management.module.ts",{"_index":705,"title":{},"body":{"modules/ManagementModule.html":{}}}],["src/modules/management/platform",{"_index":725,"title":{},"body":{"classes/PlatformInterest.html":{},"injectables/PlatformInterestService.html":{},"injectables/TransactionInterestService.html":{},"coverage.html":{},"miscellaneous/enumerations.html":{}}}],["src/modules/management/points",{"_index":812,"title":{},"body":{"classes/PointsConversion.html":{},"injectables/PointsConversionService.html":{},"coverage.html":{}}}],["src/modules/management/promotion/promotion.entity.ts",{"_index":848,"title":{},"body":{"classes/Promotion.html":{},"coverage.html":{}}}],["src/modules/management/promotion/promotion.entity.ts:13",{"_index":855,"title":{},"body":{"classes/Promotion.html":{}}}],["src/modules/management/promotion/promotion.entity.ts:16",{"_index":858,"title":{},"body":{"classes/Promotion.html":{}}}],["src/modules/management/promotion/promotion.entity.ts:19",{"_index":853,"title":{},"body":{"classes/Promotion.html":{}}}],["src/modules/management/promotion/promotion.entity.ts:22",{"_index":857,"title":{},"body":{"classes/Promotion.html":{}}}],["src/modules/management/promotion/promotion.entity.ts:25",{"_index":861,"title":{},"body":{"classes/Promotion.html":{}}}],["src/modules/management/promotion/promotion.entity.ts:28",{"_index":852,"title":{},"body":{"classes/Promotion.html":{}}}],["src/modules/management/promotion/promotion.entity.ts:31",{"_index":860,"title":{},"body":{"classes/Promotion.html":{}}}],["src/modules/management/promotion/promotion.entity.ts:34",{"_index":856,"title":{},"body":{"classes/Promotion.html":{}}}],["src/modules/management/promotion/promotion.entity.ts:37",{"_index":854,"title":{},"body":{"classes/Promotion.html":{}}}],["src/modules/management/promotion/promotion.entity.ts:44",{"_index":862,"title":{},"body":{"classes/Promotion.html":{}}}],["src/modules/management/role/role.entity.ts",{"_index":887,"title":{},"body":{"classes/Role.html":{},"coverage.html":{}}}],["src/modules/management/role/role.entity.ts:13",{"_index":890,"title":{},"body":{"classes/Role.html":{}}}],["src/modules/management/role/role.entity.ts:16",{"_index":891,"title":{},"body":{"classes/Role.html":{}}}],["src/modules/management/role/role.entity.ts:23",{"_index":892,"title":{},"body":{"classes/Role.html":{}}}],["src/modules/management/role/role.enum",{"_index":191,"title":{},"body":{"injectables/AuthService.html":{},"injectables/UserRoleService.html":{},"injectables/UserService.html":{}}}],["src/modules/management/role/role.enum.ts",{"_index":1693,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["src/modules/management/role/role.service.ts",{"_index":905,"title":{},"body":{"injectables/RoleService.html":{},"coverage.html":{}}}],["src/modules/management/role/role.service.ts:13",{"_index":912,"title":{},"body":{"injectables/RoleService.html":{}}}],["src/modules/management/role/role.service.ts:8",{"_index":908,"title":{},"body":{"injectables/RoleService.html":{}}}],["src/modules/management/state/state.entity.ts",{"_index":1060,"title":{},"body":{"classes/State.html":{},"coverage.html":{}}}],["src/modules/management/state/state.entity.ts:15",{"_index":1065,"title":{},"body":{"classes/State.html":{}}}],["src/modules/management/state/state.entity.ts:18",{"_index":1066,"title":{},"body":{"classes/State.html":{}}}],["src/modules/management/state/state.entity.ts:21",{"_index":1064,"title":{},"body":{"classes/State.html":{}}}],["src/modules/management/state/state.entity.ts:28",{"_index":1069,"title":{},"body":{"classes/State.html":{}}}],["src/modules/management/state/state.entity.ts:35",{"_index":1067,"title":{},"body":{"classes/State.html":{}}}],["src/modules/management/state/state.entity.ts:42",{"_index":1068,"title":{},"body":{"classes/State.html":{}}}],["src/modules/management/state/state.enum",{"_index":434,"title":{},"body":{"injectables/ClientBankAccountService.html":{},"injectables/UserAdministratorService.html":{}}}],["src/modules/management/state/state.enum.ts",{"_index":1694,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["src/modules/management/state/state.service.ts",{"_index":1114,"title":{},"body":{"injectables/StateService.html":{},"coverage.html":{}}}],["src/modules/management/state/state.service.ts:10",{"_index":1116,"title":{},"body":{"injectables/StateService.html":{}}}],["src/modules/management/state/state.service.ts:16",{"_index":1118,"title":{},"body":{"injectables/StateService.html":{}}}],["src/modules/management/third",{"_index":1214,"title":{},"body":{"classes/ThirdPartyInterest.html":{},"injectables/ThirdPartyInterestService.html":{},"coverage.html":{},"miscellaneous/enumerations.html":{}}}],["src/modules/suscription/suscription.module.ts",{"_index":1195,"title":{},"body":{"modules/SuscriptionModule.html":{}}}],["src/modules/suscription/suscription/suscription.entity.ts",{"_index":1177,"title":{},"body":{"classes/Suscription.html":{},"coverage.html":{}}}],["src/modules/suscription/suscription/suscription.entity.ts:14",{"_index":1184,"title":{},"body":{"classes/Suscription.html":{}}}],["src/modules/suscription/suscription/suscription.entity.ts:17",{"_index":1185,"title":{},"body":{"classes/Suscription.html":{}}}],["src/modules/suscription/suscription/suscription.entity.ts:20",{"_index":1182,"title":{},"body":{"classes/Suscription.html":{}}}],["src/modules/suscription/suscription/suscription.entity.ts:23",{"_index":1187,"title":{},"body":{"classes/Suscription.html":{}}}],["src/modules/suscription/suscription/suscription.entity.ts:26",{"_index":1183,"title":{},"body":{"classes/Suscription.html":{}}}],["src/modules/suscription/suscription/suscription.entity.ts:33",{"_index":1188,"title":{},"body":{"classes/Suscription.html":{}}}],["src/modules/suscription/suscription/suscription.entity.ts:40",{"_index":1186,"title":{},"body":{"classes/Suscription.html":{}}}],["src/modules/transaction/state",{"_index":1122,"title":{},"body":{"classes/StateTransaction.html":{},"injectables/StateTransactionService.html":{},"coverage.html":{}}}],["src/modules/transaction/transaction",{"_index":1263,"title":{},"body":{"classes/TransactionInterest.html":{},"injectables/TransactionInterestService.html":{},"coverage.html":{}}}],["src/modules/transaction/transaction.module.ts",{"_index":1293,"title":{},"body":{"modules/TransactionModule.html":{}}}],["src/modules/transaction/transaction.service.ts",{"_index":1296,"title":{},"body":{"injectables/TransactionService.html":{},"coverage.html":{}}}],["src/modules/transaction/transaction.service.ts:101",{"_index":1308,"title":{},"body":{"injectables/TransactionService.html":{}}}],["src/modules/transaction/transaction.service.ts:22",{"_index":1302,"title":{},"body":{"injectables/TransactionService.html":{}}}],["src/modules/transaction/transaction.service.ts:36",{"_index":1314,"title":{},"body":{"injectables/TransactionService.html":{}}}],["src/modules/transaction/transaction.service.ts:60",{"_index":1306,"title":{},"body":{"injectables/TransactionService.html":{}}}],["src/modules/transaction/transaction.service.ts:89",{"_index":1311,"title":{},"body":{"injectables/TransactionService.html":{}}}],["src/modules/transaction/transaction/transaction.entity.ts",{"_index":1243,"title":{},"body":{"classes/Transaction.html":{},"coverage.html":{}}}],["src/modules/transaction/transaction/transaction.entity.ts:21",{"_index":1248,"title":{},"body":{"classes/Transaction.html":{}}}],["src/modules/transaction/transaction/transaction.entity.ts:24",{"_index":1249,"title":{},"body":{"classes/Transaction.html":{}}}],["src/modules/transaction/transaction/transaction.entity.ts:27",{"_index":1252,"title":{},"body":{"classes/Transaction.html":{}}}],["src/modules/transaction/transaction/transaction.entity.ts:30",{"_index":1254,"title":{},"body":{"classes/Transaction.html":{}}}],["src/modules/transaction/transaction/transaction.entity.ts:33",{"_index":1258,"title":{},"body":{"classes/Transaction.html":{}}}],["src/modules/transaction/transaction/transaction.entity.ts:41",{"_index":1255,"title":{},"body":{"classes/Transaction.html":{}}}],["src/modules/transaction/transaction/transaction.entity.ts:48",{"_index":1259,"title":{},"body":{"classes/Transaction.html":{}}}],["src/modules/transaction/transaction/transaction.entity.ts:55",{"_index":1253,"title":{},"body":{"classes/Transaction.html":{}}}],["src/modules/transaction/transaction/transaction.entity.ts:62",{"_index":1256,"title":{},"body":{"classes/Transaction.html":{}}}],["src/modules/transaction/transaction/transaction.entity.ts:70",{"_index":1251,"title":{},"body":{"classes/Transaction.html":{}}}],["src/modules/transaction/transaction/transaction.entity.ts:78",{"_index":1247,"title":{},"body":{"classes/Transaction.html":{}}}],["src/modules/transaction/transaction/transaction.enum.ts",{"_index":1703,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["src/modules/user",{"_index":1190,"title":{},"body":{"classes/Suscription.html":{},"classes/UserSuscription.html":{},"coverage.html":{}}}],["src/modules/user/dto/create",{"_index":487,"title":{},"body":{"classes/CreateUserDTO.html":{},"coverage.html":{}}}],["src/modules/user/language/language.entity.ts",{"_index":604,"title":{},"body":{"classes/Language.html":{},"coverage.html":{}}}],["src/modules/user/language/language.entity.ts:13",{"_index":606,"title":{},"body":{"classes/Language.html":{}}}],["src/modules/user/language/language.entity.ts:16",{"_index":607,"title":{},"body":{"classes/Language.html":{}}}],["src/modules/user/language/language.entity.ts:23",{"_index":608,"title":{},"body":{"classes/Language.html":{}}}],["src/modules/user/state",{"_index":1144,"title":{},"body":{"classes/StateUser.html":{},"injectables/StateUserService.html":{},"coverage.html":{}}}],["src/modules/user/user",{"_index":1361,"title":{},"body":{"classes/UserAdministrator.html":{},"injectables/UserAdministratorService.html":{},"classes/UserClient.html":{},"injectables/UserClientService.html":{},"classes/UserDetails.html":{},"injectables/UserDetailsService.html":{},"classes/UserRole.html":{},"injectables/UserRoleService.html":{},"coverage.html":{}}}],["src/modules/user/user.controller.ts",{"_index":1450,"title":{},"body":{"controllers/UserController.html":{},"coverage.html":{}}}],["src/modules/user/user.controller.ts:26",{"_index":1453,"title":{},"body":{"controllers/UserController.html":{}}}],["src/modules/user/user.module.ts",{"_index":1515,"title":{},"body":{"modules/UserModule.html":{}}}],["src/modules/user/user.service.ts",{"_index":1538,"title":{},"body":{"injectables/UserService.html":{},"coverage.html":{}}}],["src/modules/user/user.service.ts:16",{"_index":1542,"title":{},"body":{"injectables/UserService.html":{}}}],["src/modules/user/user.service.ts:26",{"_index":1544,"title":{},"body":{"injectables/UserService.html":{}}}],["src/modules/user/user.service.ts:9",{"_index":1541,"title":{},"body":{"injectables/UserService.html":{}}}],["start",{"_index":1732,"title":{},"body":{"index.html":{}}}],["start:dev",{"_index":1735,"title":{},"body":{"index.html":{}}}],["start:prodtest",{"_index":1737,"title":{},"body":{"index.html":{}}}],["started",{"_index":1714,"title":{"index.html":{}},"body":{}}],["starter",{"_index":1727,"title":{},"body":{"index.html":{}}}],["starting",{"_index":127,"title":{},"body":{"controllers/AuthController.html":{}}}],["state",{"_index":335,"title":{"classes/State.html":{}},"body":{"modules/BankAccountModule.html":{},"classes/ClientBankAccount.html":{},"injectables/ClientBankAccountService.html":{},"modules/ManagementModule.html":{},"injectables/Seeder.html":{},"classes/State.html":{},"classes/StateBankAccount.html":{},"injectables/StateBankAccountService.html":{},"injectables/StateSeederService.html":{},"injectables/StateService.html":{},"classes/StateTransaction.html":{},"injectables/StateTransactionService.html":{},"classes/StateUser.html":{},"injectables/StateUserService.html":{},"modules/StatesSeederModule.html":{},"classes/Transaction.html":{},"modules/TransactionModule.html":{},"injectables/TransactionService.html":{},"injectables/UserAdministratorService.html":{},"classes/UserClient.html":{},"injectables/UserClientService.html":{},"modules/UserModule.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["state.\"idstate",{"_index":1386,"title":{},"body":{"injectables/UserAdministratorService.html":{},"injectables/UserClientService.html":{}}}],["state.data",{"_index":1109,"title":{},"body":{"injectables/StateSeederService.html":{}}}],["state.entity",{"_index":1119,"title":{},"body":{"injectables/StateService.html":{}}}],["state.enum",{"_index":1120,"title":{},"body":{"injectables/StateService.html":{}}}],["state.idstate",{"_index":1089,"title":{},"body":{"classes/StateBankAccount.html":{},"classes/StateTransaction.html":{},"classes/StateUser.html":{}}}],["state.service",{"_index":1176,"title":{},"body":{"modules/StatesSeederModule.html":{}}}],["state/state.entity",{"_index":717,"title":{},"body":{"modules/ManagementModule.html":{}}}],["state/state.module",{"_index":1048,"title":{},"body":{"modules/SeederModule.html":{}}}],["state/state.service",{"_index":716,"title":{},"body":{"modules/ManagementModule.html":{},"injectables/Seeder.html":{}}}],["state_rows",{"_index":988,"title":{},"body":{"injectables/Seeder.html":{}}}],["state_user",{"_index":1382,"title":{},"body":{"injectables/UserAdministratorService.html":{},"injectables/UserClientService.html":{}}}],["state_user.fk_state",{"_index":1387,"title":{},"body":{"injectables/UserAdministratorService.html":{},"injectables/UserClientService.html":{}}}],["state_user.fk_user_administrator",{"_index":1383,"title":{},"body":{"injectables/UserAdministratorService.html":{}}}],["state_user.fk_user_client",{"_index":1445,"title":{},"body":{"injectables/UserClientService.html":{}}}],["statebankaccount",{"_index":339,"title":{"classes/StateBankAccount.html":{}},"body":{"modules/BankAccountModule.html":{},"classes/ClientBankAccount.html":{},"classes/State.html":{},"classes/StateBankAccount.html":{},"injectables/StateBankAccountService.html":{},"coverage.html":{}}}],["statebankaccount.clientbankaccount",{"_index":1096,"title":{},"body":{"injectables/StateBankAccountService.html":{}}}],["statebankaccount.description",{"_index":1097,"title":{},"body":{"injectables/StateBankAccountService.html":{}}}],["statebankaccount.idstatebankaccount",{"_index":425,"title":{},"body":{"classes/ClientBankAccount.html":{},"classes/State.html":{}}}],["statebankaccount.state",{"_index":1098,"title":{},"body":{"injectables/StateBankAccountService.html":{}}}],["statebankaccountservice",{"_index":328,"title":{"injectables/StateBankAccountService.html":{}},"body":{"modules/BankAccountModule.html":{},"injectables/ClientBankAccountService.html":{},"injectables/StateBankAccountService.html":{},"coverage.html":{},"overview.html":{}}}],["statedescription",{"_index":433,"title":{},"body":{"injectables/ClientBankAccountService.html":{},"injectables/TransactionService.html":{},"miscellaneous/enumerations.html":{}}}],["statedescription.newly_created_account",{"_index":443,"title":{},"body":{"injectables/ClientBankAccountService.html":{}}}],["statements",{"_index":1566,"title":{},"body":{"coverage.html":{}}}],["statename",{"_index":432,"title":{},"body":{"injectables/ClientBankAccountService.html":{},"injectables/StateBankAccountService.html":{},"injectables/StateService.html":{},"injectables/StateTransactionService.html":{},"injectables/StateUserService.html":{},"injectables/TransactionService.html":{},"injectables/UserAdministratorService.html":{},"injectables/UserClientService.html":{},"miscellaneous/enumerations.html":{}}}],["statename.active",{"_index":1390,"title":{},"body":{"injectables/UserAdministratorService.html":{},"injectables/UserClientService.html":{}}}],["statename.verifying",{"_index":442,"title":{},"body":{"injectables/ClientBankAccountService.html":{},"injectables/TransactionService.html":{}}}],["staterepository",{"_index":1106,"title":{},"body":{"injectables/StateSeederService.html":{},"injectables/StateService.html":{}}}],["states",{"_index":1108,"title":{},"body":{"injectables/StateSeederService.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["states.map(state",{"_index":1112,"title":{},"body":{"injectables/StateSeederService.html":{}}}],["stateseederservice",{"_index":961,"title":{"injectables/StateSeederService.html":{}},"body":{"injectables/Seeder.html":{},"injectables/StateSeederService.html":{},"modules/StatesSeederModule.html":{},"coverage.html":{},"overview.html":{}}}],["stateservice",{"_index":329,"title":{"injectables/StateService.html":{}},"body":{"modules/BankAccountModule.html":{},"modules/ManagementModule.html":{},"injectables/StateBankAccountService.html":{},"injectables/StateService.html":{},"injectables/StateTransactionService.html":{},"injectables/StateUserService.html":{},"coverage.html":{},"overview.html":{}}}],["statesseedermodule",{"_index":1044,"title":{"modules/StatesSeederModule.html":{}},"body":{"modules/SeederModule.html":{},"modules/StatesSeederModule.html":{},"modules.html":{},"overview.html":{}}}],["statetransaction",{"_index":1062,"title":{"classes/StateTransaction.html":{}},"body":{"classes/State.html":{},"classes/StateTransaction.html":{},"injectables/StateTransactionService.html":{},"classes/Transaction.html":{},"coverage.html":{}}}],["statetransaction.description",{"_index":1140,"title":{},"body":{"injectables/StateTransactionService.html":{}}}],["statetransaction.idstatetransaction",{"_index":1075,"title":{},"body":{"classes/State.html":{},"classes/Transaction.html":{}}}],["statetransaction.state",{"_index":1141,"title":{},"body":{"injectables/StateTransactionService.html":{}}}],["statetransaction.transaction",{"_index":1139,"title":{},"body":{"injectables/StateTransactionService.html":{}}}],["statetransactionservice",{"_index":1133,"title":{"injectables/StateTransactionService.html":{}},"body":{"injectables/StateTransactionService.html":{},"modules/TransactionModule.html":{},"injectables/TransactionService.html":{},"coverage.html":{},"overview.html":{}}}],["statetype",{"_index":1679,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["stateuser",{"_index":1063,"title":{"classes/StateUser.html":{}},"body":{"classes/State.html":{},"classes/StateUser.html":{},"injectables/StateUserService.html":{},"classes/UserAdministrator.html":{},"injectables/UserAdministratorService.html":{},"classes/UserClient.html":{},"injectables/UserClientService.html":{},"modules/UserModule.html":{},"coverage.html":{}}}],["stateuser.idstateuser",{"_index":1074,"title":{},"body":{"classes/State.html":{},"classes/UserAdministrator.html":{},"classes/UserClient.html":{}}}],["stateuserservice",{"_index":1159,"title":{"injectables/StateUserService.html":{}},"body":{"injectables/StateUserService.html":{},"injectables/UserClientService.html":{},"modules/UserModule.html":{},"coverage.html":{},"overview.html":{}}}],["stay",{"_index":1759,"title":{},"body":{"index.html":{}}}],["strategy",{"_index":584,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["string",{"_index":175,"title":{},"body":{"injectables/AuthService.html":{},"classes/Bank.html":{},"classes/BankAccount.html":{},"classes/Country.html":{},"classes/CreateBankAccountDTO.html":{},"classes/CreateUserDTO.html":{},"classes/Language.html":{},"injectables/LanguageService.html":{},"classes/PlatformInterest.html":{},"injectables/PoeditorService.html":{},"classes/Promotion.html":{},"classes/Role.html":{},"classes/RoutingNumber.html":{},"classes/State.html":{},"classes/StateBankAccount.html":{},"classes/StateTransaction.html":{},"injectables/StateTransactionService.html":{},"classes/StateUser.html":{},"injectables/StateUserService.html":{},"classes/Suscription.html":{},"classes/ThirdPartyInterest.html":{},"classes/UserAdministrator.html":{},"injectables/UserAdministratorService.html":{},"classes/UserClient.html":{},"injectables/UserClientService.html":{},"classes/UserDetails.html":{},"injectables/UserDetailsService.html":{},"injectables/UserService.html":{},"classes/UserSuscription.html":{},"interfaces/createOptionsParams.html":{},"miscellaneous/variables.html":{}}}],["stripe",{"_index":1702,"title":{},"body":{"miscellaneous/enumerations.html":{},"miscellaneous/variables.html":{}}}],["subject",{"_index":675,"title":{},"body":{"injectables/MailsService.html":{}}}],["successful",{"_index":1913,"title":{},"body":{"miscellaneous/variables.html":{}}}],["successfully",{"_index":320,"title":{},"body":{"controllers/BankAccountController.html":{},"injectables/UserClientService.html":{}}}],["sun",{"_index":1834,"title":{},"body":{"miscellaneous/variables.html":{}}}],["super",{"_index":589,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["support",{"_index":1751,"title":{},"body":{"index.html":{},"modules.html":{}}}],["suscription",{"_index":732,"title":{"classes/Suscription.html":{}},"body":{"classes/PlatformInterest.html":{},"injectables/Seeder.html":{},"classes/Suscription.html":{},"modules/SuscriptionSeederModule.html":{},"injectables/SuscriptionSeederService.html":{},"classes/UserSuscription.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["suscription.data",{"_index":1210,"title":{},"body":{"injectables/SuscriptionSeederService.html":{}}}],["suscription.entity",{"_index":1192,"title":{},"body":{"classes/Suscription.html":{},"classes/Transaction.html":{},"classes/UserClient.html":{}}}],["suscription.entity.ts",{"_index":1554,"title":{},"body":{"classes/UserSuscription.html":{},"coverage.html":{}}}],["suscription.entity.ts:19",{"_index":1557,"title":{},"body":{"classes/UserSuscription.html":{}}}],["suscription.entity.ts:22",{"_index":1558,"title":{},"body":{"classes/UserSuscription.html":{}}}],["suscription.entity.ts:25",{"_index":1561,"title":{},"body":{"classes/UserSuscription.html":{}}}],["suscription.entity.ts:28",{"_index":1556,"title":{},"body":{"classes/UserSuscription.html":{}}}],["suscription.entity.ts:36",{"_index":1562,"title":{},"body":{"classes/UserSuscription.html":{}}}],["suscription.entity.ts:44",{"_index":1559,"title":{},"body":{"classes/UserSuscription.html":{}}}],["suscription.entity.ts:52",{"_index":1560,"title":{},"body":{"classes/UserSuscription.html":{}}}],["suscription.idsuscription",{"_index":757,"title":{},"body":{"classes/PlatformInterest.html":{},"classes/UserSuscription.html":{}}}],["suscription.service",{"_index":1200,"title":{},"body":{"modules/SuscriptionSeederModule.html":{}}}],["suscription/suscription.module",{"_index":1052,"title":{},"body":{"modules/SeederModule.html":{}}}],["suscription/suscription.service",{"_index":980,"title":{},"body":{"injectables/Seeder.html":{}}}],["suscription/suscription/suscription.entity",{"_index":753,"title":{},"body":{"classes/PlatformInterest.html":{},"classes/UserSuscription.html":{}}}],["suscription/user",{"_index":1191,"title":{},"body":{"classes/Suscription.html":{},"classes/Transaction.html":{},"classes/UserClient.html":{},"classes/UserSuscription.html":{},"coverage.html":{}}}],["suscription_payment",{"_index":1704,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["suscription_rows",{"_index":991,"title":{},"body":{"injectables/Seeder.html":{}}}],["suscriptionmodule",{"_index":19,"title":{"modules/SuscriptionModule.html":{}},"body":{"modules/AppModule.html":{},"modules/SuscriptionModule.html":{},"modules.html":{},"overview.html":{}}}],["suscriptionrepository",{"_index":1207,"title":{},"body":{"injectables/SuscriptionSeederService.html":{}}}],["suscriptions",{"_index":1209,"title":{},"body":{"injectables/SuscriptionSeederService.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["suscriptions.map(suscription",{"_index":1212,"title":{},"body":{"injectables/SuscriptionSeederService.html":{}}}],["suscriptionseedermodule",{"_index":1045,"title":{"modules/SuscriptionSeederModule.html":{}},"body":{"modules/SeederModule.html":{},"modules/SuscriptionSeederModule.html":{},"modules.html":{},"overview.html":{}}}],["suscriptionseederservice",{"_index":963,"title":{"injectables/SuscriptionSeederService.html":{}},"body":{"injectables/Seeder.html":{},"modules/SuscriptionSeederModule.html":{},"injectables/SuscriptionSeederService.html":{},"coverage.html":{},"overview.html":{}}}],["svg",{"_index":1770,"title":{},"body":{"modules.html":{}}}],["synchronize",{"_index":1874,"title":{},"body":{"miscellaneous/variables.html":{}}}],["t",{"_index":868,"title":{},"body":{"interfaces/Response.html":{},"injectables/TransformSignUpInterceptor.html":{}}}],["table",{"_index":1610,"title":{},"body":{"coverage.html":{}}}],["tablesort(document.getelementbyid('coverage",{"_index":1609,"title":{},"body":{"coverage.html":{}}}],["td",{"_index":1837,"title":{},"body":{"miscellaneous/variables.html":{}}}],["template",{"_index":676,"title":{},"body":{"injectables/MailsService.html":{}}}],["templateid",{"_index":687,"title":{},"body":{"injectables/MailsService.html":{}}}],["templates",{"_index":665,"title":{},"body":{"modules/MailsModule.html":{}}}],["terms",{"_index":805,"title":{},"body":{"injectables/PoeditorService.html":{}}}],["test",{"_index":1740,"title":{},"body":{"index.html":{}}}],["test:covsupport",{"_index":1743,"title":{},"body":{"index.html":{}}}],["test:e2e",{"_index":1742,"title":{},"body":{"index.html":{}}}],["testing",{"_index":548,"title":{},"body":{"controllers/ExampleController.html":{}}}],["testlogger",{"_index":529,"title":{},"body":{"controllers/ExampleController.html":{}}}],["testlogger(@getuser",{"_index":547,"title":{},"body":{"controllers/ExampleController.html":{}}}],["testlogger(user",{"_index":539,"title":{},"body":{"controllers/ExampleController.html":{}}}],["tests",{"_index":1739,"title":{},"body":{"index.html":{}}}],["thanks",{"_index":1749,"title":{},"body":{"index.html":{}}}],["then(completed",{"_index":997,"title":{},"body":{"injectables/Seeder.html":{}}}],["then(createdbank",{"_index":1038,"title":{},"body":{"injectables/Seeder.html":{}}}],["then(createdcountry",{"_index":1019,"title":{},"body":{"injectables/Seeder.html":{}}}],["then(createdplataforminterest",{"_index":1031,"title":{},"body":{"injectables/Seeder.html":{}}}],["then(createdpointsconversion",{"_index":1034,"title":{},"body":{"injectables/Seeder.html":{}}}],["then(createdrole",{"_index":1015,"title":{},"body":{"injectables/Seeder.html":{}}}],["then(createdstate",{"_index":1010,"title":{},"body":{"injectables/Seeder.html":{}}}],["then(createdsuscription",{"_index":1024,"title":{},"body":{"injectables/Seeder.html":{}}}],["then(createdthirdpartyinterest",{"_index":1028,"title":{},"body":{"injectables/Seeder.html":{}}}],["third",{"_index":712,"title":{},"body":{"modules/ManagementModule.html":{},"injectables/ThirdPartyInterestService.html":{},"miscellaneous/variables.html":{}}}],["third_party_interest",{"_index":1233,"title":{},"body":{"injectables/ThirdPartyInterestSeederService.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["third_party_interest.data",{"_index":1234,"title":{},"body":{"injectables/ThirdPartyInterestSeederService.html":{}}}],["third_party_interest.map(thirdpartyinterest",{"_index":1236,"title":{},"body":{"injectables/ThirdPartyInterestSeederService.html":{}}}],["third_party_interest.service",{"_index":1225,"title":{},"body":{"modules/ThirdPartyInterestSeederModule.html":{}}}],["third_party_interest/third_party_interest.module",{"_index":1054,"title":{},"body":{"modules/SeederModule.html":{}}}],["third_party_interest/third_party_interest.service",{"_index":982,"title":{},"body":{"injectables/Seeder.html":{}}}],["third_party_interest_rows",{"_index":993,"title":{},"body":{"injectables/Seeder.html":{}}}],["thirdpartyinterest",{"_index":723,"title":{"classes/ThirdPartyInterest.html":{}},"body":{"modules/ManagementModule.html":{},"injectables/Seeder.html":{},"classes/ThirdPartyInterest.html":{},"modules/ThirdPartyInterestSeederModule.html":{},"injectables/ThirdPartyInterestSeederService.html":{},"injectables/ThirdPartyInterestService.html":{},"classes/TransactionInterest.html":{},"injectables/TransactionInterestService.html":{},"injectables/TransactionService.html":{},"coverage.html":{},"miscellaneous/enumerations.html":{}}}],["thirdpartyinterest.idthirdpartyinterest",{"_index":1277,"title":{},"body":{"classes/TransactionInterest.html":{}}}],["thirdpartyinterest.stripe",{"_index":1346,"title":{},"body":{"injectables/TransactionService.html":{}}}],["thirdpartyinterestenum",{"_index":1240,"title":{},"body":{"injectables/ThirdPartyInterestService.html":{}}}],["thirdpartyinterestrepository",{"_index":1231,"title":{},"body":{"injectables/ThirdPartyInterestSeederService.html":{},"injectables/ThirdPartyInterestService.html":{}}}],["thirdpartyinterestseedermodule",{"_index":1046,"title":{"modules/ThirdPartyInterestSeederModule.html":{}},"body":{"modules/SeederModule.html":{},"modules/ThirdPartyInterestSeederModule.html":{},"modules.html":{},"overview.html":{}}}],["thirdpartyinterestseederservice",{"_index":964,"title":{"injectables/ThirdPartyInterestSeederService.html":{}},"body":{"injectables/Seeder.html":{},"modules/ThirdPartyInterestSeederModule.html":{},"injectables/ThirdPartyInterestSeederService.html":{},"coverage.html":{},"overview.html":{}}}],["thirdpartyinterestservice",{"_index":704,"title":{"injectables/ThirdPartyInterestService.html":{}},"body":{"modules/ManagementModule.html":{},"injectables/ThirdPartyInterestService.html":{},"injectables/TransactionService.html":{},"coverage.html":{},"overview.html":{}}}],["thirdpartyinteresttype",{"_index":1345,"title":{},"body":{"injectables/TransactionService.html":{}}}],["this.authservice.createuserclient(user",{"_index":132,"title":{},"body":{"controllers/AuthController.html":{}}}],["this.authservice.hashpassword(password",{"_index":884,"title":{},"body":{"interfaces/Response.html":{},"injectables/TransformSignUpInterceptor.html":{}}}],["this.authservice.validateuser(credentials",{"_index":136,"title":{},"body":{"controllers/AuthController.html":{}}}],["this.bank",{"_index":1008,"title":{},"body":{"injectables/Seeder.html":{}}}],["this.bankaccountrepository.create(account).save",{"_index":378,"title":{},"body":{"injectables/BankAccountService.html":{}}}],["this.bankaccountservice.createbankaccount",{"_index":437,"title":{},"body":{"injectables/ClientBankAccountService.html":{}}}],["this.bankrepository.insert(bank",{"_index":408,"title":{},"body":{"injectables/BankSeederService.html":{}}}],["this.clientbankaccountrepository",{"_index":439,"title":{},"body":{"injectables/ClientBankAccountService.html":{}}}],["this.clientbankaccountservice.createclientbankaccount",{"_index":319,"title":{},"body":{"controllers/BankAccountController.html":{}}}],["this.completeregistrationclient",{"_index":1438,"title":{},"body":{"injectables/UserClientService.html":{}}}],["this.configservice.get('lang.poeditor",{"_index":796,"title":{},"body":{"injectables/PoeditorService.html":{}}}],["this.configservice.get('mails.sendgrid.templates.welcome",{"_index":230,"title":{},"body":{"injectables/AuthService.html":{}}}],["this.connection.manager.save(userrole",{"_index":1537,"title":{},"body":{"injectables/UserRoleService.html":{}}}],["this.connection.manager.save(userstate",{"_index":1171,"title":{},"body":{"injectables/StateUserService.html":{}}}],["this.country",{"_index":1002,"title":{},"body":{"injectables/Seeder.html":{}}}],["this.countryrepository.insert(country",{"_index":473,"title":{},"body":{"injectables/CountrySeederService.html":{}}}],["this.createtoken(createduser.user.email",{"_index":202,"title":{},"body":{"injectables/AuthService.html":{}}}],["this.createtoken(email",{"_index":210,"title":{},"body":{"injectables/AuthService.html":{}}}],["this.createwelcomeemail",{"_index":204,"title":{},"body":{"injectables/AuthService.html":{}}}],["this.generaterandomamounts",{"_index":1348,"title":{},"body":{"injectables/TransactionService.html":{}}}],["this.getclient(user.email",{"_index":1432,"title":{},"body":{"injectables/UserClientService.html":{}}}],["this.gettransactioninterests",{"_index":1341,"title":{},"body":{"injectables/TransactionService.html":{}}}],["this.hashpassword(password",{"_index":214,"title":{},"body":{"injectables/AuthService.html":{}}}],["this.httpservice",{"_index":807,"title":{},"body":{"injectables/PoeditorService.html":{}}}],["this.jwtservice.sign(payload",{"_index":227,"title":{},"body":{"injectables/AuthService.html":{}}}],["this.language",{"_index":1003,"title":{},"body":{"injectables/Seeder.html":{}}}],["this.languagerepository.findone",{"_index":1508,"title":{},"body":{"injectables/UserDetailsService.html":{}}}],["this.languagerepository.insert(language",{"_index":648,"title":{},"body":{"injectables/LanguageSeederService.html":{}}}],["this.languageservice.getterms(lang",{"_index":622,"title":{},"body":{"controllers/LanguageController.html":{}}}],["this.logger.debug",{"_index":556,"title":{},"body":{"controllers/ExampleController.html":{}}}],["this.logger.debug('the",{"_index":562,"title":{},"body":{"controllers/ExampleController.html":{}}}],["this.logger.error",{"_index":222,"title":{},"body":{"injectables/AuthService.html":{},"controllers/ExampleController.html":{},"injectables/JwtStrategy.html":{},"guards/RolesGuard.html":{}}}],["this.logger.error(`[auth",{"_index":217,"title":{},"body":{"injectables/AuthService.html":{}}}],["this.logger.http",{"_index":123,"title":{},"body":{"controllers/AuthController.html":{},"controllers/BankAccountController.html":{},"controllers/ExampleController.html":{}}}],["this.logger.http(`[user",{"_index":1461,"title":{},"body":{"controllers/UserController.html":{}}}],["this.logger.info",{"_index":554,"title":{},"body":{"controllers/ExampleController.html":{}}}],["this.logger.silly",{"_index":379,"title":{},"body":{"injectables/BankAccountService.html":{},"controllers/ExampleController.html":{},"injectables/StateBankAccountService.html":{},"injectables/TransactionService.html":{},"injectables/UserClientService.html":{}}}],["this.logger.verbose",{"_index":555,"title":{},"body":{"controllers/ExampleController.html":{},"injectables/MailsService.html":{},"injectables/TransactionService.html":{}}}],["this.logger.verbose(`[auth",{"_index":137,"title":{},"body":{"controllers/AuthController.html":{}}}],["this.logger.warn",{"_index":553,"title":{},"body":{"controllers/ExampleController.html":{}}}],["this.mailsservice.sendemail",{"_index":228,"title":{},"body":{"injectables/AuthService.html":{}}}],["this.platforminterest",{"_index":1005,"title":{},"body":{"injectables/Seeder.html":{}}}],["this.platforminterestrepository.findone",{"_index":787,"title":{},"body":{"injectables/PlatformInterestService.html":{}}}],["this.platforminterestrepository.insert(platforminterest",{"_index":779,"title":{},"body":{"injectables/PlatformInterestSeederService.html":{}}}],["this.platforminterestseederservice.createplatforminterest",{"_index":1030,"title":{},"body":{"injectables/Seeder.html":{}}}],["this.platforminterestservice.getinterestbyname",{"_index":1318,"title":{},"body":{"injectables/TransactionService.html":{}}}],["this.poeditorservice.getterms(lang",{"_index":653,"title":{},"body":{"injectables/LanguageService.html":{}}}],["this.pointsconversion",{"_index":1007,"title":{},"body":{"injectables/Seeder.html":{}}}],["this.pointsconversionrepository.findone",{"_index":846,"title":{},"body":{"injectables/PointsConversionService.html":{}}}],["this.pointsconversionrepository.insert(pointsconversion",{"_index":841,"title":{},"body":{"injectables/PointsConversionSeederService.html":{}}}],["this.pointsconversionseederservice.createpointsconversion",{"_index":1033,"title":{},"body":{"injectables/Seeder.html":{}}}],["this.pointsconversionservice.getrecentpointsconversion",{"_index":1322,"title":{},"body":{"injectables/TransactionService.html":{}}}],["this.reflector.get('roles",{"_index":925,"title":{},"body":{"guards/RolesGuard.html":{}}}],["this.role",{"_index":996,"title":{},"body":{"injectables/Seeder.html":{}}}],["this.rolerepository.findone",{"_index":915,"title":{},"body":{"injectables/RoleService.html":{}}}],["this.rolerepository.insert(role",{"_index":940,"title":{},"body":{"injectables/RolesSeederService.html":{}}}],["this.roleservice.getrolebyname(role.client",{"_index":1534,"title":{},"body":{"injectables/UserRoleService.html":{}}}],["this.sendgridclient.send(msg",{"_index":689,"title":{},"body":{"injectables/MailsService.html":{}}}],["this.sendgridconfig.emailfrom",{"_index":686,"title":{},"body":{"injectables/MailsService.html":{}}}],["this.state",{"_index":1001,"title":{},"body":{"injectables/Seeder.html":{}}}],["this.statebankaccountservice.createstatebankaccount",{"_index":441,"title":{},"body":{"injectables/ClientBankAccountService.html":{}}}],["this.staterepository.findone",{"_index":1121,"title":{},"body":{"injectables/StateService.html":{}}}],["this.staterepository.insert(state",{"_index":1113,"title":{},"body":{"injectables/StateSeederService.html":{}}}],["this.stateservice.getstate(statename",{"_index":1095,"title":{},"body":{"injectables/StateBankAccountService.html":{},"injectables/StateTransactionService.html":{},"injectables/StateUserService.html":{}}}],["this.statetransactionservice.createstatetransaction",{"_index":1326,"title":{},"body":{"injectables/TransactionService.html":{}}}],["this.stateuserservice.createclientstate",{"_index":1441,"title":{},"body":{"injectables/UserClientService.html":{}}}],["this.suscription",{"_index":1004,"title":{},"body":{"injectables/Seeder.html":{}}}],["this.suscriptionrepository.insert(suscription",{"_index":1213,"title":{},"body":{"injectables/SuscriptionSeederService.html":{}}}],["this.thirdpartyinterest",{"_index":1006,"title":{},"body":{"injectables/Seeder.html":{}}}],["this.thirdpartyinterestrepository.findone",{"_index":1242,"title":{},"body":{"injectables/ThirdPartyInterestService.html":{}}}],["this.thirdpartyinterestrepository.insert(thirdpartyinterest",{"_index":1237,"title":{},"body":{"injectables/ThirdPartyInterestSeederService.html":{}}}],["this.thirdpartyinterestseederservice.createthirdpartyinterest",{"_index":1027,"title":{},"body":{"injectables/Seeder.html":{}}}],["this.thirdpartyinterestservice.getthirdpartyinterest",{"_index":1323,"title":{},"body":{"injectables/TransactionService.html":{}}}],["this.transactioninterestservice.createtransactioninterest",{"_index":1328,"title":{},"body":{"injectables/TransactionService.html":{}}}],["this.transactionrepository.save",{"_index":1325,"title":{},"body":{"injectables/TransactionService.html":{}}}],["this.transactionservice.createverificationtransaction",{"_index":444,"title":{},"body":{"injectables/ClientBankAccountService.html":{}}}],["this.useradministratorservice.findall",{"_index":1550,"title":{},"body":{"injectables/UserService.html":{}}}],["this.useradministratorservice.getactiveadministrator(email",{"_index":1551,"title":{},"body":{"injectables/UserService.html":{}}}],["this.userclientrepository.findone",{"_index":1448,"title":{},"body":{"injectables/UserClientService.html":{}}}],["this.userclientrepository.save(user",{"_index":1436,"title":{},"body":{"injectables/UserClientService.html":{}}}],["this.userclientservice.createuser(user",{"_index":200,"title":{},"body":{"injectables/AuthService.html":{}}}],["this.userclientservice.findall",{"_index":1547,"title":{},"body":{"injectables/UserService.html":{}}}],["this.userclientservice.getactiveclient(email",{"_index":438,"title":{},"body":{"injectables/ClientBankAccountService.html":{},"injectables/UserService.html":{}}}],["this.userdetailsrepository.find",{"_index":1503,"title":{},"body":{"injectables/UserDetailsService.html":{}}}],["this.userdetailsrepository.findone(useradministrator",{"_index":1510,"title":{},"body":{"injectables/UserDetailsService.html":{}}}],["this.userdetailsrepository.findone(userclient",{"_index":1509,"title":{},"body":{"injectables/UserDetailsService.html":{}}}],["this.userdetailsrepository.save(userclientdetails",{"_index":1506,"title":{},"body":{"injectables/UserDetailsService.html":{}}}],["this.userdetailsservice.createclientdetails",{"_index":368,"title":{},"body":{"injectables/BankAccountService.html":{},"injectables/UserClientService.html":{}}}],["this.userdetailsservice.findallclients",{"_index":1431,"title":{},"body":{"injectables/UserClientService.html":{}}}],["this.userdetailsservice.getadministratordetails(user",{"_index":1552,"title":{},"body":{"injectables/UserService.html":{}}}],["this.userdetailsservice.getclientdetails(user",{"_index":1553,"title":{},"body":{"injectables/UserService.html":{}}}],["this.userdetailsservice.getlanguage('en",{"_index":1439,"title":{},"body":{"injectables/UserClientService.html":{}}}],["this.userroleservice.createclientrole(userclient",{"_index":1442,"title":{},"body":{"injectables/UserClientService.html":{}}}],["this.userservice.findall(role",{"_index":1464,"title":{},"body":{"controllers/UserController.html":{}}}],["this.userservice.getuserbyemail(credentials",{"_index":209,"title":{},"body":{"injectables/AuthService.html":{}}}],["this.userservice.getuserbyemail(payload",{"_index":595,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["this.validate(options.routingnumber",{"_index":359,"title":{},"body":{"injectables/BankAccountService.html":{}}}],["throw",{"_index":219,"title":{},"body":{"injectables/AuthService.html":{},"injectables/BankAccountService.html":{},"injectables/JwtStrategy.html":{},"guards/RolesGuard.html":{},"injectables/UserClientService.html":{}}}],["timestamp",{"_index":1081,"title":{},"body":{"classes/StateBankAccount.html":{},"classes/StateTransaction.html":{},"classes/StateUser.html":{},"classes/Transaction.html":{}}}],["tofixed(2",{"_index":1336,"title":{},"body":{"injectables/TransactionService.html":{}}}],["token",{"_index":201,"title":{},"body":{"injectables/AuthService.html":{},"controllers/ExampleController.html":{},"classes/Promotion.html":{}}}],["tolocalestring",{"_index":1848,"title":{},"body":{"miscellaneous/variables.html":{}}}],["topromise",{"_index":811,"title":{},"body":{"injectables/PoeditorService.html":{}}}],["totalamountwithinterest",{"_index":1246,"title":{},"body":{"classes/Transaction.html":{}}}],["touch",{"_index":1760,"title":{},"body":{"index.html":{}}}],["transaction",{"_index":410,"title":{"classes/Transaction.html":{}},"body":{"classes/ClientBankAccount.html":{},"classes/PointsConversion.html":{},"classes/StateTransaction.html":{},"injectables/StateTransactionService.html":{},"classes/Transaction.html":{},"classes/TransactionInterest.html":{},"injectables/TransactionInterestService.html":{},"modules/TransactionModule.html":{},"injectables/TransactionService.html":{},"classes/UserSuscription.html":{},"coverage.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/variables.html":{}}}],["transaction.entity",{"_index":1073,"title":{},"body":{"classes/State.html":{},"injectables/StateTransactionService.html":{},"classes/Transaction.html":{}}}],["transaction.entity.ts",{"_index":1123,"title":{},"body":{"classes/StateTransaction.html":{},"coverage.html":{}}}],["transaction.entity.ts:16",{"_index":1127,"title":{},"body":{"classes/StateTransaction.html":{}}}],["transaction.entity.ts:19",{"_index":1128,"title":{},"body":{"classes/StateTransaction.html":{}}}],["transaction.entity.ts:25",{"_index":1126,"title":{},"body":{"classes/StateTransaction.html":{}}}],["transaction.entity.ts:28",{"_index":1125,"title":{},"body":{"classes/StateTransaction.html":{}}}],["transaction.entity.ts:38",{"_index":1129,"title":{},"body":{"classes/StateTransaction.html":{}}}],["transaction.entity.ts:46",{"_index":1131,"title":{},"body":{"classes/StateTransaction.html":{}}}],["transaction.enum",{"_index":1260,"title":{},"body":{"classes/Transaction.html":{}}}],["transaction.idtransaction",{"_index":424,"title":{},"body":{"classes/ClientBankAccount.html":{},"classes/PointsConversion.html":{},"classes/StateTransaction.html":{},"classes/Transaction.html":{},"classes/TransactionInterest.html":{},"injectables/TransactionService.html":{},"classes/UserSuscription.html":{}}}],["transaction.service",{"_index":1294,"title":{},"body":{"modules/TransactionModule.html":{},"injectables/TransactionService.html":{}}}],["transaction.service.ts",{"_index":1134,"title":{},"body":{"injectables/StateTransactionService.html":{},"coverage.html":{}}}],["transaction.service.ts:11",{"_index":1136,"title":{},"body":{"injectables/StateTransactionService.html":{}}}],["transaction.service.ts:14",{"_index":1138,"title":{},"body":{"injectables/StateTransactionService.html":{}}}],["transaction/state",{"_index":1072,"title":{},"body":{"classes/State.html":{},"classes/StateTransaction.html":{},"injectables/StateTransactionService.html":{},"classes/Transaction.html":{},"modules/TransactionModule.html":{},"injectables/TransactionService.html":{},"coverage.html":{}}}],["transaction/transaction",{"_index":754,"title":{},"body":{"classes/PlatformInterest.html":{},"classes/Promotion.html":{},"classes/ThirdPartyInterest.html":{}}}],["transaction/transaction.entity",{"_index":1132,"title":{},"body":{"classes/StateTransaction.html":{},"injectables/StateTransactionService.html":{},"classes/TransactionInterest.html":{},"injectables/TransactionInterestService.html":{},"modules/TransactionModule.html":{},"injectables/TransactionService.html":{}}}],["transaction/transaction.enum",{"_index":1315,"title":{},"body":{"injectables/TransactionService.html":{}}}],["transaction/transaction.module",{"_index":333,"title":{},"body":{"modules/BankAccountModule.html":{}}}],["transaction/transaction.service",{"_index":435,"title":{},"body":{"injectables/ClientBankAccountService.html":{}}}],["transaction/transaction/transaction.entity",{"_index":422,"title":{},"body":{"classes/ClientBankAccount.html":{},"classes/PointsConversion.html":{},"classes/UserSuscription.html":{}}}],["transactioninterest",{"_index":733,"title":{"classes/TransactionInterest.html":{}},"body":{"classes/PlatformInterest.html":{},"classes/Promotion.html":{},"classes/ThirdPartyInterest.html":{},"classes/Transaction.html":{},"classes/TransactionInterest.html":{},"injectables/TransactionInterestService.html":{},"modules/TransactionModule.html":{},"coverage.html":{}}}],["transactioninterest.idtransactioninterest",{"_index":758,"title":{},"body":{"classes/PlatformInterest.html":{},"classes/Promotion.html":{},"classes/ThirdPartyInterest.html":{},"classes/Transaction.html":{}}}],["transactioninterest.platforminterest",{"_index":1284,"title":{},"body":{"injectables/TransactionInterestService.html":{}}}],["transactioninterest.platforminterestextrapoints",{"_index":1286,"title":{},"body":{"injectables/TransactionInterestService.html":{}}}],["transactioninterest.promotion",{"_index":1285,"title":{},"body":{"injectables/TransactionInterestService.html":{}}}],["transactioninterest.thirdpartyinterest",{"_index":1283,"title":{},"body":{"injectables/TransactionInterestService.html":{}}}],["transactioninterest.transaction",{"_index":1282,"title":{},"body":{"injectables/TransactionInterestService.html":{}}}],["transactioninterestextrapoints",{"_index":734,"title":{},"body":{"classes/PlatformInterest.html":{}}}],["transactioninterestextrapoints.idtransactioninterest",{"_index":759,"title":{},"body":{"classes/PlatformInterest.html":{}}}],["transactioninterestservice",{"_index":1279,"title":{"injectables/TransactionInterestService.html":{}},"body":{"injectables/TransactionInterestService.html":{},"modules/TransactionModule.html":{},"injectables/TransactionService.html":{},"coverage.html":{},"overview.html":{}}}],["transactionmodule",{"_index":20,"title":{"modules/TransactionModule.html":{}},"body":{"modules/AppModule.html":{},"modules/BankAccountModule.html":{},"modules/TransactionModule.html":{},"modules.html":{},"overview.html":{}}}],["transactionrepository",{"_index":1303,"title":{},"body":{"injectables/TransactionService.html":{}}}],["transactions",{"_index":1340,"title":{},"body":{"injectables/TransactionService.html":{}}}],["transactionservice",{"_index":428,"title":{"injectables/TransactionService.html":{}},"body":{"injectables/ClientBankAccountService.html":{},"modules/TransactionModule.html":{},"injectables/TransactionService.html":{},"coverage.html":{},"overview.html":{}}}],["transactiontype",{"_index":1257,"title":{},"body":{"classes/Transaction.html":{},"injectables/TransactionService.html":{},"miscellaneous/enumerations.html":{}}}],["transformer",{"_index":1408,"title":{},"body":{"classes/UserClient.html":{},"dependencies.html":{}}}],["transformsignupinterceptor",{"_index":111,"title":{"injectables/TransformSignUpInterceptor.html":{}},"body":{"controllers/AuthController.html":{},"interfaces/Response.html":{},"injectables/TransformSignUpInterceptor.html":{},"coverage.html":{}}}],["transports",{"_index":1618,"title":{},"body":{"interfaces/createOptionsParams.html":{}}}],["true",{"_index":58,"title":{},"body":{"modules/AppModule.html":{},"classes/Bank.html":{},"classes/BankAccount.html":{},"classes/ClientBankAccount.html":{},"classes/Country.html":{},"classes/Language.html":{},"classes/PlatformInterest.html":{},"classes/PointsConversion.html":{},"classes/Promotion.html":{},"classes/Role.html":{},"guards/RolesGuard.html":{},"classes/RoutingNumber.html":{},"classes/State.html":{},"classes/StateBankAccount.html":{},"classes/StateTransaction.html":{},"classes/StateUser.html":{},"classes/Suscription.html":{},"classes/ThirdPartyInterest.html":{},"classes/Transaction.html":{},"classes/TransactionInterest.html":{},"classes/UserAdministrator.html":{},"classes/UserClient.html":{},"classes/UserDetails.html":{},"classes/UserRole.html":{},"classes/UserSuscription.html":{},"miscellaneous/variables.html":{}}}],["true})@exclude",{"_index":1400,"title":{},"body":{"classes/UserClient.html":{}}}],["true})@joincolumn({name",{"_index":247,"title":{},"body":{"classes/Bank.html":{},"classes/BankAccount.html":{},"classes/PlatformInterest.html":{},"classes/StateUser.html":{},"classes/Transaction.html":{},"classes/TransactionInterest.html":{},"classes/UserDetails.html":{},"classes/UserRole.html":{}}}],["trust",{"_index":1835,"title":{},"body":{"miscellaneous/variables.html":{}}}],["try",{"_index":683,"title":{},"body":{"injectables/MailsService.html":{}}}],["twitter",{"_index":1766,"title":{},"body":{"index.html":{}}}],["type",{"_index":92,"title":{},"body":{"controllers/AuthController.html":{},"injectables/AuthService.html":{},"classes/Bank.html":{},"classes/BankAccount.html":{},"controllers/BankAccountController.html":{},"injectables/BankAccountService.html":{},"injectables/BankSeederService.html":{},"classes/ClientBankAccount.html":{},"injectables/ClientBankAccountService.html":{},"classes/Country.html":{},"injectables/CountrySeederService.html":{},"classes/CreateBankAccountDTO.html":{},"classes/CreateUserDTO.html":{},"injectables/JwtStrategy.html":{},"classes/Language.html":{},"injectables/LanguageSeederService.html":{},"injectables/LanguageService.html":{},"injectables/MailsService.html":{},"classes/PlatformInterest.html":{},"injectables/PlatformInterestSeederService.html":{},"injectables/PlatformInterestService.html":{},"injectables/PoeditorService.html":{},"classes/PointsConversion.html":{},"injectables/PointsConversionSeederService.html":{},"injectables/PointsConversionService.html":{},"classes/Promotion.html":{},"interfaces/Response.html":{},"classes/Role.html":{},"injectables/RoleService.html":{},"guards/RolesGuard.html":{},"injectables/RolesSeederService.html":{},"classes/RoutingNumber.html":{},"injectables/Seeder.html":{},"classes/State.html":{},"classes/StateBankAccount.html":{},"injectables/StateBankAccountService.html":{},"injectables/StateSeederService.html":{},"injectables/StateService.html":{},"classes/StateTransaction.html":{},"injectables/StateTransactionService.html":{},"classes/StateUser.html":{},"injectables/StateUserService.html":{},"classes/Suscription.html":{},"injectables/SuscriptionSeederService.html":{},"classes/ThirdPartyInterest.html":{},"injectables/ThirdPartyInterestSeederService.html":{},"injectables/ThirdPartyInterestService.html":{},"classes/Transaction.html":{},"classes/TransactionInterest.html":{},"injectables/TransactionInterestService.html":{},"injectables/TransactionService.html":{},"injectables/TransformSignUpInterceptor.html":{},"classes/UserAdministrator.html":{},"injectables/UserAdministratorService.html":{},"classes/UserClient.html":{},"injectables/UserClientService.html":{},"controllers/UserController.html":{},"classes/UserDetails.html":{},"injectables/UserDetailsService.html":{},"classes/UserRole.html":{},"injectables/UserRoleService.html":{},"injectables/UserService.html":{},"classes/UserSuscription.html":{},"coverage.html":{},"interfaces/createOptionsParams.html":{},"miscellaneous/variables.html":{}}}],["typeorm",{"_index":265,"title":{},"body":{"classes/Bank.html":{},"classes/BankAccount.html":{},"injectables/BankAccountService.html":{},"injectables/BankSeederService.html":{},"classes/ClientBankAccount.html":{},"injectables/ClientBankAccountService.html":{},"classes/Country.html":{},"injectables/CountrySeederService.html":{},"classes/Language.html":{},"injectables/LanguageSeederService.html":{},"classes/PlatformInterest.html":{},"injectables/PlatformInterestSeederService.html":{},"injectables/PlatformInterestService.html":{},"classes/PointsConversion.html":{},"injectables/PointsConversionSeederService.html":{},"injectables/PointsConversionService.html":{},"classes/Promotion.html":{},"classes/Role.html":{},"injectables/RoleService.html":{},"injectables/RolesSeederService.html":{},"classes/RoutingNumber.html":{},"injectables/Seeder.html":{},"classes/State.html":{},"classes/StateBankAccount.html":{},"injectables/StateBankAccountService.html":{},"injectables/StateSeederService.html":{},"injectables/StateService.html":{},"classes/StateTransaction.html":{},"injectables/StateTransactionService.html":{},"classes/StateUser.html":{},"injectables/StateUserService.html":{},"classes/Suscription.html":{},"injectables/SuscriptionSeederService.html":{},"classes/ThirdPartyInterest.html":{},"injectables/ThirdPartyInterestSeederService.html":{},"injectables/ThirdPartyInterestService.html":{},"classes/Transaction.html":{},"classes/TransactionInterest.html":{},"injectables/TransactionInterestService.html":{},"injectables/TransactionService.html":{},"classes/UserAdministrator.html":{},"injectables/UserAdministratorService.html":{},"classes/UserClient.html":{},"injectables/UserClientService.html":{},"classes/UserDetails.html":{},"injectables/UserDetailsService.html":{},"classes/UserRole.html":{},"injectables/UserRoleService.html":{},"classes/UserSuscription.html":{},"dependencies.html":{}}}],["typeorm.config",{"_index":1058,"title":{},"body":{"modules/SeederModule.html":{}}}],["typeormconfig",{"_index":1057,"title":{},"body":{"modules/SeederModule.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["typeormmodule",{"_index":331,"title":{},"body":{"modules/BankAccountModule.html":{},"modules/BankSeederModule.html":{},"modules/CountrySeederModule.html":{},"modules/LanguageSeederModule.html":{},"modules/ManagementModule.html":{},"modules/PlatformInterestSeederModule.html":{},"modules/PointsConversionSeederModule.html":{},"modules/RoleSeederModule.html":{},"modules/SeederModule.html":{},"modules/StatesSeederModule.html":{},"modules/SuscriptionSeederModule.html":{},"modules/ThirdPartyInterestSeederModule.html":{},"modules/TransactionModule.html":{},"modules/UserModule.html":{}}}],["typeormmodule.forfeature",{"_index":340,"title":{},"body":{"modules/BankAccountModule.html":{},"modules/ManagementModule.html":{},"modules/UserModule.html":{}}}],["typeormmodule.forfeature([bank",{"_index":397,"title":{},"body":{"modules/BankSeederModule.html":{}}}],["typeormmodule.forfeature([country",{"_index":462,"title":{},"body":{"modules/CountrySeederModule.html":{}}}],["typeormmodule.forfeature([language",{"_index":637,"title":{},"body":{"modules/LanguageSeederModule.html":{}}}],["typeormmodule.forfeature([platforminterest",{"_index":768,"title":{},"body":{"modules/PlatformInterestSeederModule.html":{}}}],["typeormmodule.forfeature([pointsconversion",{"_index":830,"title":{},"body":{"modules/PointsConversionSeederModule.html":{}}}],["typeormmodule.forfeature([role",{"_index":904,"title":{},"body":{"modules/RoleSeederModule.html":{}}}],["typeormmodule.forfeature([state",{"_index":724,"title":{},"body":{"modules/ManagementModule.html":{},"modules/StatesSeederModule.html":{}}}],["typeormmodule.forfeature([suscription",{"_index":1202,"title":{},"body":{"modules/SuscriptionSeederModule.html":{}}}],["typeormmodule.forfeature([thirdpartyinterest",{"_index":1226,"title":{},"body":{"modules/ThirdPartyInterestSeederModule.html":{}}}],["typeormmodule.forfeature([transaction",{"_index":1295,"title":{},"body":{"modules/TransactionModule.html":{}}}],["typeormmodule.forroot(typeormconfig",{"_index":1059,"title":{},"body":{"modules/SeederModule.html":{}}}],["typeormmodule.forrootasync",{"_index":1852,"title":{},"body":{"miscellaneous/variables.html":{}}}],["typeormmoduleoptions",{"_index":1878,"title":{},"body":{"miscellaneous/variables.html":{}}}],["typescript",{"_index":1668,"title":{},"body":{"dependencies.html":{},"index.html":{}}}],["unauthorizedexception",{"_index":189,"title":{},"body":{"injectables/AuthService.html":{},"injectables/JwtStrategy.html":{},"guards/RolesGuard.html":{}}}],["unauthorizedexception('email",{"_index":221,"title":{},"body":{"injectables/AuthService.html":{}}}],["unauthorizedexception(`the",{"_index":933,"title":{},"body":{"guards/RolesGuard.html":{}}}],["unauthorizedexception(`user",{"_index":600,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["undefined",{"_index":245,"title":{},"body":{"classes/Bank.html":{},"classes/BankAccount.html":{},"classes/ClientBankAccount.html":{},"classes/Country.html":{},"classes/Language.html":{},"classes/PlatformInterest.html":{},"classes/PointsConversion.html":{},"classes/Promotion.html":{},"interfaces/Response.html":{},"classes/Role.html":{},"classes/RoutingNumber.html":{},"classes/State.html":{},"classes/StateBankAccount.html":{},"classes/StateTransaction.html":{},"classes/StateUser.html":{},"classes/Suscription.html":{},"classes/ThirdPartyInterest.html":{},"classes/Transaction.html":{},"classes/TransactionInterest.html":{},"injectables/TransformSignUpInterceptor.html":{},"classes/UserAdministrator.html":{},"classes/UserClient.html":{},"classes/UserDetails.html":{},"classes/UserRole.html":{},"classes/UserSuscription.html":{}}}],["union",{"_index":1825,"title":{},"body":{"miscellaneous/variables.html":{}}}],["unique",{"_index":452,"title":{},"body":{"classes/Country.html":{},"classes/Role.html":{},"classes/UserAdministrator.html":{},"classes/UserClient.html":{}}}],["unit",{"_index":1738,"title":{},"body":{"index.html":{}}}],["united",{"_index":1850,"title":{},"body":{"miscellaneous/variables.html":{}}}],["up",{"_index":128,"title":{},"body":{"controllers/AuthController.html":{},"injectables/AuthService.html":{},"interfaces/Response.html":{},"injectables/TransformSignUpInterceptor.html":{}}}],["up.interceptor",{"_index":114,"title":{},"body":{"controllers/AuthController.html":{}}}],["up.interceptor.ts",{"_index":867,"title":{},"body":{"interfaces/Response.html":{},"injectables/TransformSignUpInterceptor.html":{},"coverage.html":{}}}],["up.interceptor.ts:18",{"_index":1358,"title":{},"body":{"injectables/TransformSignUpInterceptor.html":{}}}],["up.interceptor.ts:20",{"_index":1360,"title":{},"body":{"injectables/TransformSignUpInterceptor.html":{}}}],["upgraded_amount",{"_index":1918,"title":{},"body":{"miscellaneous/variables.html":{}}}],["upgradedamount",{"_index":1180,"title":{},"body":{"classes/Suscription.html":{},"classes/UserSuscription.html":{}}}],["usa",{"_index":1815,"title":{},"body":{"miscellaneous/variables.html":{}}}],["usaa",{"_index":1812,"title":{},"body":{"miscellaneous/variables.html":{}}}],["use",{"_index":1435,"title":{},"body":{"injectables/UserClientService.html":{}}}],["used",{"_index":1908,"title":{},"body":{"miscellaneous/variables.html":{}}}],["usefactory",{"_index":154,"title":{},"body":{"modules/AuthModule.html":{},"modules/MailsModule.html":{},"miscellaneous/variables.html":{}}}],["usefactory(configservice",{"_index":1853,"title":{},"body":{"miscellaneous/variables.html":{}}}],["useguards",{"_index":300,"title":{},"body":{"controllers/BankAccountController.html":{},"controllers/ExampleController.html":{}}}],["useguards(authguard('jwt",{"_index":312,"title":{},"body":{"controllers/BankAccountController.html":{},"controllers/ExampleController.html":{}}}],["useguards(rolesguard",{"_index":314,"title":{},"body":{"controllers/BankAccountController.html":{},"controllers/ExampleController.html":{}}}],["useinterceptors",{"_index":104,"title":{},"body":{"controllers/AuthController.html":{},"controllers/UserController.html":{}}}],["useinterceptors(classserializerinterceptor",{"_index":1459,"title":{},"body":{"controllers/UserController.html":{}}}],["useinterceptors(transformsignupinterceptor",{"_index":120,"title":{},"body":{"controllers/AuthController.html":{}}}],["useinterceptors(transformsignupinterceptor)@post('signup",{"_index":98,"title":{},"body":{"controllers/AuthController.html":{}}}],["user",{"_index":100,"title":{},"body":{"controllers/AuthController.html":{},"injectables/AuthService.html":{},"controllers/BankAccountController.html":{},"injectables/BankAccountService.html":{},"controllers/ExampleController.html":{},"injectables/JwtStrategy.html":{},"classes/Language.html":{},"guards/RolesGuard.html":{},"classes/StateUser.html":{},"injectables/StateUserService.html":{},"classes/Transaction.html":{},"injectables/UserAdministratorService.html":{},"classes/UserClient.html":{},"injectables/UserClientService.html":{},"controllers/UserController.html":{},"classes/UserDetails.html":{},"injectables/UserDetailsService.html":{},"modules/UserModule.html":{},"classes/UserRole.html":{},"injectables/UserRoleService.html":{},"injectables/UserService.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/variables.html":{}}}],["user.controller",{"_index":1516,"title":{},"body":{"modules/UserModule.html":{}}}],["user.decorator",{"_index":306,"title":{},"body":{"controllers/BankAccountController.html":{},"controllers/ExampleController.html":{}}}],["user.decorator.ts",{"_index":1596,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["user.dto",{"_index":110,"title":{},"body":{"controllers/AuthController.html":{},"injectables/AuthService.html":{},"injectables/UserClientService.html":{}}}],["user.dto.ts",{"_index":488,"title":{},"body":{"classes/CreateUserDTO.html":{},"coverage.html":{}}}],["user.dto.ts:11",{"_index":504,"title":{},"body":{"classes/CreateUserDTO.html":{}}}],["user.dto.ts:15",{"_index":507,"title":{},"body":{"classes/CreateUserDTO.html":{}}}],["user.dto.ts:19",{"_index":509,"title":{},"body":{"classes/CreateUserDTO.html":{}}}],["user.dto.ts:24",{"_index":512,"title":{},"body":{"classes/CreateUserDTO.html":{}}}],["user.dto.ts:28",{"_index":515,"title":{},"body":{"classes/CreateUserDTO.html":{}}}],["user.dto.ts:32",{"_index":505,"title":{},"body":{"classes/CreateUserDTO.html":{}}}],["user.dto.ts:36",{"_index":508,"title":{},"body":{"classes/CreateUserDTO.html":{}}}],["user.dto.ts:40",{"_index":510,"title":{},"body":{"classes/CreateUserDTO.html":{}}}],["user.dto.ts:44",{"_index":516,"title":{},"body":{"classes/CreateUserDTO.html":{}}}],["user.dto.ts:47",{"_index":502,"title":{},"body":{"classes/CreateUserDTO.html":{}}}],["user.dto.ts:51",{"_index":500,"title":{},"body":{"classes/CreateUserDTO.html":{}}}],["user.dto.ts:55",{"_index":513,"title":{},"body":{"classes/CreateUserDTO.html":{}}}],["user.dto.ts:59",{"_index":514,"title":{},"body":{"classes/CreateUserDTO.html":{}}}],["user.email",{"_index":126,"title":{},"body":{"controllers/AuthController.html":{},"controllers/BankAccountController.html":{},"controllers/ExampleController.html":{},"guards/RolesGuard.html":{},"injectables/UserService.html":{}}}],["user.entity",{"_index":1071,"title":{},"body":{"classes/State.html":{},"injectables/StateUserService.html":{},"classes/UserAdministrator.html":{},"injectables/UserAdministratorService.html":{},"classes/UserClient.html":{},"injectables/UserClientService.html":{},"modules/UserModule.html":{}}}],["user.entity.ts",{"_index":1145,"title":{},"body":{"classes/StateUser.html":{},"coverage.html":{}}}],["user.entity.ts:17",{"_index":1150,"title":{},"body":{"classes/StateUser.html":{}}}],["user.entity.ts:20",{"_index":1151,"title":{},"body":{"classes/StateUser.html":{}}}],["user.entity.ts:23",{"_index":1149,"title":{},"body":{"classes/StateUser.html":{}}}],["user.entity.ts:26",{"_index":1148,"title":{},"body":{"classes/StateUser.html":{}}}],["user.entity.ts:36",{"_index":1152,"title":{},"body":{"classes/StateUser.html":{}}}],["user.entity.ts:44",{"_index":1155,"title":{},"body":{"classes/StateUser.html":{}}}],["user.entity.ts:54",{"_index":1154,"title":{},"body":{"classes/StateUser.html":{}}}],["user.password",{"_index":216,"title":{},"body":{"injectables/AuthService.html":{},"injectables/UserService.html":{}}}],["user.role",{"_index":930,"title":{},"body":{"guards/RolesGuard.html":{}}}],["user.salt",{"_index":215,"title":{},"body":{"injectables/AuthService.html":{},"injectables/UserService.html":{}}}],["user.service",{"_index":1429,"title":{},"body":{"injectables/UserClientService.html":{},"controllers/UserController.html":{},"modules/UserModule.html":{}}}],["user.service.ts",{"_index":1160,"title":{},"body":{"injectables/StateUserService.html":{},"coverage.html":{}}}],["user.service.ts:11",{"_index":1163,"title":{},"body":{"injectables/StateUserService.html":{}}}],["user.service.ts:15",{"_index":1165,"title":{},"body":{"injectables/StateUserService.html":{}}}],["user.userdetails.fk_user_client",{"_index":601,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["user/${role",{"_index":1463,"title":{},"body":{"controllers/UserController.html":{}}}],["user/dto/create",{"_index":109,"title":{},"body":{"controllers/AuthController.html":{},"injectables/AuthService.html":{}}}],["user/state",{"_index":1070,"title":{},"body":{"classes/State.html":{},"classes/StateUser.html":{},"injectables/StateUserService.html":{},"classes/UserAdministrator.html":{},"injectables/UserAdministratorService.html":{},"classes/UserClient.html":{},"injectables/UserClientService.html":{},"modules/UserModule.html":{},"coverage.html":{}}}],["user/user",{"_index":192,"title":{},"body":{"injectables/AuthService.html":{},"classes/BankAccount.html":{},"injectables/BankAccountService.html":{},"classes/ClientBankAccount.html":{},"injectables/ClientBankAccountService.html":{},"classes/Country.html":{},"classes/CreateBankAccountDTO.html":{},"classes/Role.html":{},"classes/UserAdministrator.html":{},"classes/UserSuscription.html":{}}}],["user/user.module",{"_index":151,"title":{},"body":{"modules/AuthModule.html":{},"modules/BankAccountModule.html":{},"modules/ExampleModule.html":{}}}],["user/user.service",{"_index":196,"title":{},"body":{"injectables/AuthService.html":{},"injectables/JwtStrategy.html":{}}}],["useradministrator",{"_index":1147,"title":{"classes/UserAdministrator.html":{}},"body":{"classes/StateUser.html":{},"classes/UserAdministrator.html":{},"injectables/UserAdministratorService.html":{},"classes/UserDetails.html":{},"injectables/UserDetailsService.html":{},"classes/UserRole.html":{},"coverage.html":{}}}],["useradministrator.iduseradministrator",{"_index":1158,"title":{},"body":{"classes/StateUser.html":{},"classes/UserDetails.html":{},"classes/UserRole.html":{}}}],["useradministratorservice",{"_index":1372,"title":{"injectables/UserAdministratorService.html":{}},"body":{"injectables/UserAdministratorService.html":{},"modules/UserModule.html":{},"injectables/UserService.html":{},"coverage.html":{},"overview.html":{}}}],["userclient",{"_index":411,"title":{"classes/UserClient.html":{}},"body":{"classes/ClientBankAccount.html":{},"injectables/ClientBankAccountService.html":{},"classes/StateUser.html":{},"injectables/StateUserService.html":{},"classes/UserClient.html":{},"injectables/UserClientService.html":{},"classes/UserDetails.html":{},"injectables/UserDetailsService.html":{},"modules/UserModule.html":{},"classes/UserRole.html":{},"injectables/UserRoleService.html":{},"classes/UserSuscription.html":{},"coverage.html":{}}}],["userclient.iduserclient",{"_index":423,"title":{},"body":{"classes/ClientBankAccount.html":{},"classes/StateUser.html":{},"injectables/UserClientService.html":{},"classes/UserDetails.html":{},"classes/UserRole.html":{},"classes/UserSuscription.html":{}}}],["userclientdetails",{"_index":1437,"title":{},"body":{"injectables/UserClientService.html":{},"injectables/UserDetailsService.html":{}}}],["userclientrepository",{"_index":1415,"title":{},"body":{"injectables/UserClientService.html":{}}}],["userclientservice",{"_index":169,"title":{"injectables/UserClientService.html":{}},"body":{"injectables/AuthService.html":{},"injectables/ClientBankAccountService.html":{},"injectables/UserClientService.html":{},"modules/UserModule.html":{},"injectables/UserService.html":{},"coverage.html":{},"overview.html":{}}}],["usercontroller",{"_index":1449,"title":{"controllers/UserController.html":{}},"body":{"controllers/UserController.html":{},"modules/UserModule.html":{},"coverage.html":{}}}],["userdetails",{"_index":207,"title":{"classes/UserDetails.html":{}},"body":{"injectables/AuthService.html":{},"classes/BankAccount.html":{},"injectables/BankAccountService.html":{},"classes/Country.html":{},"classes/CreateBankAccountDTO.html":{},"classes/Language.html":{},"classes/UserAdministrator.html":{},"classes/UserClient.html":{},"injectables/UserClientService.html":{},"classes/UserDetails.html":{},"injectables/UserDetailsService.html":{},"modules/UserModule.html":{},"injectables/UserService.html":{},"coverage.html":{}}}],["userdetails.iduserdetails",{"_index":291,"title":{},"body":{"classes/BankAccount.html":{},"classes/Country.html":{},"classes/Language.html":{},"classes/UserAdministrator.html":{},"classes/UserClient.html":{}}}],["userdetailsrepository",{"_index":1491,"title":{},"body":{"injectables/UserDetailsService.html":{}}}],["userdetailsservice",{"_index":346,"title":{"injectables/UserDetailsService.html":{}},"body":{"injectables/BankAccountService.html":{},"injectables/UserClientService.html":{},"injectables/UserDetailsService.html":{},"modules/UserModule.html":{},"injectables/UserService.html":{},"coverage.html":{},"overview.html":{}}}],["usermodule",{"_index":21,"title":{"modules/UserModule.html":{}},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/BankAccountModule.html":{},"modules/ExampleModule.html":{},"modules/UserModule.html":{},"modules.html":{},"overview.html":{}}}],["username",{"_index":1863,"title":{},"body":{"miscellaneous/variables.html":{}}}],["userowner",{"_index":365,"title":{},"body":{"injectables/BankAccountService.html":{}}}],["userrole",{"_index":889,"title":{"classes/UserRole.html":{}},"body":{"classes/Role.html":{},"classes/UserAdministrator.html":{},"classes/UserClient.html":{},"classes/UserRole.html":{},"injectables/UserRoleService.html":{},"coverage.html":{}}}],["userrole.iduserrole",{"_index":895,"title":{},"body":{"classes/Role.html":{},"classes/UserAdministrator.html":{},"classes/UserClient.html":{}}}],["userrole.role",{"_index":1535,"title":{},"body":{"injectables/UserRoleService.html":{}}}],["userrole.userclient",{"_index":1536,"title":{},"body":{"injectables/UserRoleService.html":{}}}],["userroleservice",{"_index":1416,"title":{"injectables/UserRoleService.html":{}},"body":{"injectables/UserClientService.html":{},"modules/UserModule.html":{},"injectables/UserRoleService.html":{},"coverage.html":{},"overview.html":{}}}],["users",{"_index":545,"title":{},"body":{"controllers/ExampleController.html":{}}}],["userservice",{"_index":172,"title":{"injectables/UserService.html":{}},"body":{"injectables/AuthService.html":{},"injectables/JwtStrategy.html":{},"controllers/UserController.html":{},"modules/UserModule.html":{},"injectables/UserService.html":{},"coverage.html":{},"overview.html":{}}}],["userstate",{"_index":1166,"title":{},"body":{"injectables/StateUserService.html":{}}}],["userstate.description",{"_index":1169,"title":{},"body":{"injectables/StateUserService.html":{}}}],["userstate.initialdate",{"_index":1168,"title":{},"body":{"injectables/StateUserService.html":{}}}],["userstate.state",{"_index":1170,"title":{},"body":{"injectables/StateUserService.html":{}}}],["userstate.userclient",{"_index":1167,"title":{},"body":{"injectables/StateUserService.html":{}}}],["usersuscription",{"_index":1181,"title":{"classes/UserSuscription.html":{}},"body":{"classes/Suscription.html":{},"classes/Transaction.html":{},"classes/UserClient.html":{},"classes/UserSuscription.html":{},"coverage.html":{}}}],["usersuscription.idusersuscription",{"_index":1193,"title":{},"body":{"classes/Suscription.html":{},"classes/Transaction.html":{},"classes/UserClient.html":{}}}],["valid",{"_index":1700,"title":{},"body":{"miscellaneous/enumerations.html":{},"miscellaneous/variables.html":{}}}],["validate",{"_index":343,"title":{},"body":{"injectables/BankAccountService.html":{},"injectables/JwtStrategy.html":{}}}],["validate(payload",{"_index":581,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["validate(routingnumber",{"_index":352,"title":{},"body":{"injectables/BankAccountService.html":{}}}],["validateuser",{"_index":167,"title":{},"body":{"injectables/AuthService.html":{}}}],["validateuser(credentials",{"_index":187,"title":{},"body":{"injectables/AuthService.html":{}}}],["validationpipe",{"_index":103,"title":{},"body":{"controllers/AuthController.html":{},"controllers/BankAccountController.html":{}}}],["validator",{"_index":486,"title":{},"body":{"classes/CreateBankAccountDTO.html":{},"classes/CreateUserDTO.html":{},"dependencies.html":{}}}],["valitation",{"_index":382,"title":{},"body":{"injectables/BankAccountService.html":{}}}],["value",{"_index":748,"title":{},"body":{"classes/PlatformInterest.html":{},"injectables/StateUserService.html":{},"injectables/UserRoleService.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/variables.html":{}}}],["variable",{"_index":1568,"title":{},"body":{"coverage.html":{}}}],["variables",{"_index":1779,"title":{"miscellaneous/variables.html":{}},"body":{"miscellaneous/variables.html":{}}}],["venezuela",{"_index":1851,"title":{},"body":{"miscellaneous/variables.html":{}}}],["verification",{"_index":563,"title":{},"body":{"controllers/ExampleController.html":{},"injectables/TransactionService.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/variables.html":{}}}],["verification_transaction_creation",{"_index":1696,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["verificationtransaction",{"_index":1356,"title":{},"body":{"injectables/TransactionService.html":{}}}],["verify",{"_index":361,"title":{},"body":{"injectables/BankAccountService.html":{}}}],["verifying",{"_index":1697,"title":{},"body":{"miscellaneous/enumerations.html":{},"miscellaneous/variables.html":{}}}],["void",{"_index":1629,"title":{},"body":{"interfaces/createOptionsParams.html":{},"miscellaneous/functions.html":{}}}],["watch",{"_index":1733,"title":{},"body":{"index.html":{}}}],["website",{"_index":1764,"title":{},"body":{"index.html":{}}}],["welcome",{"_index":1688,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["wells",{"_index":1808,"title":{},"body":{"miscellaneous/variables.html":{}}}],["where(`admin.email",{"_index":1388,"title":{},"body":{"injectables/UserAdministratorService.html":{}}}],["where(`client.email",{"_index":1447,"title":{},"body":{"injectables/UserClientService.html":{}}}],["winston",{"_index":40,"title":{},"body":{"modules/AppModule.html":{},"controllers/AuthController.html":{},"injectables/AuthService.html":{},"controllers/BankAccountController.html":{},"injectables/BankAccountService.html":{},"controllers/ExampleController.html":{},"injectables/JwtStrategy.html":{},"injectables/MailsService.html":{},"guards/RolesGuard.html":{},"injectables/StateBankAccountService.html":{},"injectables/TransactionService.html":{},"injectables/UserClientService.html":{},"controllers/UserController.html":{},"interfaces/createOptionsParams.html":{},"dependencies.html":{}}}],["winston.format.colorize",{"_index":1842,"title":{},"body":{"miscellaneous/variables.html":{}}}],["winston.format.combine",{"_index":1840,"title":{},"body":{"miscellaneous/variables.html":{}}}],["winston.format.printf(msg",{"_index":1843,"title":{},"body":{"miscellaneous/variables.html":{}}}],["winston.format.simple",{"_index":1838,"title":{},"body":{"miscellaneous/variables.html":{}}}],["winston.format.splat",{"_index":1841,"title":{},"body":{"miscellaneous/variables.html":{}}}],["winston.format.timestamp",{"_index":1839,"title":{},"body":{"miscellaneous/variables.html":{}}}],["winston.transports.console",{"_index":1619,"title":{},"body":{"interfaces/createOptionsParams.html":{}}}],["winston.transports.file",{"_index":1622,"title":{},"body":{"interfaces/createOptionsParams.html":{}}}],["winston_module_provider",{"_index":106,"title":{},"body":{"controllers/AuthController.html":{},"injectables/AuthService.html":{},"controllers/BankAccountController.html":{},"injectables/BankAccountService.html":{},"controllers/ExampleController.html":{},"injectables/JwtStrategy.html":{},"injectables/MailsService.html":{},"guards/RolesGuard.html":{},"injectables/StateBankAccountService.html":{},"injectables/TransactionService.html":{},"injectables/UserClientService.html":{},"controllers/UserController.html":{}}}],["winstonmodule",{"_index":39,"title":{},"body":{"modules/AppModule.html":{}}}],["winstonmodule.forroot(createoptions",{"_index":64,"title":{},"body":{"modules/AppModule.html":{}}}],["winstonmoduleoptions",{"_index":1611,"title":{},"body":{"interfaces/createOptionsParams.html":{},"miscellaneous/functions.html":{}}}],["withdraw",{"_index":1706,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["withdrawal",{"_index":1692,"title":{},"body":{"miscellaneous/enumerations.html":{},"miscellaneous/variables.html":{}}}],["without",{"_index":558,"title":{},"body":{"controllers/ExampleController.html":{}}}],["you'd",{"_index":1754,"title":{},"body":{"index.html":{}}}],["zoom",{"_index":22,"title":{},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/BankAccountModule.html":{},"modules/BankSeederModule.html":{},"modules/CountrySeederModule.html":{},"modules/ExampleModule.html":{},"modules/LanguageModule.html":{},"modules/LanguageSeederModule.html":{},"modules/MailsModule.html":{},"modules/ManagementModule.html":{},"modules/PlatformInterestSeederModule.html":{},"modules/PointsConversionSeederModule.html":{},"modules/RoleSeederModule.html":{},"modules/SeederModule.html":{},"modules/StatesSeederModule.html":{},"modules/SuscriptionSeederModule.html":{},"modules/ThirdPartyInterestSeederModule.html":{},"modules/TransactionModule.html":{},"modules/UserModule.html":{},"overview.html":{}}}]],"pipeline":["stemmer"]},
    "store": {"modules/AppModule.html":{"url":"modules/AppModule.html","title":"module - AppModule","body":"\n                   \n\n\n\n\n    Modules\n    AppModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_AppModule\n\n\n\ncluster_AppModule_imports\n\n\n\n\nAuthModule\n\nAuthModule\n\n\n\nAppModule\n\nAppModule\n\nAppModule -->\n\nAuthModule->AppModule\n\n\n\n\n\nBankAccountModule\n\nBankAccountModule\n\nAppModule -->\n\nBankAccountModule->AppModule\n\n\n\n\n\nDatabaseModule\n\nDatabaseModule\n\nAppModule -->\n\nDatabaseModule->AppModule\n\n\n\n\n\nExampleModule\n\nExampleModule\n\nAppModule -->\n\nExampleModule->AppModule\n\n\n\n\n\nLanguageModule\n\nLanguageModule\n\nAppModule -->\n\nLanguageModule->AppModule\n\n\n\n\n\nMailsModule\n\nMailsModule\n\nAppModule -->\n\nMailsModule->AppModule\n\n\n\n\n\nManagementModule\n\nManagementModule\n\nAppModule -->\n\nManagementModule->AppModule\n\n\n\n\n\nSuscriptionModule\n\nSuscriptionModule\n\nAppModule -->\n\nSuscriptionModule->AppModule\n\n\n\n\n\nTransactionModule\n\nTransactionModule\n\nAppModule -->\n\nTransactionModule->AppModule\n\n\n\n\n\nUserModule\n\nUserModule\n\nAppModule -->\n\nUserModule->AppModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app.module.ts\n        \n\n\n\n\n        \n            \n                \n                    Imports\n                    \n                        \n                            AuthModule\n                        \n                        \n                            BankAccountModule\n                        \n                        \n                            DatabaseModule\n                        \n                        \n                            ExampleModule\n                        \n                        \n                            LanguageModule\n                        \n                        \n                            MailsModule\n                        \n                        \n                            ManagementModule\n                        \n                        \n                            SuscriptionModule\n                        \n                        \n                            TransactionModule\n                        \n                        \n                            UserModule\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        // NEST CORE\nimport { Module } from '@nestjs/common';\nimport { ConfigModule } from '@nestjs/config';\n\n// CONFIGURATION\nimport configuration from 'config/configuration';\n\n// LOGGER\nimport { WinstonModule } from 'nest-winston';\nimport createOptions from './logger/winston/winston-config';\n\n// MODULES\nimport { AuthModule } from './modules/auth/auth.module';\nimport { BankAccountModule } from './modules/bank-account/bank-account.module';\nimport { DatabaseModule } from './database/database.module';\nimport { ExampleModule } from './modules/example/example.module';\nimport { LanguageModule } from './modules/language/language.module';\nimport { MailsModule } from './modules/mails/mails.module';\nimport { ManagementModule } from './modules/management/management.module';\nimport { SuscriptionModule } from './modules/suscription/suscription.module';\nimport { TransactionModule } from './modules/transaction/transaction.module';\nimport { UserModule } from './modules/user/user.module';\n\n@Module({\n  imports: [\n    ConfigModule.forRoot({\n      isGlobal: true,\n      envFilePath: !process.env.NODE_ENV\n        ? ['.env.development', '.env']\n        : ['.env', '.env.development'],\n      load: [configuration],\n    }),\n    AuthModule,\n    BankAccountModule,\n    DatabaseModule,\n    ExampleModule,\n    LanguageModule,\n    MailsModule,\n    ManagementModule,\n    SuscriptionModule,\n    TransactionModule,\n    UserModule,\n    WinstonModule.forRoot(createOptions({ fileName: 'petromiles-global.log' })),\n  ],\n})\nexport class AppModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"controllers/AuthController.html":{"url":"controllers/AuthController.html","title":"controller - AuthController","body":"\n                   \n\n\n\n\n\n\n  Controllers\n  AuthController\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/modules/auth/auth.controller.ts\n        \n\n            \n                Prefix\n            \n            \n                auth\n            \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                login\n                            \n                            \n                                    Async\n                                signUpClient\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            login\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    login(credentials: App.Auth.LoginRequest)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Post('login')\n                \n            \n\n            \n                \n                    Defined in src/modules/auth/auth.controller.ts:34\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    credentials\n                                    \n                                            App.Auth.LoginRequest\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     {}\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            signUpClient\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    signUpClient(user: CreateUserDTO)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @UseInterceptors(TransformSignUpInterceptor)@Post('signup')\n                \n            \n\n            \n                \n                    Defined in src/modules/auth/auth.controller.ts:26\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    user\n                                    \n                                                CreateUserDTO\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     {}\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n\n\n    \n        import {\n  Controller,\n  Post,\n  Body,\n  ValidationPipe,\n  UseInterceptors,\n} from '@nestjs/common';\nimport { Inject } from '@nestjs/common';\n\nimport { WINSTON_MODULE_PROVIDER } from 'nest-winston';\nimport { Logger } from 'winston';\n\nimport { AuthService } from './auth.service';\nimport { CreateUserDTO } from '../user/dto/create-user.dto';\nimport { TransformSignUpInterceptor } from './interceptors/transform-sign-up.interceptor';\n\n@Controller('auth')\nexport class AuthController {\n  constructor(\n    @Inject(WINSTON_MODULE_PROVIDER) private readonly logger: Logger,\n    private authService: AuthService,\n  ) {}\n\n  @UseInterceptors(TransformSignUpInterceptor)\n  @Post('signup')\n  async signUpClient(@Body(ValidationPipe) user: CreateUserDTO) {\n    this.logger.http(\n      `[AUTH] Client with the email: ${user.email} is starting the sign up process`,\n    );\n    return await this.authService.createUserClient(user);\n  }\n\n  @Post('login')\n  async login(@Body() credentials: App.Auth.LoginRequest) {\n    this.logger.http(\n      `[AUTH] The user with the email: ${credentials.email} is starting the login process`,\n    );\n    const user = await this.authService.validateUser(credentials);\n    this.logger.verbose(`[AUTH] The user ${credentials.email} is logged in`);\n    return user;\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/AuthModule.html":{"url":"modules/AuthModule.html","title":"module - AuthModule","body":"\n                   \n\n\n\n\n    Modules\n    AuthModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_AuthModule\n\n\n\ncluster_AuthModule_imports\n\n\n\ncluster_AuthModule_providers\n\n\n\n\nMailsModule\n\nMailsModule\n\n\n\nAuthModule\n\nAuthModule\n\nAuthModule -->\n\nMailsModule->AuthModule\n\n\n\n\n\nManagementModule\n\nManagementModule\n\nAuthModule -->\n\nManagementModule->AuthModule\n\n\n\n\n\nUserModule\n\nUserModule\n\nAuthModule -->\n\nUserModule->AuthModule\n\n\n\n\n\nAuthService\n\nAuthService\n\nAuthModule -->\n\nAuthService->AuthModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/modules/auth/auth.module.ts\n        \n\n\n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            AuthService\n                        \n                    \n                \n                \n                    Controllers\n                    \n                        \n                            AuthController\n                        \n                    \n                \n                \n                    Imports\n                    \n                        \n                            MailsModule\n                        \n                        \n                            ManagementModule\n                        \n                        \n                            UserModule\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { Module } from '@nestjs/common';\n\n// MODULES\nimport { JwtModule } from '@nestjs/jwt';\nimport { ConfigModule, ConfigService } from '@nestjs/config';\nimport { PassportModule } from '@nestjs/passport';\nimport { ManagementModule } from '../management/management.module';\n\n// CONTROLLER\nimport { AuthController } from './auth.controller';\nimport { MailsModule } from '../mails/mails.module';\nimport { UserModule } from '../user/user.module';\n\n// SERVICES\nimport { AuthService } from './auth.service';\n\n@Module({\n  imports: [\n    MailsModule,\n    UserModule,\n    ManagementModule,\n    PassportModule,\n    ConfigModule,\n    JwtModule.registerAsync({\n      imports: [ConfigModule],\n      inject: [ConfigService],\n      useFactory: (config: ConfigService) => ({\n        secret: config.get('jwt.secret'),\n        signOptions: {\n          expiresIn: config.get('jwt.expiresIn'),\n        },\n      }),\n    }),\n  ],\n  controllers: [AuthController],\n  providers: [AuthService],\n  exports: [PassportModule],\n})\nexport class AuthModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/AuthService.html":{"url":"injectables/AuthService.html","title":"injectable - AuthService","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  AuthService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/modules/auth/auth.service.ts\n        \n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                createToken\n                            \n                            \n                                    Async\n                                createUserClient\n                            \n                            \n                                    Private\n                                    Async\n                                createWelcomeEmail\n                            \n                            \n                                    Async\n                                hashPassword\n                            \n                            \n                                    Async\n                                validateUser\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(logger: Logger, userClientService: UserClientService, jwtService: JwtService, mailsService: MailsService, configService: ConfigService, userService: UserService)\n                    \n                \n                        \n                            \n                                Defined in src/modules/auth/auth.service.ts:17\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        logger\n                                                  \n                                                        \n                                                                    Logger\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        userClientService\n                                                  \n                                                        \n                                                                        UserClientService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        jwtService\n                                                  \n                                                        \n                                                                    JwtService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        mailsService\n                                                  \n                                                        \n                                                                        MailsService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        configService\n                                                  \n                                                        \n                                                                    ConfigService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        userService\n                                                  \n                                                        \n                                                                        UserService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Private\n                            createToken\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    createToken(email: string, role: Role)\n                \n            \n\n\n            \n                \n                    Defined in src/modules/auth/auth.service.ts:82\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    email\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    role\n                                    \n                                                Role\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            createUserClient\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    createUserClient(user: CreateUserDTO)\n                \n            \n\n\n            \n                \n                    Defined in src/modules/auth/auth.service.ts:27\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    user\n                                    \n                                                CreateUserDTO\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Private\n                            Async\n                            createWelcomeEmail\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    createWelcomeEmail(email, name)\n                \n            \n\n\n            \n                \n                    Defined in src/modules/auth/auth.service.ts:87\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                \n                            \n                            \n                                \n                                    email\n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    name\n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            hashPassword\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    hashPassword(password: string, salt: string)\n                \n            \n\n\n            \n                \n                    Defined in src/modules/auth/auth.service.ts:98\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    password\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    salt\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            validateUser\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    validateUser(credentials: App.Auth.LoginRequest)\n                \n            \n\n\n            \n                \n                    Defined in src/modules/auth/auth.service.ts:45\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    credentials\n                                    \n                                            App.Auth.LoginRequest\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { ConfigService } from '@nestjs/config';\nimport { Injectable, UnauthorizedException, Inject } from '@nestjs/common';\nimport { JwtService } from '@nestjs/jwt';\n\nimport * as bcrypt from 'bcrypt';\nimport { Logger } from 'winston';\nimport { WINSTON_MODULE_PROVIDER } from 'nest-winston';\n\nimport { Role } from 'src/modules/management/role/role.enum';\nimport { CreateUserDTO } from '../user/dto/create-user.dto';\nimport { UserClientService } from '../user/user-client/user-client.service';\nimport { MailsService } from '../mails/mails.service';\nimport { UserService } from '../user/user.service';\nimport { MailsSubject } from '../mails/mails.enum';\n\n@Injectable()\nexport class AuthService {\n  constructor(\n    @Inject(WINSTON_MODULE_PROVIDER) private logger: Logger,\n    private userClientService: UserClientService,\n    private jwtService: JwtService,\n    private mailsService: MailsService,\n    private configService: ConfigService,\n    private userService: UserService,\n  ) {}\n\n  async createUserClient(user: CreateUserDTO): Promise {\n    const createdUser = await this.userClientService.createUser(user);\n\n    const token = this.createToken(createdUser.user.email, Role.CLIENT);\n\n    this.createWelcomeEmail(\n      createdUser.user.email,\n      createdUser.userDetails.firstName,\n    );\n\n    return {\n      email: createdUser.user.email,\n      userDetails: createdUser.userDetails,\n      role: Role.CLIENT,\n      token,\n    };\n  }\n\n  async validateUser(\n    credentials: App.Auth.LoginRequest,\n  ): Promise {\n    const { email, password, role } = credentials;\n    const info = await this.userService.getUserByEmail(credentials);\n\n    if (info) {\n      const { user, userDetails } = info;\n      const result = {\n        email,\n        userDetails,\n        role,\n        token: this.createToken(email, role),\n      };\n\n      // If the user didn't sign up with email and password\n      if (!info.user.password) {\n        return result;\n      }\n\n      const passHash = await this.hashPassword(password, user.salt);\n      if (user && user.password === passHash) {\n        return result;\n      } else {\n        this.logger.error(`[AUTH] Email or password incorrect`);\n        throw new UnauthorizedException('Email or password incorrect');\n      }\n    }\n\n    this.logger.error(\n      `[AUTH] The user ${email} was not found or user is not active`,\n    );\n    throw new UnauthorizedException(\n      'The user was not found or user is not active',\n    );\n  }\n\n  private createToken(email: string, role: Role) {\n    const payload: App.Auth.JWTPayload = { email, role };\n    return this.jwtService.sign(payload);\n  }\n\n  private async createWelcomeEmail(email, name) {\n    await this.mailsService.sendEmail(\n      email,\n      MailsSubject.WELCOME,\n      this.configService.get('mails.sendgrid.templates.welcome'),\n      {\n        user: name,\n      },\n    );\n  }\n\n  async hashPassword(password: string, salt: string): Promise {\n    if (!password) {\n      this.logger.error(\n        `[AUTH] The user is a federated user, so needs a password`,\n      );\n      throw new UnauthorizedException('Email or password incorrect');\n    }\n\n    return bcrypt.hash(password, salt);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/Bank.html":{"url":"classes/Bank.html","title":"class - Bank","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  Bank\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/modules/bank-account/bank/bank.entity.ts\n        \n\n\n            \n                Extends\n            \n            \n                    BaseEntity\n            \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                country\n                            \n                            \n                                idBank\n                            \n                            \n                                name\n                            \n                            \n                                routingNumber\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            country\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         Country\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @ManyToOne(undefined, undefined, {nullable: true})@JoinColumn({name: 'fk_country'})\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/modules/bank-account/bank/bank.entity.ts:27\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            idBank\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         number\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @PrimaryGeneratedColumn()\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/modules/bank-account/bank/bank.entity.ts:16\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            name\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @Column()\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/modules/bank-account/bank/bank.entity.ts:19\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            routingNumber\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         RoutingNumber\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @OneToMany(undefined, undefined, {nullable: true})\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/modules/bank-account/bank/bank.entity.ts:34\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { Country } from '../../management/country/country.entity';\nimport { RoutingNumber } from '../routing-number/routing-number.entity';\nimport {\n  BaseEntity,\n  Entity,\n  PrimaryGeneratedColumn,\n  Column,\n  ManyToOne,\n  JoinColumn,\n  OneToMany,\n} from 'typeorm';\n\n@Entity()\nexport class Bank extends BaseEntity {\n  @PrimaryGeneratedColumn()\n  idBank: number;\n\n  @Column()\n  name: string;\n\n  @ManyToOne(\n    type => Country,\n    country => country.idCountry,\n    { nullable: true },\n  )\n  @JoinColumn({ name: 'fk_country' })\n  country: Country;\n\n  @OneToMany(\n    type => RoutingNumber,\n    routingNumber => routingNumber.idRoutingNumber,\n    { nullable: true },\n  )\n  routingNumber: RoutingNumber;\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/BankAccount.html":{"url":"classes/BankAccount.html","title":"class - BankAccount","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  BankAccount\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/modules/bank-account/bank-account/bank-account.entity.ts\n        \n\n\n            \n                Extends\n            \n            \n                    BaseEntity\n            \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                accountNumber\n                            \n                            \n                                checkNumber\n                            \n                            \n                                clientBankAccount\n                            \n                            \n                                idBankAccount\n                            \n                            \n                                    Optional\n                                primary\n                            \n                            \n                                routingNumber\n                            \n                            \n                                type\n                            \n                            \n                                userDetails\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            accountNumber\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @Column()\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/modules/bank-account/bank-account/bank-account.entity.ts:20\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            checkNumber\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @Column()\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/modules/bank-account/bank-account/bank-account.entity.ts:23\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            clientBankAccount\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         ClientBankAccount\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @OneToMany(undefined, undefined, {nullable: true})\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/modules/bank-account/bank-account/bank-account.entity.ts:39\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            idBankAccount\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         number\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @PrimaryGeneratedColumn()\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/modules/bank-account/bank-account/bank-account.entity.ts:17\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Optional\n                            primary\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @Column({nullable: true})\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/modules/bank-account/bank-account/bank-account.entity.ts:29\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            routingNumber\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         number\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @Column()\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/modules/bank-account/bank-account/bank-account.entity.ts:32\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            type\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @Column()\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/modules/bank-account/bank-account/bank-account.entity.ts:26\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            userDetails\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         UserDetails\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @ManyToOne(undefined, undefined, {nullable: true})@JoinColumn({name: 'fk_person_details'})\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/modules/bank-account/bank-account/bank-account.entity.ts:47\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { ClientBankAccount } from '../client-bank-account/client-bank-account.entity';\nimport { UserDetails } from '../../user/user-details/user-details.entity';\nimport {\n  BaseEntity,\n  Entity,\n  PrimaryGeneratedColumn,\n  Column,\n  ManyToOne,\n  JoinColumn,\n  OneToMany,\n  OneToOne,\n} from 'typeorm';\n\n@Entity()\nexport class BankAccount extends BaseEntity {\n  @PrimaryGeneratedColumn()\n  idBankAccount: number;\n\n  @Column()\n  accountNumber: string;\n\n  @Column()\n  checkNumber: string;\n\n  @Column()\n  type: string;\n\n  @Column({ nullable: true })\n  primary?: string;\n\n  @Column()\n  routingNumber: number;\n\n  @OneToMany(\n    type => ClientBankAccount,\n    clientBankAccount => clientBankAccount.idClientBankAccount,\n    { nullable: true },\n  )\n  clientBankAccount: ClientBankAccount;\n\n  @ManyToOne(\n    type => UserDetails,\n    userDetails => userDetails.idUserDetails,\n    { nullable: true },\n  )\n  @JoinColumn({ name: 'fk_person_details' })\n  userDetails: UserDetails;\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"controllers/BankAccountController.html":{"url":"controllers/BankAccountController.html","title":"controller - BankAccountController","body":"\n                   \n\n\n\n\n\n\n  Controllers\n  BankAccountController\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/modules/bank-account/bank-account.controller.ts\n        \n\n            \n                Prefix\n            \n            \n                bank-account\n            \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                createClientBankAccount\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            createClientBankAccount\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    createClientBankAccount(bankAccount: CreateBankAccountDTO, user)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Roles()@UseGuards(RolesGuard)@Post()\n                \n            \n\n            \n                \n                    Defined in src/modules/bank-account/bank-account.controller.ts:31\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    bankAccount\n                                    \n                                                CreateBankAccountDTO\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    user\n                                    \n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     {}\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n\n\n    \n        import {\n  Controller,\n  Post,\n  ValidationPipe,\n  Body,\n  UseGuards,\n} from '@nestjs/common';\nimport { Inject } from '@nestjs/common';\n\nimport { WINSTON_MODULE_PROVIDER } from 'nest-winston';\nimport { Logger } from 'winston';\n\nimport { CreateBankAccountDTO } from './bank-account/dto/createBankAccount.dto';\nimport { ClientBankAccountService } from './client-bank-account/client-bank-account.service';\nimport { GetUser } from '../auth/decorators/get-user.decorator';\nimport { Roles } from '../auth/decorators/roles.decorator';\nimport { AuthGuard } from '@nestjs/passport';\nimport { RolesGuard } from '../auth/guards/roles.guard';\n\n@UseGuards(AuthGuard('jwt'))\n@Controller('bank-account')\nexport class BankAccountController {\n  constructor(\n    private clientBankAccountService: ClientBankAccountService,\n    @Inject(WINSTON_MODULE_PROVIDER) private readonly logger: Logger,\n  ) {}\n\n  @Roles()\n  @UseGuards(RolesGuard)\n  @Post()\n  async createClientBankAccount(\n    @Body(ValidationPipe) bankAccount: CreateBankAccountDTO,\n    @GetUser() user,\n  ) {\n    this.logger.http(\n      '[BANK_ACCOUNT] Creating bank account for the user: %s',\n      user.email,\n    );\n\n    const clientBankAccount = await this.clientBankAccountService.createClientBankAccount(\n      user.email,\n      bankAccount,\n    );\n\n    this.logger.http(\n      '[BANK_ACCOUNT] Bank account successfully created',\n      user.email,\n    );\n\n    const { bankAccount: bankAccountCreated } = clientBankAccount;\n    return bankAccountCreated;\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/BankAccountModule.html":{"url":"modules/BankAccountModule.html","title":"module - BankAccountModule","body":"\n                   \n\n\n\n\n    Modules\n    BankAccountModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_BankAccountModule\n\n\n\ncluster_BankAccountModule_imports\n\n\n\ncluster_BankAccountModule_exports\n\n\n\ncluster_BankAccountModule_providers\n\n\n\n\nManagementModule\n\nManagementModule\n\n\n\nBankAccountModule\n\nBankAccountModule\n\nBankAccountModule -->\n\nManagementModule->BankAccountModule\n\n\n\n\n\nTransactionModule\n\nTransactionModule\n\nBankAccountModule -->\n\nTransactionModule->BankAccountModule\n\n\n\n\n\nUserModule\n\nUserModule\n\nBankAccountModule -->\n\nUserModule->BankAccountModule\n\n\n\n\n\nBankAccountService \n\nBankAccountService \n\nBankAccountService  -->\n\nBankAccountModule->BankAccountService \n\n\n\n\n\nClientBankAccountService \n\nClientBankAccountService \n\nClientBankAccountService  -->\n\nBankAccountModule->ClientBankAccountService \n\n\n\n\n\nStateBankAccountService \n\nStateBankAccountService \n\nStateBankAccountService  -->\n\nBankAccountModule->StateBankAccountService \n\n\n\n\n\nBankAccountService\n\nBankAccountService\n\nBankAccountModule -->\n\nBankAccountService->BankAccountModule\n\n\n\n\n\nClientBankAccountService\n\nClientBankAccountService\n\nBankAccountModule -->\n\nClientBankAccountService->BankAccountModule\n\n\n\n\n\nStateBankAccountService\n\nStateBankAccountService\n\nBankAccountModule -->\n\nStateBankAccountService->BankAccountModule\n\n\n\n\n\nStateService\n\nStateService\n\nBankAccountModule -->\n\nStateService->BankAccountModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/modules/bank-account/bank-account.module.ts\n        \n\n\n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            BankAccountService\n                        \n                        \n                            ClientBankAccountService\n                        \n                        \n                            StateBankAccountService\n                        \n                        \n                            StateService\n                        \n                    \n                \n                \n                    Controllers\n                    \n                        \n                            BankAccountController\n                        \n                    \n                \n                \n                    Imports\n                    \n                        \n                            ManagementModule\n                        \n                        \n                            TransactionModule\n                        \n                        \n                            UserModule\n                        \n                    \n                \n                \n                    Exports\n                    \n                        \n                            BankAccountService\n                        \n                        \n                            ClientBankAccountService\n                        \n                        \n                            StateBankAccountService\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { Module } from '@nestjs/common';\nimport { TypeOrmModule } from '@nestjs/typeorm';\n\n// MODULES\nimport { UserModule } from '../user/user.module';\nimport { TransactionModule } from '../transaction/transaction.module';\nimport { ManagementModule } from '../management/management.module';\n\n// CONTROLLER\nimport { BankAccountController } from './bank-account.controller';\n\n// SERVICES\nimport { BankAccountService } from './bank-account.service';\nimport { StateBankAccountService } from './state-bank-account/state-bank-account.service';\nimport { StateService } from '../management/state/state.service';\nimport { ClientBankAccountService } from './client-bank-account/client-bank-account.service';\n\n// ENTITIES\nimport { BankAccount } from './bank-account/bank-account.entity';\nimport { StateBankAccount } from './state-bank-account/state-bank-account.entity';\nimport { ClientBankAccount } from './client-bank-account/client-bank-account.entity';\n\n@Module({\n  imports: [\n    TypeOrmModule.forFeature([\n      BankAccount,\n      StateBankAccount,\n      ClientBankAccount,\n    ]),\n    ManagementModule,\n    TransactionModule,\n    UserModule,\n  ],\n  providers: [\n    BankAccountService,\n    StateBankAccountService,\n    ClientBankAccountService,\n    StateService,\n  ],\n  exports: [\n    BankAccountService,\n    StateBankAccountService,\n    ClientBankAccountService,\n  ],\n  controllers: [BankAccountController],\n})\nexport class BankAccountModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/BankAccountService.html":{"url":"injectables/BankAccountService.html","title":"injectable - BankAccountService","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  BankAccountService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/modules/bank-account/bank-account.service.ts\n        \n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                createBankAccount\n                            \n                            \n                                validate\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(bankAccountRepository: Repository, userDetailsService: UserDetailsService, logger: Logger)\n                    \n                \n                        \n                            \n                                Defined in src/modules/bank-account/bank-account.service.ts:13\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        bankAccountRepository\n                                                  \n                                                        \n                                                                    Repository\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        userDetailsService\n                                                  \n                                                        \n                                                                        UserDetailsService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        logger\n                                                  \n                                                        \n                                                                    Logger\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            createBankAccount\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    createBankAccount(options)\n                \n            \n\n\n            \n                \n                    Defined in src/modules/bank-account/bank-account.service.ts:21\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                \n                            \n                            \n                                \n                                    options\n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            validate\n                        \n                        \n                    \n                \n            \n            \n                \nvalidate(routingNumber)\n                \n            \n\n\n            \n                \n                    Defined in src/modules/bank-account/bank-account.service.ts:50\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                \n                            \n                            \n                                \n                                    routingNumber\n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         boolean\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable, Inject, BadRequestException } from '@nestjs/common';\nimport { InjectRepository } from '@nestjs/typeorm';\n\nimport { WINSTON_MODULE_PROVIDER } from 'nest-winston';\nimport { Logger } from 'winston';\nimport { Repository } from 'typeorm';\n\nimport { BankAccount } from './bank-account/bank-account.entity';\nimport { UserDetails } from '../user/user-details/user-details.entity';\nimport { UserDetailsService } from '../user/user-details/user-details.service';\n\n@Injectable()\nexport class BankAccountService {\n  constructor(\n    @InjectRepository(BankAccount)\n    private bankAccountRepository: Repository,\n    private userDetailsService: UserDetailsService,\n    @Inject(WINSTON_MODULE_PROVIDER) private readonly logger: Logger,\n  ) {}\n\n  async createBankAccount(options): Promise {\n    if (!this.validate(options.routingNumber))\n      throw new BadRequestException('Invalid Routing Number');\n\n    //  Verify if the account is of a Petromiles User. If it isn't, create the person in the entity UserDetails\n    let userOwner: UserDetails = null;\n    if (options.userDetails) {\n      userOwner = await this.userDetailsService.createClientDetails(\n        options.userDetails,\n      );\n    }\n\n    const account = new BankAccount();\n    account.routingNumber = options.routingNumber;\n    account.userDetails = userOwner;\n    account.accountNumber = options.accountNumber;\n    account.type = options.type;\n    account.checkNumber = options.checkNumber;\n\n    const bankAccount = await this.bankAccountRepository.create(account).save();\n\n    this.logger.silly(\n      '[BANK_ACCOUNT] Bank Account ID: %s is created',\n      bankAccount.idBankAccount,\n    );\n    return bankAccount;\n  }\n\n  // Valitation for american bank accounts\n  validate(routingNumber) {\n    const digits = routingNumber.toString();\n    let n = 0;\n    for (let i = 0; i \n    \n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/BankSeederModule.html":{"url":"modules/BankSeederModule.html","title":"module - BankSeederModule","body":"\n                   \n\n\n\n\n    Modules\n    BankSeederModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_BankSeederModule\n\n\n\ncluster_BankSeederModule_exports\n\n\n\ncluster_BankSeederModule_providers\n\n\n\n\nBankSeederService \n\nBankSeederService \n\n\n\nBankSeederModule\n\nBankSeederModule\n\nBankSeederService  -->\n\nBankSeederModule->BankSeederService \n\n\n\n\n\nBankSeederService\n\nBankSeederService\n\nBankSeederModule -->\n\nBankSeederService->BankSeederModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/database/seeders/bank/bank.module.ts\n        \n\n\n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            BankSeederService\n                        \n                    \n                \n                \n                    Exports\n                    \n                        \n                            BankSeederService\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { Module } from '@nestjs/common';\nimport { TypeOrmModule } from '@nestjs/typeorm';\nimport { Bank } from '../../../modules/bank-account/bank/bank.entity';\nimport { BankSeederService } from './bank.service';\n\n@Module({\n  imports: [TypeOrmModule.forFeature([Bank])],\n  providers: [BankSeederService],\n  exports: [BankSeederService],\n})\nexport class BankSeederModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/BankSeederService.html":{"url":"injectables/BankSeederService.html","title":"injectable - BankSeederService","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  BankSeederService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/database/seeders/bank/bank.service.ts\n        \n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                createBank\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(bankRepository: Repository)\n                    \n                \n                        \n                            \n                                Defined in src/database/seeders/bank/bank.service.ts:9\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        bankRepository\n                                                  \n                                                        \n                                                                        Repository\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            createBank\n                        \n                        \n                    \n                \n            \n            \n                \ncreateBank()\n                \n            \n\n\n            \n                \n                    Defined in src/database/seeders/bank/bank.service.ts:15\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :     Promise[]\n\n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { InjectRepository } from '@nestjs/typeorm';\nimport { Injectable } from '@nestjs/common';\nimport { Repository, InsertResult } from 'typeorm';\n\nimport { BANK } from './bank.data';\nimport { Bank } from 'src/modules/bank-account/bank/bank.entity';\n\n@Injectable()\nexport class BankSeederService {\n  constructor(\n    @InjectRepository(Bank)\n    private readonly bankRepository: Repository,\n  ) {}\n\n  createBank(): Promise[] {\n    return BANK.map(bank => this.bankRepository.insert(bank));\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/ClientBankAccount.html":{"url":"classes/ClientBankAccount.html","title":"class - ClientBankAccount","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  ClientBankAccount\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/modules/bank-account/client-bank-account/client-bank-account.entity.ts\n        \n\n\n            \n                Extends\n            \n            \n                    BaseEntity\n            \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                bankAccount\n                            \n                            \n                                idClientBankAccount\n                            \n                            \n                                stateBankAccount\n                            \n                            \n                                transaction\n                            \n                            \n                                userClient\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            bankAccount\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         BankAccount\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @ManyToOne(undefined, undefined, {nullable: false})@JoinColumn({name: 'fk_bank_account'})\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/modules/bank-account/client-bank-account/client-bank-account.entity.ts:35\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            idClientBankAccount\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         number\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @PrimaryGeneratedColumn()\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/modules/bank-account/client-bank-account/client-bank-account.entity.ts:19\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            stateBankAccount\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         StateBankAccount\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @OneToMany(undefined, undefined, {nullable: false})\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/modules/bank-account/client-bank-account/client-bank-account.entity.ts:49\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            transaction\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         Transaction\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @OneToMany(undefined, undefined, {nullable: true})\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/modules/bank-account/client-bank-account/client-bank-account.entity.ts:42\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            userClient\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         UserClient\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @ManyToOne(undefined, undefined, {nullable: false})@JoinColumn({name: 'fk_user_client'})\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/modules/bank-account/client-bank-account/client-bank-account.entity.ts:27\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import {\n  BaseEntity,\n  Entity,\n  PrimaryGeneratedColumn,\n  ManyToOne,\n  JoinColumn,\n  OneToMany,\n} from 'typeorm';\n\n// ENTITIES\nimport { UserClient } from '../../user/user-client/user-client.entity';\nimport { BankAccount } from '../bank-account/bank-account.entity';\nimport { Transaction } from '../../transaction/transaction/transaction.entity';\nimport { StateBankAccount } from '../state-bank-account/state-bank-account.entity';\n\n@Entity()\nexport class ClientBankAccount extends BaseEntity {\n  @PrimaryGeneratedColumn()\n  idClientBankAccount: number;\n\n  @ManyToOne(\n    type => UserClient,\n    userClient => userClient.idUserClient,\n    { nullable: false },\n  )\n  @JoinColumn({ name: 'fk_user_client' })\n  userClient: UserClient;\n\n  @ManyToOne(\n    type => BankAccount,\n    bankAccount => bankAccount.idBankAccount,\n    { nullable: false },\n  )\n  @JoinColumn({ name: 'fk_bank_account' })\n  bankAccount: BankAccount;\n\n  @OneToMany(\n    type => Transaction,\n    transaction => transaction.idTransaction,\n    { nullable: true },\n  )\n  transaction: Transaction;\n\n  @OneToMany(\n    type => StateBankAccount,\n    stateBankAccount => stateBankAccount.idStateBankAccount,\n    { nullable: false },\n  )\n  stateBankAccount: StateBankAccount;\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/ClientBankAccountService.html":{"url":"injectables/ClientBankAccountService.html","title":"injectable - ClientBankAccountService","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  ClientBankAccountService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/modules/bank-account/client-bank-account/client-bank-account.service.ts\n        \n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                createClientBankAccount\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(bankAccountService: BankAccountService, clientBankAccountRepository: Repository, stateBankAccountService: StateBankAccountService, userClientService: UserClientService, transactionService: TransactionService)\n                    \n                \n                        \n                            \n                                Defined in src/modules/bank-account/client-bank-account/client-bank-account.service.ts:17\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        bankAccountService\n                                                  \n                                                        \n                                                                        BankAccountService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        clientBankAccountRepository\n                                                  \n                                                        \n                                                                    Repository\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        stateBankAccountService\n                                                  \n                                                        \n                                                                        StateBankAccountService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        userClientService\n                                                  \n                                                        \n                                                                        UserClientService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        transactionService\n                                                  \n                                                        \n                                                                        TransactionService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            createClientBankAccount\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    createClientBankAccount(email, account)\n                \n            \n\n\n            \n                \n                    Defined in src/modules/bank-account/client-bank-account/client-bank-account.service.ts:27\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                \n                            \n                            \n                                \n                                    email\n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    account\n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@nestjs/common';\nimport { InjectRepository } from '@nestjs/typeorm';\n\nimport { Repository } from 'typeorm';\n\nimport { BankAccountService } from '../bank-account.service';\nimport { ClientBankAccount } from './client-bank-account.entity';\nimport { StateBankAccountService } from '../state-bank-account/state-bank-account.service';\nimport {\n  StateName,\n  StateDescription,\n} from 'src/modules/management/state/state.enum';\nimport { UserClientService } from '../../user/user-client/user-client.service';\nimport { TransactionService } from '../../transaction/transaction.service';\n\n@Injectable()\nexport class ClientBankAccountService {\n  constructor(\n    private bankAccountService: BankAccountService,\n    @InjectRepository(ClientBankAccount)\n    private clientBankAccountRepository: Repository,\n    private stateBankAccountService: StateBankAccountService,\n    private userClientService: UserClientService,\n    private transactionService: TransactionService,\n  ) {}\n\n  async createClientBankAccount(email, account): Promise {\n    const bankAccount = await this.bankAccountService.createBankAccount({\n      ...account,\n    });\n\n    const userClient = await this.userClientService.getActiveClient(email);\n\n    const clientBankAccount = await this.clientBankAccountRepository\n      .create({\n        bankAccount,\n        userClient,\n      })\n      .save();\n\n    await this.stateBankAccountService.createStateBankAccount(\n      StateName.VERIFYING,\n      clientBankAccount,\n      StateDescription.NEWLY_CREATED_ACCOUNT,\n    );\n\n    await this.transactionService.createVerificationTransaction(\n      clientBankAccount,\n    );\n\n    return clientBankAccount;\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/Country.html":{"url":"classes/Country.html","title":"class - Country","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  Country\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/modules/management/country/country.entity.ts\n        \n\n\n            \n                Extends\n            \n            \n                    BaseEntity\n            \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                bank\n                            \n                            \n                                idCountry\n                            \n                            \n                                name\n                            \n                            \n                                UserDetails\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            bank\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         Bank\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @OneToMany(undefined, undefined, {nullable: true})\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/modules/management/country/country.entity.ts:24\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            idCountry\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         number\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @PrimaryGeneratedColumn()\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/modules/management/country/country.entity.ts:14\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            name\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @Column({unique: true})\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/modules/management/country/country.entity.ts:17\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            UserDetails\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         UserDetails\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @OneToMany(undefined, undefined, {nullable: true})\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/modules/management/country/country.entity.ts:31\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import {\n  BaseEntity,\n  Entity,\n  PrimaryGeneratedColumn,\n  Column,\n  OneToMany,\n} from 'typeorm';\nimport { Bank } from '../../bank-account/bank/bank.entity';\nimport { UserDetails } from '../../user/user-details/user-details.entity';\n\n@Entity()\nexport class Country extends BaseEntity {\n  @PrimaryGeneratedColumn()\n  idCountry: number;\n\n  @Column({ unique: true })\n  name: string;\n\n  @OneToMany(\n    type => Bank,\n    bank => bank.idBank,\n    { nullable: true },\n  )\n  bank: Bank;\n\n  @OneToMany(\n    type => UserDetails,\n    UserDetails => UserDetails.idUserDetails,\n    { nullable: true },\n  )\n  UserDetails: UserDetails;\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/CountrySeederModule.html":{"url":"modules/CountrySeederModule.html","title":"module - CountrySeederModule","body":"\n                   \n\n\n\n\n    Modules\n    CountrySeederModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_CountrySeederModule\n\n\n\ncluster_CountrySeederModule_exports\n\n\n\ncluster_CountrySeederModule_providers\n\n\n\n\nCountrySeederService \n\nCountrySeederService \n\n\n\nCountrySeederModule\n\nCountrySeederModule\n\nCountrySeederService  -->\n\nCountrySeederModule->CountrySeederService \n\n\n\n\n\nCountrySeederService\n\nCountrySeederService\n\nCountrySeederModule -->\n\nCountrySeederService->CountrySeederModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/database/seeders/country/country.module.ts\n        \n\n\n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            CountrySeederService\n                        \n                    \n                \n                \n                    Exports\n                    \n                        \n                            CountrySeederService\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { Module } from '@nestjs/common';\nimport { TypeOrmModule } from '@nestjs/typeorm';\nimport { CountrySeederService } from './country.service';\nimport { Country } from '../../../modules/management/country/country.entity';\n\n@Module({\n  imports: [TypeOrmModule.forFeature([Country])],\n  providers: [CountrySeederService],\n  exports: [CountrySeederService],\n})\nexport class CountrySeederModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/CountrySeederService.html":{"url":"injectables/CountrySeederService.html","title":"injectable - CountrySeederService","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  CountrySeederService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/database/seeders/country/country.service.ts\n        \n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                createCountry\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(countryRepository: Repository)\n                    \n                \n                        \n                            \n                                Defined in src/database/seeders/country/country.service.ts:8\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        countryRepository\n                                                  \n                                                        \n                                                                        Repository\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            createCountry\n                        \n                        \n                    \n                \n            \n            \n                \ncreateCountry()\n                \n            \n\n\n            \n                \n                    Defined in src/database/seeders/country/country.service.ts:14\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :     Promise[]\n\n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { InjectRepository } from '@nestjs/typeorm';\nimport { Injectable } from '@nestjs/common';\nimport { Repository, InsertResult } from 'typeorm';\nimport { COUNTRIES } from './country.data';\nimport { Country } from '../../../modules/management/country/country.entity';\n\n@Injectable()\nexport class CountrySeederService {\n  constructor(\n    @InjectRepository(Country)\n    private readonly countryRepository: Repository,\n  ) {}\n\n  createCountry(): Promise[] {\n    return COUNTRIES.map(country => this.countryRepository.insert(country));\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/CreateBankAccountDTO.html":{"url":"classes/CreateBankAccountDTO.html","title":"class - CreateBankAccountDTO","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  CreateBankAccountDTO\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/modules/bank-account/bank-account/dto/createBankAccount.dto.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                accountNumber\n                            \n                            \n                                checkNumber\n                            \n                            \n                                routingNumber\n                            \n                            \n                                type\n                            \n                            \n                                userDetails\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            accountNumber\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         number\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @IsNotEmpty()\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/modules/bank-account/bank-account/dto/createBankAccount.dto.ts:13\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            checkNumber\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         number\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @IsNotEmpty()\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/modules/bank-account/bank-account/dto/createBankAccount.dto.ts:22\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            routingNumber\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @IsNotEmpty()\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/modules/bank-account/bank-account/dto/createBankAccount.dto.ts:16\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            type\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @IsNotEmpty()\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/modules/bank-account/bank-account/dto/createBankAccount.dto.ts:25\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            userDetails\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         UserDetails\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @IsOptional()\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/modules/bank-account/bank-account/dto/createBankAccount.dto.ts:19\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { UserDetails } from '../../../user/user-details/user-details.entity';\n\nimport {\n  IsNotEmpty,\n  IsOptional,\n  IsInt,\n  IsNumber,\n  MaxLength,\n  MinLength,\n} from 'class-validator';\nexport class CreateBankAccountDTO {\n  @IsNotEmpty()\n  accountNumber: number;\n\n  @IsNotEmpty()\n  routingNumber: string;\n\n  @IsOptional()\n  userDetails: UserDetails;\n\n  @IsNotEmpty()\n  checkNumber: number;\n\n  @IsNotEmpty()\n  type: string;\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/CreateUserDTO.html":{"url":"classes/CreateUserDTO.html","title":"class - CreateUserDTO","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  CreateUserDTO\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/modules/user/dto/create-user.dto.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Optional\n                                address\n                            \n                            \n                                    Optional\n                                birthdate\n                            \n                            \n                                email\n                            \n                            \n                                    Optional\n                                facebookToken\n                            \n                            \n                                firstName\n                            \n                            \n                                    Optional\n                                googleToken\n                            \n                            \n                                lastName\n                            \n                            \n                                    Optional\n                                middleName\n                            \n                            \n                                    Optional\n                                password\n                            \n                            \n                                    Optional\n                                phone\n                            \n                            \n                                    Optional\n                                photo\n                            \n                            \n                                    Optional\n                                salt\n                            \n                            \n                                    Optional\n                                secondLastName\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Optional\n                            address\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @IsString()@IsOptional()\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/modules/user/dto/create-user.dto.ts:51\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Optional\n                            birthdate\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         Date\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @IsOptional()\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/modules/user/dto/create-user.dto.ts:47\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            email\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @IsEmail()@IsNotEmpty()\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/modules/user/dto/create-user.dto.ts:11\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Optional\n                            facebookToken\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @IsString()@IsOptional()\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/modules/user/dto/create-user.dto.ts:32\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            firstName\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @IsNotEmpty()@IsString()\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/modules/user/dto/create-user.dto.ts:15\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Optional\n                            googleToken\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @IsString()@IsOptional()\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/modules/user/dto/create-user.dto.ts:36\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            lastName\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @IsNotEmpty()@IsString()\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/modules/user/dto/create-user.dto.ts:19\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Optional\n                            middleName\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @IsString()@IsOptional()\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/modules/user/dto/create-user.dto.ts:40\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Optional\n                            password\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @MinLength(8)@IsString()@IsOptional()\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/modules/user/dto/create-user.dto.ts:24\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Optional\n                            phone\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @IsString()@IsOptional()\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/modules/user/dto/create-user.dto.ts:55\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Optional\n                            photo\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @IsString()@IsOptional()\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/modules/user/dto/create-user.dto.ts:59\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Optional\n                            salt\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @IsString()@IsOptional()\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/modules/user/dto/create-user.dto.ts:28\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Optional\n                            secondLastName\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @IsString()@IsOptional()\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/modules/user/dto/create-user.dto.ts:44\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import {\n  IsEmail,\n  MinLength,\n  IsNotEmpty,\n  IsString,\n  IsOptional,\n} from 'class-validator';\nexport class CreateUserDTO {\n  @IsEmail()\n  @IsNotEmpty()\n  email: string;\n\n  @IsNotEmpty()\n  @IsString()\n  firstName: string;\n\n  @IsNotEmpty()\n  @IsString()\n  lastName: string;\n\n  @MinLength(8)\n  @IsString()\n  @IsOptional()\n  password?: string;\n\n  @IsString()\n  @IsOptional()\n  salt?: string;\n\n  @IsString()\n  @IsOptional()\n  facebookToken?: string;\n\n  @IsString()\n  @IsOptional()\n  googleToken?: string;\n\n  @IsString()\n  @IsOptional()\n  middleName?: string;\n\n  @IsString()\n  @IsOptional()\n  secondLastName?: string;\n\n  @IsOptional()\n  birthdate?: Date;\n\n  @IsString()\n  @IsOptional()\n  address?: string;\n\n  @IsString()\n  @IsOptional()\n  phone?: string;\n\n  @IsString()\n  @IsOptional()\n  photo?: string;\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/DatabaseModule.html":{"url":"modules/DatabaseModule.html","title":"module - DatabaseModule","body":"\n                   \n\n\n\n\n    Modules\n    DatabaseModule\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/database/database.module.ts\n        \n\n\n\n\n        \n            \n            \n        \n\n\n    \n\n\n    \n        import { Module } from '@nestjs/common';\nimport { dataBaseProvider } from './database.service';\n\n@Module({\n  imports: [dataBaseProvider],\n  exports: [dataBaseProvider],\n})\nexport class DatabaseModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"controllers/ExampleController.html":{"url":"controllers/ExampleController.html","title":"controller - ExampleController","body":"\n                   \n\n\n\n\n\n\n  Controllers\n  ExampleController\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/modules/example/example.controller.ts\n        \n\n            \n                Prefix\n            \n            \n                example\n            \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                forAdministrators\n                            \n                            \n                                forClients\n                            \n                            \n                                protectedWithoutRole\n                            \n                            \n                                testLogger\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            forAdministrators\n                        \n                        \n                    \n                \n            \n            \n                \nforAdministrators(user)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Roles(Role.ADMINISTRATOR)@UseGuards(RolesGuard)@Get('protected/admin')\n                \n            \n\n            \n                \n                    Defined in src/modules/example/example.controller.ts:69\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                \n                            \n                            \n                                \n                                    user\n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            forClients\n                        \n                        \n                    \n                \n            \n            \n                \nforClients(user)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Roles(Role.CLIENT)@UseGuards(RolesGuard)@Get('protected/client')\n                \n            \n\n            \n                \n                    Defined in src/modules/example/example.controller.ts:61\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                \n                            \n                            \n                                \n                                    user\n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            protectedWithoutRole\n                        \n                        \n                    \n                \n            \n            \n                \nprotectedWithoutRole(user)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Roles()@UseGuards(RolesGuard)@Get('protected')\n                \n            \n\n            \n                \n                    Defined in src/modules/example/example.controller.ts:52\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                \n                            \n                            \n                                \n                                    user\n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            testLogger\n                        \n                        \n                    \n                \n            \n            \n                \ntestLogger(user)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Roles()@UseGuards(RolesGuard)@Get()\n                \n            \n\n            \n                \n                    Defined in src/modules/example/example.controller.ts:22\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                \n                            \n                            \n                                \n                                    user\n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n\n\n    \n        import { Controller, Inject, Get, UseGuards, Request } from '@nestjs/common';\nimport { WINSTON_MODULE_PROVIDER } from 'nest-winston';\nimport { Logger } from 'winston';\nimport { ConfigService } from '@nestjs/config';\nimport { AuthGuard } from '@nestjs/passport';\nimport { Roles } from '../auth/decorators/roles.decorator';\nimport { RolesGuard } from '../auth/guards/roles.guard';\nimport { Role } from '../management/role/role.enum';\nimport { GetUser } from '../auth/decorators/get-user.decorator';\n\n// Controller for authenticated users.\n@UseGuards(AuthGuard('jwt'))\n@Controller('example')\nexport class ExampleController {\n  constructor(\n    @Inject(WINSTON_MODULE_PROVIDER) private readonly logger: Logger,\n  ) {}\n\n  @Roles()\n  @UseGuards(RolesGuard)\n  @Get()\n  testLogger(@GetUser() user) {\n    this.logger.error(\n      '[EXAMPLE] Testing loggers. Please check out loggers folder',\n    );\n    this.logger.warn(\n      '[EXAMPLE] Testing loggers. Please check out loggers folder',\n    );\n    this.logger.info(\n      '[EXAMPLE] Testing loggers. Please check out loggers folder',\n    );\n    this.logger.http(\n      '[EXAMPLE] Testing loggers. Please check out loggers folder',\n      's',\n    );\n    this.logger.verbose(\n      '[EXAMPLE] Testing loggers. Please check out loggers folder',\n    );\n    this.logger.debug(\n      '[EXAMPLE] Testing loggers. Please check out loggers folder',\n    );\n    this.logger.silly(\n      '[EXAMPLE] Testing loggers. Please check out loggers folder',\n    );\n    return user;\n  }\n\n  // Router without any  role restrictions\n  @Roles()\n  @UseGuards(RolesGuard)\n  @Get('protected')\n  protectedWithoutRole(@GetUser() user) {\n    this.logger.debug('The user %s has his verification token.', user.email);\n    return user;\n  }\n\n  // Router just for clients\n  @Roles(Role.CLIENT)\n  @UseGuards(RolesGuard)\n  @Get('protected/client')\n  forClients(@GetUser() user) {\n    this.logger.debug('The user %s is a client', user.email);\n    return user;\n  }\n  // Router just for administrators\n  @Roles(Role.ADMINISTRATOR)\n  @UseGuards(RolesGuard)\n  @Get('protected/admin')\n  forAdministrators(@GetUser() user) {\n    this.logger.debug('The user %s is a administrator', user.email);\n    return user;\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/ExampleModule.html":{"url":"modules/ExampleModule.html","title":"module - ExampleModule","body":"\n                   \n\n\n\n\n    Modules\n    ExampleModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_ExampleModule\n\n\n\ncluster_ExampleModule_imports\n\n\n\n\nAuthModule\n\nAuthModule\n\n\n\nExampleModule\n\nExampleModule\n\nExampleModule -->\n\nAuthModule->ExampleModule\n\n\n\n\n\nUserModule\n\nUserModule\n\nExampleModule -->\n\nUserModule->ExampleModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/modules/example/example.module.ts\n        \n\n\n\n\n        \n            \n                \n                    Controllers\n                    \n                        \n                            ExampleController\n                        \n                    \n                \n                \n                    Imports\n                    \n                        \n                            AuthModule\n                        \n                        \n                            UserModule\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { Module } from '@nestjs/common';\n\n// MODULES\nimport { AuthModule } from '../auth/auth.module';\nimport { UserModule } from '../user/user.module';\n\n// CONTROLLER\nimport { ExampleController } from './example.controller';\n\n@Module({\n  imports: [AuthModule, UserModule],\n  controllers: [ExampleController],\n})\nexport class ExampleModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/JwtStrategy.html":{"url":"injectables/JwtStrategy.html","title":"injectable - JwtStrategy","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  JwtStrategy\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/modules/auth/jwt.strategy.ts\n        \n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                validate\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(logger: Logger, configService: ConfigService, userService: UserService)\n                    \n                \n                        \n                            \n                                Defined in src/modules/auth/jwt.strategy.ts:12\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        logger\n                                                  \n                                                        \n                                                                    Logger\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        configService\n                                                  \n                                                        \n                                                                    ConfigService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        userService\n                                                  \n                                                        \n                                                                        UserService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            validate\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    validate(payload: App.Auth.JWTPayload)\n                \n            \n\n\n            \n                \n                    Defined in src/modules/auth/jwt.strategy.ts:25\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    payload\n                                    \n                                            App.Auth.JWTPayload\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     {}\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable, UnauthorizedException, Inject } from '@nestjs/common';\nimport { PassportStrategy } from '@nestjs/passport';\nimport { ConfigService } from '@nestjs/config';\n\nimport { Strategy, ExtractJwt } from 'passport-jwt';\nimport { Logger } from 'winston';\nimport { WINSTON_MODULE_PROVIDER } from 'nest-winston';\n\nimport { UserService } from '../user/user.service';\n\n@Injectable()\nexport class JwtStrategy extends PassportStrategy(Strategy) {\n  constructor(\n    @Inject(WINSTON_MODULE_PROVIDER) private logger: Logger,\n    private configService: ConfigService,\n    private userService: UserService,\n  ) {\n    super({\n      jwtFromRequest: ExtractJwt.fromAuthHeaderAsBearerToken(),\n      ignoreExpiration: false,\n      secretOrKey: configService.get('jwt.secret'),\n    });\n  }\n\n  async validate(payload: App.Auth.JWTPayload) {\n    const user = await this.userService.getUserByEmail(payload);\n    if (!user) {\n      this.logger.error(\n        `[AUTH] The user ${payload.email} does not have authorization. Log in again`,\n      );\n      throw new UnauthorizedException(`User does not have authorization`);\n    }\n\n    return {\n      email: payload.email,\n      id: user.userDetails.fk_user_client,\n      role: payload.role,\n    };\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/Language.html":{"url":"classes/Language.html","title":"class - Language","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  Language\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/modules/user/language/language.entity.ts\n        \n\n\n            \n                Extends\n            \n            \n                    BaseEntity\n            \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                idLanguage\n                            \n                            \n                                name\n                            \n                            \n                                userDetails\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            idLanguage\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         number\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @PrimaryGeneratedColumn()\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/modules/user/language/language.entity.ts:13\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            name\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @Column()\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/modules/user/language/language.entity.ts:16\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            userDetails\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         UserDetails\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @OneToMany(undefined, undefined, {nullable: true})\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/modules/user/language/language.entity.ts:23\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { UserDetails } from '../user-details/user-details.entity';\nimport {\n  BaseEntity,\n  Entity,\n  PrimaryGeneratedColumn,\n  Column,\n  OneToMany,\n} from 'typeorm';\n\n@Entity()\nexport class Language extends BaseEntity {\n  @PrimaryGeneratedColumn()\n  idLanguage: number;\n\n  @Column()\n  name: string;\n\n  @OneToMany(\n    type => UserDetails,\n    userDetails => userDetails.idUserDetails,\n    { nullable: true },\n  )\n  userDetails: UserDetails;\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"controllers/LanguageController.html":{"url":"controllers/LanguageController.html","title":"controller - LanguageController","body":"\n                   \n\n\n\n\n\n\n  Controllers\n  LanguageController\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/modules/language/language.controller.ts\n        \n\n            \n                Prefix\n            \n            \n                language\n            \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                getTerms\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            getTerms\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    getTerms(lang)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Get(':lang')\n                \n            \n\n            \n                \n                    Defined in src/modules/language/language.controller.ts:9\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                \n                            \n                            \n                                \n                                    lang\n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     {}\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n\n\n    \n        import { Controller, Get, Param } from '@nestjs/common';\nimport { LanguageService } from './language.service';\n\n@Controller('language')\nexport class LanguageController {\n  constructor(private readonly languageService: LanguageService) {}\n\n  @Get(':lang')\n  async getTerms(@Param('lang') lang) {\n    return await this.languageService.getTerms(lang);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/LanguageModule.html":{"url":"modules/LanguageModule.html","title":"module - LanguageModule","body":"\n                   \n\n\n\n\n    Modules\n    LanguageModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_LanguageModule\n\n\n\ncluster_LanguageModule_providers\n\n\n\n\nLanguageService\n\nLanguageService\n\n\n\nLanguageModule\n\nLanguageModule\n\nLanguageModule -->\n\nLanguageService->LanguageModule\n\n\n\n\n\nPoeditorService\n\nPoeditorService\n\nLanguageModule -->\n\nPoeditorService->LanguageModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/modules/language/language.module.ts\n        \n\n\n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            LanguageService\n                        \n                        \n                            PoeditorService\n                        \n                    \n                \n                \n                    Controllers\n                    \n                        \n                            LanguageController\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { Module, HttpModule } from '@nestjs/common';\nimport { ConfigModule } from '@nestjs/config';\n\n// CONTROLLER\nimport { LanguageController } from './language.controller';\n\n// SERVICES\nimport { LanguageService } from './language.service';\nimport { PoeditorService } from './poeditor/poeditor.service';\n\n@Module({\n  imports: [ConfigModule, HttpModule],\n  controllers: [LanguageController],\n  providers: [LanguageService, PoeditorService],\n})\nexport class LanguageModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/LanguageSeederModule.html":{"url":"modules/LanguageSeederModule.html","title":"module - LanguageSeederModule","body":"\n                   \n\n\n\n\n    Modules\n    LanguageSeederModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_LanguageSeederModule\n\n\n\ncluster_LanguageSeederModule_exports\n\n\n\ncluster_LanguageSeederModule_providers\n\n\n\n\nLanguageSeederService \n\nLanguageSeederService \n\n\n\nLanguageSeederModule\n\nLanguageSeederModule\n\nLanguageSeederService  -->\n\nLanguageSeederModule->LanguageSeederService \n\n\n\n\n\nLanguageSeederService\n\nLanguageSeederService\n\nLanguageSeederModule -->\n\nLanguageSeederService->LanguageSeederModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/database/seeders/language/language.module.ts\n        \n\n\n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            LanguageSeederService\n                        \n                    \n                \n                \n                    Exports\n                    \n                        \n                            LanguageSeederService\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { Module } from '@nestjs/common';\nimport { TypeOrmModule } from '@nestjs/typeorm';\nimport { LanguageSeederService } from './language.service';\nimport { Language } from '../../../modules/user/language/language.entity';\n\n@Module({\n  imports: [TypeOrmModule.forFeature([Language])],\n  providers: [LanguageSeederService],\n  exports: [LanguageSeederService],\n})\nexport class LanguageSeederModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/LanguageSeederService.html":{"url":"injectables/LanguageSeederService.html","title":"injectable - LanguageSeederService","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  LanguageSeederService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/database/seeders/language/language.service.ts\n        \n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                createLanguage\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(languageRepository: Repository)\n                    \n                \n                        \n                            \n                                Defined in src/database/seeders/language/language.service.ts:9\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        languageRepository\n                                                  \n                                                        \n                                                                        Repository\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            createLanguage\n                        \n                        \n                    \n                \n            \n            \n                \ncreateLanguage()\n                \n            \n\n\n            \n                \n                    Defined in src/database/seeders/language/language.service.ts:15\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :     Promise[]\n\n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { InjectRepository } from '@nestjs/typeorm';\nimport { Injectable } from '@nestjs/common';\nimport { Repository, InsertResult } from 'typeorm';\n\nimport { LANGUAGES } from './language.data';\nimport { Language } from '../../../modules/user/language/language.entity';\n\n@Injectable()\nexport class LanguageSeederService {\n  constructor(\n    @InjectRepository(Language)\n    private readonly languageRepository: Repository,\n  ) {}\n\n  createLanguage(): Promise[] {\n    return LANGUAGES.map(language => this.languageRepository.insert(language));\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/LanguageService.html":{"url":"injectables/LanguageService.html","title":"injectable - LanguageService","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  LanguageService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/modules/language/language.service.ts\n        \n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                getTerms\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(poeditorService: PoeditorService)\n                    \n                \n                        \n                            \n                                Defined in src/modules/language/language.service.ts:5\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        poeditorService\n                                                  \n                                                        \n                                                                        PoeditorService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            getTerms\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    getTerms(lang: string)\n                \n            \n\n\n            \n                \n                    Defined in src/modules/language/language.service.ts:8\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    lang\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     {}\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@nestjs/common';\nimport { PoeditorService } from './poeditor/poeditor.service';\n\n@Injectable()\nexport class LanguageService {\n  constructor(private poeditorService: PoeditorService) {}\n\n  async getTerms(lang: string) {\n    return await this.poeditorService.getTerms(lang);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/MailsModule.html":{"url":"modules/MailsModule.html","title":"module - MailsModule","body":"\n                   \n\n\n\n\n    Modules\n    MailsModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_MailsModule\n\n\n\ncluster_MailsModule_exports\n\n\n\ncluster_MailsModule_providers\n\n\n\n\nMailsService \n\nMailsService \n\n\n\nMailsModule\n\nMailsModule\n\nMailsService  -->\n\nMailsModule->MailsService \n\n\n\n\n\nMailsService\n\nMailsService\n\nMailsModule -->\n\nMailsService->MailsModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/modules/mails/mails.module.ts\n        \n\n\n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            MailsService\n                        \n                    \n                \n                \n                    Exports\n                    \n                        \n                            MailsService\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { Module } from '@nestjs/common';\nimport { ConfigService } from '@nestjs/config';\n\nimport { MailsService } from './mails.service';\nimport { SendGridConfig } from './sendGrid.config';\n\n@Module({\n  imports: [SendGridConfig],\n  providers: [\n    MailsService,\n    {\n      inject: [ConfigService],\n      provide: 'SENDGRID_CONFIG',\n      useFactory: async (configService: ConfigService) => {\n        return {\n          emailFrom: configService.get('mails.sendgrid.emailFrom'),\n          templates: configService.get('mails.sendgrid.templates'),\n        };\n      },\n    },\n  ],\n  exports: [MailsService],\n})\nexport class MailsModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/MailsService.html":{"url":"injectables/MailsService.html","title":"injectable - MailsService","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  MailsService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/modules/mails/mails.service.ts\n        \n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                sendEmail\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \n                                Public\n                        constructor(sendGridClient: SendGridService, sendGridConfig, logger: Logger)\n                    \n                \n                        \n                            \n                                Defined in src/modules/mails/mails.service.ts:9\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        sendGridClient\n                                                  \n                                                        \n                                                                    SendGridService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        sendGridConfig\n                                                  \n                                                        \n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        logger\n                                                  \n                                                        \n                                                                    Logger\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            sendEmail\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    sendEmail(email, subject, template, data)\n                \n            \n\n\n            \n                \n                    Defined in src/modules/mails/mails.service.ts:16\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                \n                            \n                            \n                                \n                                    email\n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    subject\n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    template\n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    data\n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable, Inject } from '@nestjs/common';\nimport { InjectSendGrid, SendGridService } from '@ntegral/nestjs-sendgrid';\nimport { WINSTON_MODULE_PROVIDER } from 'nest-winston';\nimport { Logger } from 'winston';\n\n@Injectable()\nexport class MailsService {\n  public constructor(\n    @InjectSendGrid() private readonly sendGridClient: SendGridService,\n    @Inject('SENDGRID_CONFIG') private sendGridConfig,\n    @Inject(WINSTON_MODULE_PROVIDER) private readonly logger: Logger,\n  ) {}\n\n  async sendEmail(email, subject, template, data) {\n    try {\n      const msg: App.SendGrid.Mail = {\n        to: email,\n        from: this.sendGridConfig.emailFrom,\n        subject: subject,\n        templateId: template,\n        dynamic_template_data: data,\n      };\n\n      await this.sendGridClient.send(msg);\n      this.logger.verbose(\n        `[MAILS] An email with the subject \"${subject}\" has been sent to ${email}`,\n      );\n    } catch (err) {\n      this.logger.verbose(\n        `[MAILS] Problem sending email. Reason: ${err.message}`,\n      );\n    }\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/ManagementModule.html":{"url":"modules/ManagementModule.html","title":"module - ManagementModule","body":"\n                   \n\n\n\n\n    Modules\n    ManagementModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_ManagementModule\n\n\n\ncluster_ManagementModule_exports\n\n\n\ncluster_ManagementModule_providers\n\n\n\n\nPlatformInterestService \n\nPlatformInterestService \n\n\n\nPointsConversionService \n\nPointsConversionService \n\n\n\nRoleService \n\nRoleService \n\n\n\nStateService \n\nStateService \n\n\n\nThirdPartyInterestService \n\nThirdPartyInterestService \n\n\n\nManagementModule\n\nManagementModule\n\nPlatformInterestService  -->\n\nManagementModule->PlatformInterestService \n\n\n\nPointsConversionService  -->\n\nManagementModule->PointsConversionService \n\n\n\nRoleService  -->\n\nManagementModule->RoleService \n\n\n\nStateService  -->\n\nManagementModule->StateService \n\n\n\nThirdPartyInterestService  -->\n\nManagementModule->ThirdPartyInterestService \n\n\n\n\n\nPlatformInterestService\n\nPlatformInterestService\n\nManagementModule -->\n\nPlatformInterestService->ManagementModule\n\n\n\n\n\nPointsConversionService\n\nPointsConversionService\n\nManagementModule -->\n\nPointsConversionService->ManagementModule\n\n\n\n\n\nRoleService\n\nRoleService\n\nManagementModule -->\n\nRoleService->ManagementModule\n\n\n\n\n\nStateService\n\nStateService\n\nManagementModule -->\n\nStateService->ManagementModule\n\n\n\n\n\nThirdPartyInterestService\n\nThirdPartyInterestService\n\nManagementModule -->\n\nThirdPartyInterestService->ManagementModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/modules/management/management.module.ts\n        \n\n\n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            PlatformInterestService\n                        \n                        \n                            PointsConversionService\n                        \n                        \n                            RoleService\n                        \n                        \n                            StateService\n                        \n                        \n                            ThirdPartyInterestService\n                        \n                    \n                \n                \n                    Exports\n                    \n                        \n                            PlatformInterestService\n                        \n                        \n                            PointsConversionService\n                        \n                        \n                            RoleService\n                        \n                        \n                            StateService\n                        \n                        \n                            ThirdPartyInterestService\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { Module } from '@nestjs/common';\nimport { TypeOrmModule } from '@nestjs/typeorm';\n\n// MODULES\n\n// SERVICES\nimport { PlatformInterestService } from './platform-interest/platform-interest.service';\nimport { PointsConversionService } from './points-conversion/points-conversion.service';\nimport { ThirdPartyInterestService } from './third-party-interest/third-party-interest.service';\nimport { RoleService } from './role/role.service';\nimport { StateService } from './state/state.service';\n\n// ENTITIES\nimport { State } from './state/state.entity';\nimport { Role } from './role/role.entity';\nimport { PlatformInterest } from './platform-interest/platform-interest.entity';\nimport { PointsConversion } from './points-conversion/points-conversion.entity';\nimport { ThirdPartyInterest } from './third-party-interest/third-party-interest.entity';\n\n@Module({\n  imports: [\n    TypeOrmModule.forFeature([\n      State,\n      Role,\n      PlatformInterest,\n      PointsConversion,\n      ThirdPartyInterest,\n    ]),\n  ],\n  providers: [\n    StateService,\n    RoleService,\n    PlatformInterestService,\n    PointsConversionService,\n    ThirdPartyInterestService,\n  ],\n  exports: [\n    StateService,\n    RoleService,\n    TypeOrmModule.forFeature([State]),\n    PlatformInterestService,\n    PointsConversionService,\n    ThirdPartyInterestService,\n  ],\n})\nexport class ManagementModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/PlatformInterest.html":{"url":"classes/PlatformInterest.html","title":"class - PlatformInterest","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  PlatformInterest\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/modules/management/platform-interest/platform-interest.entity.ts\n        \n\n\n            \n                Extends\n            \n            \n                    BaseEntity\n            \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                amount\n                            \n                            \n                                finalDate\n                            \n                            \n                                idPlatformInterest\n                            \n                            \n                                initialDate\n                            \n                            \n                                name\n                            \n                            \n                                percentage\n                            \n                            \n                                suscription\n                            \n                            \n                                transactionInterest\n                            \n                            \n                                transactionInterestExtraPoints\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            amount\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         number\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @Column('decimal', {nullable: true, precision: 8, scale: 2})\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/modules/management/platform-interest/platform-interest.entity.ts:22\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            finalDate\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         Date\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @Column({nullable: true})\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/modules/management/platform-interest/platform-interest.entity.ts:31\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            idPlatformInterest\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         number\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @PrimaryGeneratedColumn()\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/modules/management/platform-interest/platform-interest.entity.ts:16\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            initialDate\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         Date\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @Column({default: undefined})\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/modules/management/platform-interest/platform-interest.entity.ts:28\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            name\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @Column()\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/modules/management/platform-interest/platform-interest.entity.ts:19\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            percentage\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         number\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @Column('decimal', {nullable: true, precision: 8, scale: 2})\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/modules/management/platform-interest/platform-interest.entity.ts:25\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            suscription\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : Suscription\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @ManyToOne(undefined, undefined, {nullable: true})@JoinColumn({name: 'fk_suscription'})\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/modules/management/platform-interest/platform-interest.entity.ts:39\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            transactionInterest\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : TransactionInterest\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @OneToMany(undefined, undefined, {nullable: true})\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/modules/management/platform-interest/platform-interest.entity.ts:46\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            transactionInterestExtraPoints\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : TransactionInterest\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @OneToMany(undefined, undefined, {nullable: true})\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/modules/management/platform-interest/platform-interest.entity.ts:54\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { Suscription } from '../../suscription/suscription/suscription.entity';\nimport { TransactionInterest } from '../../transaction/transaction-interest/transaction-interest.entity';\nimport {\n  BaseEntity,\n  Entity,\n  PrimaryGeneratedColumn,\n  Column,\n  ManyToOne,\n  JoinColumn,\n  OneToMany,\n} from 'typeorm';\n\n@Entity()\nexport class PlatformInterest extends BaseEntity {\n  @PrimaryGeneratedColumn()\n  idPlatformInterest: number;\n\n  @Column()\n  name: string;\n\n  @Column('decimal', { nullable: true, precision: 8, scale: 2 })\n  amount: number;\n\n  @Column('decimal', { nullable: true, precision: 8, scale: 2 })\n  percentage: number;\n\n  @Column({ default: () => 'CURRENT_DATE' })\n  initialDate: Date;\n\n  @Column({ nullable: true })\n  finalDate: Date;\n\n  @ManyToOne(\n    type => Suscription,\n    suscription => suscription.idSuscription,\n    { nullable: true },\n  )\n  @JoinColumn({ name: 'fk_suscription' })\n  suscription = Suscription;\n\n  @OneToMany(\n    type => TransactionInterest,\n    transactionInterest => transactionInterest.idTransactionInterest,\n    { nullable: true },\n  )\n  transactionInterest = TransactionInterest;\n\n  @OneToMany(\n    type => TransactionInterest,\n    transactionInterestExtraPoints =>\n      transactionInterestExtraPoints.idTransactionInterest,\n    { nullable: true },\n  )\n  transactionInterestExtraPoints = TransactionInterest;\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/PlatformInterestSeederModule.html":{"url":"modules/PlatformInterestSeederModule.html","title":"module - PlatformInterestSeederModule","body":"\n                   \n\n\n\n\n    Modules\n    PlatformInterestSeederModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_PlatformInterestSeederModule\n\n\n\ncluster_PlatformInterestSeederModule_exports\n\n\n\ncluster_PlatformInterestSeederModule_providers\n\n\n\n\nPlatformInterestSeederService \n\nPlatformInterestSeederService \n\n\n\nPlatformInterestSeederModule\n\nPlatformInterestSeederModule\n\nPlatformInterestSeederService  -->\n\nPlatformInterestSeederModule->PlatformInterestSeederService \n\n\n\n\n\nPlatformInterestSeederService\n\nPlatformInterestSeederService\n\nPlatformInterestSeederModule -->\n\nPlatformInterestSeederService->PlatformInterestSeederModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/database/seeders/platform_interest/platform_interest.module.ts\n        \n\n\n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            PlatformInterestSeederService\n                        \n                    \n                \n                \n                    Exports\n                    \n                        \n                            PlatformInterestSeederService\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { Module } from '@nestjs/common';\nimport { TypeOrmModule } from '@nestjs/typeorm';\nimport { PlatformInterestSeederService } from './platform_interest.service';\nimport { PlatformInterest } from '../../../modules/management/platform-interest/platform-interest.entity';\n\n@Module({\n  imports: [TypeOrmModule.forFeature([PlatformInterest])],\n  providers: [PlatformInterestSeederService],\n  exports: [PlatformInterestSeederService],\n})\nexport class PlatformInterestSeederModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/PlatformInterestSeederService.html":{"url":"injectables/PlatformInterestSeederService.html","title":"injectable - PlatformInterestSeederService","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  PlatformInterestSeederService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/database/seeders/platform_interest/platform_interest.service.ts\n        \n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                createPlatformInterest\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(platformInterestRepository: Repository)\n                    \n                \n                        \n                            \n                                Defined in src/database/seeders/platform_interest/platform_interest.service.ts:9\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        platformInterestRepository\n                                                  \n                                                        \n                                                                        Repository\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            createPlatformInterest\n                        \n                        \n                    \n                \n            \n            \n                \ncreatePlatformInterest()\n                \n            \n\n\n            \n                \n                    Defined in src/database/seeders/platform_interest/platform_interest.service.ts:15\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :     Promise[]\n\n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { InjectRepository } from '@nestjs/typeorm';\nimport { Injectable } from '@nestjs/common';\nimport { Repository, InsertResult } from 'typeorm';\n\nimport { PLATAFORM_INTERESTS } from './platform_interest.data';\nimport { PlatformInterest } from '../../../modules/management/platform-interest/platform-interest.entity';\n\n@Injectable()\nexport class PlatformInterestSeederService {\n  constructor(\n    @InjectRepository(PlatformInterest)\n    private readonly platformInterestRepository: Repository,\n  ) {}\n\n  createPlatformInterest(): Promise[] {\n    return PLATAFORM_INTERESTS.map(platformInterest =>\n      this.platformInterestRepository.insert(platformInterest),\n    );\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/PlatformInterestService.html":{"url":"injectables/PlatformInterestService.html","title":"injectable - PlatformInterestService","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  PlatformInterestService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/modules/management/platform-interest/platform-interest.service.ts\n        \n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                getInterestByName\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(platformInterestRepository: Repository)\n                    \n                \n                        \n                            \n                                Defined in src/modules/management/platform-interest/platform-interest.service.ts:8\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        platformInterestRepository\n                                                  \n                                                        \n                                                                        Repository\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            getInterestByName\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    getInterestByName(name: PlatformInterestEnum)\n                \n            \n\n\n            \n                \n                    Defined in src/modules/management/platform-interest/platform-interest.service.ts:13\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    name\n                                    \n                                                PlatformInterestEnum\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@nestjs/common';\nimport { PlatformInterest as PlatformInterestEnum } from './platform-interest.enum';\nimport { InjectRepository } from '@nestjs/typeorm';\nimport { PlatformInterest } from './platform-interest.entity';\nimport { Repository } from 'typeorm';\n\n@Injectable()\nexport class PlatformInterestService {\n  constructor(\n    @InjectRepository(PlatformInterest)\n    private platformInterestRepository: Repository,\n  ) {}\n  async getInterestByName(\n    name: PlatformInterestEnum,\n  ): Promise {\n    return await this.platformInterestRepository.findOne({\n      name,\n      finalDate: null,\n    });\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/PoeditorService.html":{"url":"injectables/PoeditorService.html","title":"injectable - PoeditorService","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  PoeditorService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/modules/language/poeditor/poeditor.service.ts\n        \n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                getTerms\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(configService: ConfigService, httpService: HttpService)\n                    \n                \n                        \n                            \n                                Defined in src/modules/language/poeditor/poeditor.service.ts:6\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        configService\n                                                  \n                                                        \n                                                                    ConfigService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        httpService\n                                                  \n                                                        \n                                                                    HttpService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            getTerms\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    getTerms(lang: string)\n                \n            \n\n\n            \n                \n                    Defined in src/modules/language/poeditor/poeditor.service.ts:11\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    lang\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     {}\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable, HttpService } from '@nestjs/common';\nimport { ConfigService } from '@nestjs/config';\nimport * as FormData from 'form-data';\n\n@Injectable()\nexport class PoeditorService {\n  constructor(\n    private configService: ConfigService,\n    private httpService: HttpService,\n  ) {}\n  async getTerms(lang: string) {\n    const poeditorConfig = this.configService.get('lang.poeditor');\n\n    let bodyFormData = new FormData();\n    bodyFormData.append('api_token', poeditorConfig.apiSecretKey);\n    bodyFormData.append('id', poeditorConfig.projectId);\n    bodyFormData.append('language', lang);\n\n    // JS Destructuring\n    const {\n      data: {\n        result: { terms: poeditorTerms },\n      },\n    } = await this.httpService\n      .post('https://api.poeditor.com/v2/terms/list', bodyFormData, {\n        headers: bodyFormData.getHeaders(),\n      })\n      .toPromise();\n\n    return poeditorTerms;\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/PointsConversion.html":{"url":"classes/PointsConversion.html","title":"class - PointsConversion","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  PointsConversion\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/modules/management/points-conversion/points-conversion.entity.ts\n        \n\n\n            \n                Extends\n            \n            \n                    BaseEntity\n            \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                finalDate\n                            \n                            \n                                idPointsConversion\n                            \n                            \n                                initialDate\n                            \n                            \n                                onePointEqualsDollars\n                            \n                            \n                                transaction\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            finalDate\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         Date\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @Column({nullable: true})\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/modules/management/points-conversion/points-conversion.entity.ts:22\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            idPointsConversion\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         number\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @PrimaryGeneratedColumn()\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/modules/management/points-conversion/points-conversion.entity.ts:13\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            initialDate\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         Date\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @Column({default: undefined})\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/modules/management/points-conversion/points-conversion.entity.ts:19\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            onePointEqualsDollars\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         number\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @Column('decimal', {precision: 8, scale: 3})\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/modules/management/points-conversion/points-conversion.entity.ts:16\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            transaction\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         Transaction\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @OneToMany(undefined, undefined, {nullable: true})\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/modules/management/points-conversion/points-conversion.entity.ts:29\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { Transaction } from '../../transaction/transaction/transaction.entity';\nimport {\n  BaseEntity,\n  Entity,\n  PrimaryGeneratedColumn,\n  Column,\n  OneToMany,\n} from 'typeorm';\n\n@Entity()\nexport class PointsConversion extends BaseEntity {\n  @PrimaryGeneratedColumn()\n  idPointsConversion: number;\n\n  @Column('decimal', { precision: 8, scale: 3 })\n  onePointEqualsDollars: number;\n\n  @Column({ default: () => 'CURRENT_DATE' })\n  initialDate: Date;\n\n  @Column({ nullable: true })\n  finalDate: Date;\n\n  @OneToMany(\n    type => Transaction,\n    transaction => transaction.idTransaction,\n    { nullable: true },\n  )\n  transaction: Transaction;\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/PointsConversionSeederModule.html":{"url":"modules/PointsConversionSeederModule.html","title":"module - PointsConversionSeederModule","body":"\n                   \n\n\n\n\n    Modules\n    PointsConversionSeederModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_PointsConversionSeederModule\n\n\n\ncluster_PointsConversionSeederModule_exports\n\n\n\ncluster_PointsConversionSeederModule_providers\n\n\n\n\nPointsConversionSeederService \n\nPointsConversionSeederService \n\n\n\nPointsConversionSeederModule\n\nPointsConversionSeederModule\n\nPointsConversionSeederService  -->\n\nPointsConversionSeederModule->PointsConversionSeederService \n\n\n\n\n\nPointsConversionSeederService\n\nPointsConversionSeederService\n\nPointsConversionSeederModule -->\n\nPointsConversionSeederService->PointsConversionSeederModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/database/seeders/points_conversion/points_conversion.module.ts\n        \n\n\n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            PointsConversionSeederService\n                        \n                    \n                \n                \n                    Exports\n                    \n                        \n                            PointsConversionSeederService\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { Module } from '@nestjs/common';\nimport { TypeOrmModule } from '@nestjs/typeorm';\nimport { PointsConversionSeederService } from './points_conversion.service';\nimport { PointsConversion } from '../../../modules/management/points-conversion/points-conversion.entity';\n\n@Module({\n  imports: [TypeOrmModule.forFeature([PointsConversion])],\n  providers: [PointsConversionSeederService],\n  exports: [PointsConversionSeederService],\n})\nexport class PointsConversionSeederModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/PointsConversionSeederService.html":{"url":"injectables/PointsConversionSeederService.html","title":"injectable - PointsConversionSeederService","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  PointsConversionSeederService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/database/seeders/points_conversion/points_conversion.service.ts\n        \n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                createPointsConversion\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(PointsConversionRepository: Repository)\n                    \n                \n                        \n                            \n                                Defined in src/database/seeders/points_conversion/points_conversion.service.ts:9\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        PointsConversionRepository\n                                                  \n                                                        \n                                                                        Repository\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            createPointsConversion\n                        \n                        \n                    \n                \n            \n            \n                \ncreatePointsConversion()\n                \n            \n\n\n            \n                \n                    Defined in src/database/seeders/points_conversion/points_conversion.service.ts:15\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :     Promise[]\n\n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { InjectRepository } from '@nestjs/typeorm';\nimport { Injectable } from '@nestjs/common';\nimport { Repository, InsertResult } from 'typeorm';\n\nimport { POINTS_CONVERSION } from './points_conversion.data';\nimport { PointsConversion } from '../../../modules/management/points-conversion/points-conversion.entity';\n\n@Injectable()\nexport class PointsConversionSeederService {\n  constructor(\n    @InjectRepository(PointsConversion)\n    private readonly PointsConversionRepository: Repository,\n  ) {}\n\n  createPointsConversion(): Promise[] {\n    return POINTS_CONVERSION.map(pointsConversion =>\n      this.PointsConversionRepository.insert(pointsConversion),\n    );\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/PointsConversionService.html":{"url":"injectables/PointsConversionService.html","title":"injectable - PointsConversionService","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  PointsConversionService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/modules/management/points-conversion/points-conversion.service.ts\n        \n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                getRecentPointsConversion\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(pointsConversionRepository: Repository)\n                    \n                \n                        \n                            \n                                Defined in src/modules/management/points-conversion/points-conversion.service.ts:7\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        pointsConversionRepository\n                                                  \n                                                        \n                                                                        Repository\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            getRecentPointsConversion\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    getRecentPointsConversion()\n                \n            \n\n\n            \n                \n                    Defined in src/modules/management/points-conversion/points-conversion.service.ts:12\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         Promise\n\n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@nestjs/common';\nimport { InjectRepository } from '@nestjs/typeorm';\nimport { PointsConversion } from './points-conversion.entity';\nimport { Repository } from 'typeorm';\n\n@Injectable()\nexport class PointsConversionService {\n  constructor(\n    @InjectRepository(PointsConversion)\n    private pointsConversionRepository: Repository,\n  ) {}\n  async getRecentPointsConversion(): Promise {\n    return await this.pointsConversionRepository.findOne({ finalDate: null });\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/Promotion.html":{"url":"classes/Promotion.html","title":"class - Promotion","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  Promotion\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/modules/management/promotion/promotion.entity.ts\n        \n\n\n            \n                Extends\n            \n            \n                    BaseEntity\n            \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                amount\n                            \n                            \n                                description\n                            \n                            \n                                finalDate\n                            \n                            \n                                idPromotion\n                            \n                            \n                                initialDate\n                            \n                            \n                                isADiscount\n                            \n                            \n                                name\n                            \n                            \n                                percentage\n                            \n                            \n                                token\n                            \n                            \n                                transactionInterest\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            amount\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         number\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @Column('decimal', {nullable: true, precision: 8, scale: 2})\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/modules/management/promotion/promotion.entity.ts:28\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            description\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @Column()\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/modules/management/promotion/promotion.entity.ts:19\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            finalDate\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         Date\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @Column({nullable: true})\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/modules/management/promotion/promotion.entity.ts:37\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            idPromotion\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         number\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @PrimaryGeneratedColumn()\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/modules/management/promotion/promotion.entity.ts:13\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            initialDate\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         Date\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @Column({default: undefined})\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/modules/management/promotion/promotion.entity.ts:34\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            isADiscount\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @Column({nullable: true})\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/modules/management/promotion/promotion.entity.ts:22\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            name\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @Column()\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/modules/management/promotion/promotion.entity.ts:16\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            percentage\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         number\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @Column('decimal', {nullable: true, precision: 6, scale: 2})\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/modules/management/promotion/promotion.entity.ts:31\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            token\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @Column()\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/modules/management/promotion/promotion.entity.ts:25\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            transactionInterest\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         TransactionInterest\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @OneToMany(undefined, undefined, {nullable: true})\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/modules/management/promotion/promotion.entity.ts:44\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { TransactionInterest } from '../../transaction/transaction-interest/transaction-interest.entity';\nimport {\n  BaseEntity,\n  Entity,\n  PrimaryGeneratedColumn,\n  Column,\n  OneToMany,\n} from 'typeorm';\n\n@Entity()\nexport class Promotion extends BaseEntity {\n  @PrimaryGeneratedColumn()\n  idPromotion: number;\n\n  @Column()\n  name: string;\n\n  @Column()\n  description: string;\n\n  @Column({ nullable: true })\n  isADiscount: string;\n\n  @Column()\n  token: string;\n\n  @Column('decimal', { nullable: true, precision: 8, scale: 2 })\n  amount: number;\n\n  @Column('decimal', { nullable: true, precision: 6, scale: 2 })\n  percentage: number;\n\n  @Column({ default: () => 'CURRENT_DATE' })\n  initialDate: Date;\n\n  @Column({ nullable: true })\n  finalDate: Date;\n\n  @OneToMany(\n    type => TransactionInterest,\n    transactionInterest => transactionInterest.idTransactionInterest,\n    { nullable: true },\n  )\n  transactionInterest: TransactionInterest;\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/Response.html":{"url":"interfaces/Response.html","title":"interface - Response","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  Response\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/modules/auth/interceptors/transform-sign-up.interceptor.ts\n        \n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        data\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        data\n                                    \n                                \n                                \n                                    \n                                        data:     T\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     T\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import {\n  Injectable,\n  NestInterceptor,\n  ExecutionContext,\n  CallHandler,\n  Inject,\n} from '@nestjs/common';\nimport { Observable } from 'rxjs';\nimport * as bcrypt from 'bcrypt';\nimport { AuthService } from '../auth.service';\n\nexport interface Response {\n  data: T;\n}\n\n@Injectable()\nexport class TransformSignUpInterceptor\n  implements NestInterceptor> {\n  constructor(@Inject(AuthService) private authService: AuthService) {}\n  async intercept(\n    context: ExecutionContext,\n    next: CallHandler,\n  ): Promise>> {\n    const req = context.switchToHttp().getRequest();\n\n    // Encrypts password only for federated sign up\n    if (req.body.password !== undefined) {\n      const salt = await bcrypt.genSalt();\n      const password = req.body.password;\n      req.body.password = await this.authService.hashPassword(password, salt);\n      req.body.salt = salt;\n    }\n    return next.handle().pipe();\n  }\n}\n\n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/Role.html":{"url":"classes/Role.html","title":"class - Role","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  Role\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/modules/management/role/role.entity.ts\n        \n\n\n            \n                Extends\n            \n            \n                    BaseEntity\n            \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                idRole\n                            \n                            \n                                name\n                            \n                            \n                                    Optional\n                                userRole\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            idRole\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         number\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @PrimaryGeneratedColumn()\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/modules/management/role/role.entity.ts:13\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            name\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @Column({unique: true})\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/modules/management/role/role.entity.ts:16\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Optional\n                            userRole\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         UserRole\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @OneToMany(undefined, undefined, {nullable: true})\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/modules/management/role/role.entity.ts:23\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { UserRole } from '../../user/user-role/user-role.entity';\nimport {\n  BaseEntity,\n  Entity,\n  PrimaryGeneratedColumn,\n  Column,\n  OneToMany,\n} from 'typeorm';\n\n@Entity()\nexport class Role extends BaseEntity {\n  @PrimaryGeneratedColumn()\n  idRole: number;\n\n  @Column({ unique: true })\n  name: string;\n\n  @OneToMany(\n    type => UserRole,\n    userRole => userRole.idUserRole,\n    { nullable: true },\n  )\n  userRole?: UserRole;\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/RoleSeederModule.html":{"url":"modules/RoleSeederModule.html","title":"module - RoleSeederModule","body":"\n                   \n\n\n\n\n    Modules\n    RoleSeederModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_RoleSeederModule\n\n\n\ncluster_RoleSeederModule_exports\n\n\n\ncluster_RoleSeederModule_providers\n\n\n\n\nRolesSeederService \n\nRolesSeederService \n\n\n\nRoleSeederModule\n\nRoleSeederModule\n\nRolesSeederService  -->\n\nRoleSeederModule->RolesSeederService \n\n\n\n\n\nRolesSeederService\n\nRolesSeederService\n\nRoleSeederModule -->\n\nRolesSeederService->RoleSeederModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/database/seeders/role/role.module.ts\n        \n\n\n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            RolesSeederService\n                        \n                    \n                \n                \n                    Exports\n                    \n                        \n                            RolesSeederService\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { Module } from '@nestjs/common';\nimport { TypeOrmModule } from '@nestjs/typeorm';\nimport { RolesSeederService } from './role.service';\nimport { Role } from '../../../modules/management/role/role.entity';\n\n@Module({\n  imports: [TypeOrmModule.forFeature([Role])],\n  providers: [RolesSeederService],\n  exports: [RolesSeederService],\n})\nexport class RoleSeederModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/RoleService.html":{"url":"injectables/RoleService.html","title":"injectable - RoleService","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  RoleService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/modules/management/role/role.service.ts\n        \n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                getRoleByName\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(roleRepository: Repository)\n                    \n                \n                        \n                            \n                                Defined in src/modules/management/role/role.service.ts:8\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        roleRepository\n                                                  \n                                                        \n                                                                        Repository\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            getRoleByName\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    getRoleByName(name: RoleEmun)\n                \n            \n\n\n            \n                \n                    Defined in src/modules/management/role/role.service.ts:13\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    name\n                                    \n                                                RoleEmun\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { InjectRepository } from '@nestjs/typeorm';\nimport { Injectable } from '@nestjs/common';\nimport { Repository } from 'typeorm';\nimport { Role } from './role.entity';\nimport { Role as RoleEmun } from './role.enum';\n\n@Injectable()\nexport class RoleService {\n  constructor(\n    @InjectRepository(Role)\n    private roleRepository: Repository,\n  ) {}\n  async getRoleByName(name: RoleEmun): Promise {\n    return await this.roleRepository.findOne({ name });\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"guards/RolesGuard.html":{"url":"guards/RolesGuard.html","title":"guard - RolesGuard","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n    Guards\n    RolesGuard\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n        \n            \n            File\n            \n            \n                src/modules/auth/guards/roles.guard.ts\n            \n\n\n\n\n\n                \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                canActivate\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n                \n    Constructor\n        \n            \n                \n                    \nconstructor(logger: Logger, reflector: Reflector)\n                    \n                \n                        \n                            \n                                Defined in src/modules/auth/guards/roles.guard.ts:14\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        logger\n                                                  \n                                                        \n                                                                    Logger\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        reflector\n                                                  \n                                                        \n                                                                    Reflector\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n                \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            canActivate\n                        \n                        \n                    \n                \n            \n            \n                \ncanActivate(context: ExecutionContext)\n                \n            \n\n\n            \n                \n                    Defined in src/modules/auth/guards/roles.guard.ts:20\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    context\n                                    \n                                            ExecutionContext\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         boolean\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n        \n\n\n        \n            import {\n  Injectable,\n  CanActivate,\n  ExecutionContext,\n  UnauthorizedException,\n  Inject,\n} from '@nestjs/common';\nimport { Reflector } from '@nestjs/core';\n\nimport { WINSTON_MODULE_PROVIDER } from 'nest-winston';\nimport { Logger } from 'winston';\n\n@Injectable()\nexport class RolesGuard implements CanActivate {\n  constructor(\n    @Inject(WINSTON_MODULE_PROVIDER) private logger: Logger,\n    private reflector: Reflector,\n  ) {}\n\n  canActivate(context: ExecutionContext): boolean {\n    const roles = this.reflector.get('roles', context.getHandler());\n    if (roles.length === 0) {\n      return true;\n    }\n\n    const request = context.switchToHttp().getRequest();\n    const user = request.user;\n    if (roles[0] === user.role) {\n      return true;\n    }\n    this.logger.error(\n      `[AUTH] The user ${user.email} does not have enough privileges`,\n    );\n    throw new UnauthorizedException(`The user does not have enough privileges`);\n  }\n}\n\n        \n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/RolesSeederService.html":{"url":"injectables/RolesSeederService.html","title":"injectable - RolesSeederService","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  RolesSeederService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/database/seeders/role/role.service.ts\n        \n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                createRole\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(roleRepository: Repository)\n                    \n                \n                        \n                            \n                                Defined in src/database/seeders/role/role.service.ts:9\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        roleRepository\n                                                  \n                                                        \n                                                                        Repository\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            createRole\n                        \n                        \n                    \n                \n            \n            \n                \ncreateRole()\n                \n            \n\n\n            \n                \n                    Defined in src/database/seeders/role/role.service.ts:15\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :     Promise[]\n\n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { InjectRepository } from '@nestjs/typeorm';\nimport { Injectable } from '@nestjs/common';\nimport { Repository, InsertResult } from 'typeorm';\n\nimport { ROLES } from './role.data';\nimport { Role } from '../../../modules/management/role/role.entity';\n\n@Injectable()\nexport class RolesSeederService {\n  constructor(\n    @InjectRepository(Role)\n    private readonly roleRepository: Repository,\n  ) {}\n\n  createRole(): Promise[] {\n    return ROLES.map(role => this.roleRepository.insert(role));\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/RoutingNumber.html":{"url":"classes/RoutingNumber.html","title":"class - RoutingNumber","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  RoutingNumber\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/modules/bank-account/routing-number/routing-number.entity.ts\n        \n\n\n            \n                Extends\n            \n            \n                    BaseEntity\n            \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                aba\n                            \n                            \n                                ach\n                            \n                            \n                                bank\n                            \n                            \n                                bankAccount\n                            \n                            \n                                idRoutingNumber\n                            \n                            \n                                region\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            aba\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         number\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @Column()\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/modules/bank-account/routing-number/routing-number.entity.ts:22\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            ach\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         number\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @Column()\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/modules/bank-account/routing-number/routing-number.entity.ts:25\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            bank\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         Bank\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @ManyToOne(undefined, undefined, {nullable: false})@JoinColumn({name: 'fk_bank'})\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/modules/bank-account/routing-number/routing-number.entity.ts:39\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            bankAccount\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         BankAccount\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @OneToOne(undefined, undefined, {nullable: true})\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/modules/bank-account/routing-number/routing-number.entity.ts:32\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            idRoutingNumber\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         number\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @PrimaryGeneratedColumn()\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/modules/bank-account/routing-number/routing-number.entity.ts:16\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            region\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @Column()\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/modules/bank-account/routing-number/routing-number.entity.ts:19\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { BankAccount } from '../bank-account/bank-account.entity';\nimport { Bank } from '../bank/bank.entity';\nimport {\n  BaseEntity,\n  Entity,\n  PrimaryGeneratedColumn,\n  Column,\n  ManyToOne,\n  OneToMany,\n  JoinColumn,\n  OneToOne,\n} from 'typeorm';\n@Entity()\nexport class RoutingNumber extends BaseEntity {\n  @PrimaryGeneratedColumn()\n  idRoutingNumber: number;\n\n  @Column()\n  region: string;\n\n  @Column()\n  aba: number;\n\n  @Column()\n  ach: number;\n\n  @OneToOne(\n    type => BankAccount,\n    bankAccount => bankAccount.idBankAccount,\n    { nullable: true },\n  )\n  bankAccount: BankAccount;\n  @ManyToOne(\n    type => Bank,\n    bank => bank.idBank,\n    { nullable: false },\n  )\n  @JoinColumn({ name: 'fk_bank' })\n  bank: Bank;\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/Seeder.html":{"url":"injectables/Seeder.html","title":"injectable - Seeder","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  Seeder\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/database/seeders/seeder.ts\n        \n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                bank\n                            \n                            \n                                    Async\n                                clean\n                            \n                            \n                                    Async\n                                country\n                            \n                            \n                                    Async\n                                language\n                            \n                            \n                                    Async\n                                platformInterest\n                            \n                            \n                                    Async\n                                pointsConversion\n                            \n                            \n                                    Async\n                                role\n                            \n                            \n                                    Async\n                                seed\n                            \n                            \n                                    Async\n                                state\n                            \n                            \n                                    Async\n                                suscription\n                            \n                            \n                                    Async\n                                thirdPartyInterest\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(stateSeederService: StateSeederService, roleSeederService: RolesSeederService, countrySeederService: CountrySeederService, languageSeederService: LanguageSeederService, suscriptionSeederService: SuscriptionSeederService, platformInterestSeederService: PlatformInterestSeederService, thirdPartyInterestSeederService: ThirdPartyInterestSeederService, pointsConversionSeederService: PointsConversionSeederService, bankSeederService: BankSeederService)\n                    \n                \n                        \n                            \n                                Defined in src/database/seeders/seeder.ts:14\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        stateSeederService\n                                                  \n                                                        \n                                                                        StateSeederService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        roleSeederService\n                                                  \n                                                        \n                                                                        RolesSeederService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        countrySeederService\n                                                  \n                                                        \n                                                                        CountrySeederService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        languageSeederService\n                                                  \n                                                        \n                                                                        LanguageSeederService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        suscriptionSeederService\n                                                  \n                                                        \n                                                                        SuscriptionSeederService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        platformInterestSeederService\n                                                  \n                                                        \n                                                                        PlatformInterestSeederService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        thirdPartyInterestSeederService\n                                                  \n                                                        \n                                                                        ThirdPartyInterestSeederService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        pointsConversionSeederService\n                                                  \n                                                        \n                                                                        PointsConversionSeederService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        bankSeederService\n                                                  \n                                                        \n                                                                        BankSeederService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            bank\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    bank()\n                \n            \n\n\n            \n                \n                    Defined in src/database/seeders/seeder.ts:234\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :     Promise\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            clean\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    clean()\n                \n            \n\n\n            \n                \n                    Defined in src/database/seeders/seeder.ts:27\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         any\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            country\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    country()\n                \n            \n\n\n            \n                \n                    Defined in src/database/seeders/seeder.ts:150\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :     Promise\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            language\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    language()\n                \n            \n\n\n            \n                \n                    Defined in src/database/seeders/seeder.ts:163\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :     Promise\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            platformInterest\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    platformInterest()\n                \n            \n\n\n            \n                \n                    Defined in src/database/seeders/seeder.ts:204\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :     Promise\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            pointsConversion\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    pointsConversion()\n                \n            \n\n\n            \n                \n                    Defined in src/database/seeders/seeder.ts:219\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :     Promise\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            role\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    role()\n                \n            \n\n\n            \n                \n                    Defined in src/database/seeders/seeder.ts:137\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :     Promise\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            seed\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    seed()\n                \n            \n\n\n            \n                \n                    Defined in src/database/seeders/seeder.ts:31\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         any\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            state\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    state()\n                \n            \n\n\n            \n                \n                    Defined in src/database/seeders/seeder.ts:124\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :     Promise\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            suscription\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    suscription()\n                \n            \n\n\n            \n                \n                    Defined in src/database/seeders/seeder.ts:176\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :     Promise\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            thirdPartyInterest\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    thirdPartyInterest()\n                \n            \n\n\n            \n                \n                    Defined in src/database/seeders/seeder.ts:189\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :     Promise\n\n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable, Logger } from '@nestjs/common';\nimport { getConnection } from 'typeorm';\nimport { StateSeederService } from './state/state.service';\nimport { RolesSeederService } from './role/role.service';\nimport { CountrySeederService } from './country/country.service';\nimport { LanguageSeederService } from './language/language.service';\nimport { SuscriptionSeederService } from './suscription/suscription.service';\nimport { PlatformInterestSeederService } from './platform_interest/platform_interest.service';\nimport { ThirdPartyInterestSeederService } from './third_party_interest/third_party_interest.service';\nimport { PointsConversionSeederService } from './points_conversion/points_conversion.service';\nimport { BankSeederService } from './bank/bank.service';\n\n@Injectable()\nexport class Seeder {\n  constructor(\n    private readonly stateSeederService: StateSeederService,\n    private readonly roleSeederService: RolesSeederService,\n    private readonly countrySeederService: CountrySeederService,\n    private readonly languageSeederService: LanguageSeederService,\n    private readonly suscriptionSeederService: SuscriptionSeederService,\n    private readonly platformInterestSeederService: PlatformInterestSeederService,\n    private readonly thirdPartyInterestSeederService: ThirdPartyInterestSeederService,\n    private readonly pointsConversionSeederService: PointsConversionSeederService,\n    private readonly bankSeederService: BankSeederService,\n  ) {}\n\n  async clean() {\n    //   const queryRunner = getConnection().createQueryRunner();\n  }\n\n  async seed() {\n    let ROLES_ROWS = 0;\n    let STATE_ROWS = 0;\n    let COUNTRY_ROWS = 0;\n    let LANGUAGE_ROWS = 0;\n    let SUSCRIPTION_ROWS = 0;\n    let PLATFORM_ROWS = 0;\n    let THIRD_PARTY_INTEREST_ROWS = 0;\n    let POINTS_CONVERSION_ROWS = 0;\n    let BANK_ROWS = 0;\n\n    await this.role()\n      .then(completed => {\n        ROLES_ROWS = completed;\n        return ROLES_ROWS;\n      })\n      .catch(error => {\n        return Promise.reject(error);\n      });\n\n    await this.state()\n      .then(completed => {\n        STATE_ROWS = completed;\n        return STATE_ROWS;\n      })\n      .catch(error => {\n        return Promise.reject(error);\n      });\n\n    await this.country()\n      .then(completed => {\n        COUNTRY_ROWS = completed;\n        return COUNTRY_ROWS;\n      })\n      .catch(error => {\n        return Promise.reject(error);\n      });\n\n    await this.language()\n      .then(completed => {\n        LANGUAGE_ROWS = completed;\n        return LANGUAGE_ROWS;\n      })\n      .catch(error => {\n        return Promise.reject(error);\n      });\n\n    await this.suscription()\n      .then(completed => {\n        SUSCRIPTION_ROWS = completed;\n        return SUSCRIPTION_ROWS;\n      })\n      .catch(error => {\n        return Promise.reject(error);\n      });\n\n    await this.platformInterest()\n      .then(completed => {\n        PLATFORM_ROWS = completed;\n        return PLATFORM_ROWS;\n      })\n      .catch(error => {\n        return Promise.reject(error);\n      });\n\n    await this.thirdPartyInterest()\n      .then(completed => {\n        THIRD_PARTY_INTEREST_ROWS = completed;\n        return THIRD_PARTY_INTEREST_ROWS;\n      })\n      .catch(error => {\n        return Promise.reject(error);\n      });\n\n    await this.pointsConversion()\n      .then(completed => {\n        POINTS_CONVERSION_ROWS = completed;\n        return POINTS_CONVERSION_ROWS;\n      })\n      .catch(error => {\n        return Promise.reject(error);\n      });\n\n    await this.bank()\n      .then(completed => {\n        BANK_ROWS = completed;\n        return BANK_ROWS;\n      })\n      .catch(error => {\n        return Promise.reject(error);\n      });\n  }\n\n  async state(): Promise {\n    return await Promise.all(this.stateSeederService.createState())\n      .then(createdState => {\n        const STATE_ROWS = createdState.filter(\n          nullValueOrCreatedLanguage => nullValueOrCreatedLanguage,\n        ).length;\n        return STATE_ROWS;\n      })\n      .catch(error => {\n        return Promise.reject(error);\n      });\n  }\n\n  async role(): Promise {\n    return await Promise.all(this.roleSeederService.createRole())\n      .then(createdRole => {\n        const ROLE_ROW = createdRole.filter(\n          nullValueOrCreatedLanguage => nullValueOrCreatedLanguage,\n        ).length;\n        return ROLE_ROW;\n      })\n      .catch(error => {\n        return Promise.reject(error);\n      });\n  }\n\n  async country(): Promise {\n    return await Promise.all(this.countrySeederService.createCountry())\n      .then(createdCountry => {\n        const COUNTRY_ROW = createdCountry.filter(\n          nullValueOrCreatedLanguage => nullValueOrCreatedLanguage,\n        ).length;\n        return COUNTRY_ROW;\n      })\n      .catch(error => {\n        return Promise.reject(error);\n      });\n  }\n\n  async language(): Promise {\n    return await Promise.all(this.languageSeederService.createLanguage())\n      .then(createdCountry => {\n        const LANGUAGE_ROWS = createdCountry.filter(\n          nullValueOrCreatedLanguage => nullValueOrCreatedLanguage,\n        ).length;\n        return LANGUAGE_ROWS;\n      })\n      .catch(error => {\n        return Promise.reject(error);\n      });\n  }\n\n  async suscription(): Promise {\n    return await Promise.all(this.suscriptionSeederService.createSuscription())\n      .then(createdSuscription => {\n        const SUSCRIPTION_ROWS = createdSuscription.filter(\n          nullValueOrCreatedLanguage => nullValueOrCreatedLanguage,\n        ).length;\n        return SUSCRIPTION_ROWS;\n      })\n      .catch(error => {\n        return Promise.reject(error);\n      });\n  }\n\n  async thirdPartyInterest(): Promise {\n    return await Promise.all(\n      this.thirdPartyInterestSeederService.createThirdPartyInterest(),\n    )\n      .then(createdThirdPartyInterest => {\n        const THIRD_PARTY_INTEREST_ROWS = createdThirdPartyInterest.filter(\n          nullValueOrCreatedLanguage => nullValueOrCreatedLanguage,\n        ).length;\n        return THIRD_PARTY_INTEREST_ROWS;\n      })\n      .catch(error => {\n        return Promise.reject(error);\n      });\n  }\n\n  async platformInterest(): Promise {\n    return await Promise.all(\n      this.platformInterestSeederService.createPlatformInterest(),\n    )\n      .then(createdPlataformInterest => {\n        const PLATFORM_ROWS = createdPlataformInterest.filter(\n          nullValueOrCreatedLanguage => nullValueOrCreatedLanguage,\n        ).length;\n        return PLATFORM_ROWS;\n      })\n      .catch(error => {\n        return Promise.reject(error);\n      });\n  }\n\n  async pointsConversion(): Promise {\n    return await Promise.all(\n      this.pointsConversionSeederService.createPointsConversion(),\n    )\n      .then(createdPointsConversion => {\n        const POINTS_CONVERTION_ROWS = createdPointsConversion.filter(\n          nullValueOrCreatedLanguage => nullValueOrCreatedLanguage,\n        ).length;\n        return POINTS_CONVERTION_ROWS;\n      })\n      .catch(error => {\n        return Promise.reject(error);\n      });\n  }\n\n  async bank(): Promise {\n    return await Promise.all(this.bankSeederService.createBank())\n      .then(createdBank => {\n        const BANK_ROWS = createdBank.filter(\n          nullValueOrCreatedLanguage => nullValueOrCreatedLanguage,\n        ).length;\n        return BANK_ROWS;\n      })\n      .catch(error => {\n        return Promise.reject(error);\n      });\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/SeederModule.html":{"url":"modules/SeederModule.html","title":"module - SeederModule","body":"\n                   \n\n\n\n\n    Modules\n    SeederModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_SeederModule\n\n\n\ncluster_SeederModule_imports\n\n\n\ncluster_SeederModule_providers\n\n\n\n\nBankSeederModule\n\nBankSeederModule\n\n\n\nSeederModule\n\nSeederModule\n\nSeederModule -->\n\nBankSeederModule->SeederModule\n\n\n\n\n\nCountrySeederModule\n\nCountrySeederModule\n\nSeederModule -->\n\nCountrySeederModule->SeederModule\n\n\n\n\n\nLanguageSeederModule\n\nLanguageSeederModule\n\nSeederModule -->\n\nLanguageSeederModule->SeederModule\n\n\n\n\n\nPlatformInterestSeederModule\n\nPlatformInterestSeederModule\n\nSeederModule -->\n\nPlatformInterestSeederModule->SeederModule\n\n\n\n\n\nPointsConversionSeederModule\n\nPointsConversionSeederModule\n\nSeederModule -->\n\nPointsConversionSeederModule->SeederModule\n\n\n\n\n\nRoleSeederModule\n\nRoleSeederModule\n\nSeederModule -->\n\nRoleSeederModule->SeederModule\n\n\n\n\n\nStatesSeederModule\n\nStatesSeederModule\n\nSeederModule -->\n\nStatesSeederModule->SeederModule\n\n\n\n\n\nSuscriptionSeederModule\n\nSuscriptionSeederModule\n\nSeederModule -->\n\nSuscriptionSeederModule->SeederModule\n\n\n\n\n\nThirdPartyInterestSeederModule\n\nThirdPartyInterestSeederModule\n\nSeederModule -->\n\nThirdPartyInterestSeederModule->SeederModule\n\n\n\n\n\nSeeder\n\nSeeder\n\nSeederModule -->\n\nSeeder->SeederModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/database/seeders/seeder.module.ts\n        \n\n\n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            Seeder\n                        \n                    \n                \n                \n                    Imports\n                    \n                        \n                            BankSeederModule\n                        \n                        \n                            CountrySeederModule\n                        \n                        \n                            LanguageSeederModule\n                        \n                        \n                            PlatformInterestSeederModule\n                        \n                        \n                            PointsConversionSeederModule\n                        \n                        \n                            RoleSeederModule\n                        \n                        \n                            StatesSeederModule\n                        \n                        \n                            SuscriptionSeederModule\n                        \n                        \n                            ThirdPartyInterestSeederModule\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { Module, Logger } from '@nestjs/common';\nimport { Seeder } from './seeder';\nimport { StatesSeederModule } from './state/state.module';\nimport { TypeOrmModule } from '@nestjs/typeorm';\nimport { RoleSeederModule } from './role/role.module';\nimport { CountrySeederModule } from './country/country.module';\nimport { LanguageSeederModule } from './language/language.module';\nimport { SuscriptionSeederModule } from './suscription/suscription.module';\nimport { PlatformInterestSeederModule } from './platform_interest/platform_interest.module';\nimport { ThirdPartyInterestSeederModule } from './third_party_interest/third_party_interest.module';\nimport { PointsConversionSeederModule } from './points_conversion/points_conversion.module';\nimport { BankSeederModule } from './bank/bank.module';\nimport { typeOrmConfig } from './typeorm.config';\n\n@Module({\n  imports: [\n    TypeOrmModule.forRoot(typeOrmConfig),\n    StatesSeederModule,\n    RoleSeederModule,\n    CountrySeederModule,\n    LanguageSeederModule,\n    SuscriptionSeederModule,\n    PlatformInterestSeederModule,\n    ThirdPartyInterestSeederModule,\n    PointsConversionSeederModule,\n    BankSeederModule,\n  ],\n  providers: [Seeder, Logger],\n})\nexport class SeederModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/State.html":{"url":"classes/State.html","title":"class - State","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  State\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/modules/management/state/state.entity.ts\n        \n\n\n            \n                Extends\n            \n            \n                    BaseEntity\n            \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                description\n                            \n                            \n                                idState\n                            \n                            \n                                name\n                            \n                            \n                                    Optional\n                                stateBankAccount\n                            \n                            \n                                    Optional\n                                stateTransaction\n                            \n                            \n                                    Optional\n                                stateUser\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            description\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @Column({nullable: true})\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/modules/management/state/state.entity.ts:21\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            idState\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         number\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @PrimaryGeneratedColumn()\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/modules/management/state/state.entity.ts:15\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            name\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @Column()\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/modules/management/state/state.entity.ts:18\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Optional\n                            stateBankAccount\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         StateBankAccount\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @OneToMany(undefined, undefined, {nullable: true})\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/modules/management/state/state.entity.ts:35\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Optional\n                            stateTransaction\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         StateTransaction\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @OneToMany(undefined, undefined, {nullable: true})\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/modules/management/state/state.entity.ts:42\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Optional\n                            stateUser\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         StateUser\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @OneToMany(undefined, undefined, {nullable: true})\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/modules/management/state/state.entity.ts:28\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { StateUser } from '../../user/state-user/state-user.entity';\nimport { StateBankAccount } from '../../bank-account/state-bank-account/state-bank-account.entity';\nimport { StateTransaction } from '../../transaction/state-transaction/state-transaction.entity';\nimport {\n  BaseEntity,\n  Entity,\n  PrimaryGeneratedColumn,\n  Column,\n  OneToMany,\n} from 'typeorm';\n\n@Entity()\nexport class State extends BaseEntity {\n  @PrimaryGeneratedColumn()\n  idState: number;\n\n  @Column()\n  name: string;\n\n  @Column({ nullable: true })\n  description: string;\n\n  @OneToMany(\n    type => StateUser,\n    stateUser => stateUser.idStateUser,\n    { nullable: true },\n  )\n  stateUser?: StateUser;\n\n  @OneToMany(\n    type => StateBankAccount,\n    stateBankAccount => stateBankAccount.idStateBankAccount,\n    { nullable: true },\n  )\n  stateBankAccount?: StateBankAccount;\n\n  @OneToMany(\n    type => StateTransaction,\n    stateTransaction => stateTransaction.idStateTransaction,\n    { nullable: true },\n  )\n  stateTransaction?: StateTransaction;\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/StateBankAccount.html":{"url":"classes/StateBankAccount.html","title":"class - StateBankAccount","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  StateBankAccount\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/modules/bank-account/state-bank-account/state-bank-account.entity.ts\n        \n\n\n            \n                Extends\n            \n            \n                    BaseEntity\n            \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                clientbankAccount\n                            \n                            \n                                description\n                            \n                            \n                                    Optional\n                                finalDate\n                            \n                            \n                                idStateBankAccount\n                            \n                            \n                                initialDate\n                            \n                            \n                                state\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            clientbankAccount\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         ClientBankAccount\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @ManyToOne(undefined, undefined, {nullable: false})@JoinColumn({name: 'fk_client_bank_account'})\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/modules/bank-account/state-bank-account/state-bank-account.entity.ts:44\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            description\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @Column({nullable: true})\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/modules/bank-account/state-bank-account/state-bank-account.entity.ts:24\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Optional\n                            finalDate\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         Date\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @Column({type: 'timestamp', nullable: true})\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/modules/bank-account/state-bank-account/state-bank-account.entity.ts:21\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            idStateBankAccount\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         number\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @PrimaryGeneratedColumn()\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/modules/bank-account/state-bank-account/state-bank-account.entity.ts:15\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            initialDate\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         Date\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @Column({type: 'timestamp', default: undefined})\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/modules/bank-account/state-bank-account/state-bank-account.entity.ts:18\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            state\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         State\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @ManyToOne(undefined, undefined, {nullable: false})@JoinColumn({name: 'fk_state'})\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/modules/bank-account/state-bank-account/state-bank-account.entity.ts:34\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { State } from '../../management/state/state.entity';\nimport { ClientBankAccount } from '../client-bank-account/client-bank-account.entity';\nimport {\n  BaseEntity,\n  Entity,\n  PrimaryGeneratedColumn,\n  Column,\n  ManyToOne,\n  JoinColumn,\n} from 'typeorm';\n\n@Entity()\nexport class StateBankAccount extends BaseEntity {\n  @PrimaryGeneratedColumn()\n  idStateBankAccount: number;\n\n  @Column({ type: 'timestamp', default: () => 'CURRENT_TIMESTAMP' })\n  initialDate: Date;\n\n  @Column({ type: 'timestamp', nullable: true })\n  finalDate?: Date;\n\n  @Column({ nullable: true })\n  description: string;\n\n  @ManyToOne(\n    type => State,\n    state => state.idState,\n    {\n      nullable: false,\n    },\n  )\n  @JoinColumn({ name: 'fk_state' })\n  state: State;\n\n  @ManyToOne(\n    type => ClientBankAccount,\n    clientbankAccount => clientbankAccount.idClientBankAccount,\n    {\n      nullable: false,\n    },\n  )\n  @JoinColumn({ name: 'fk_client_bank_account' })\n  clientbankAccount: ClientBankAccount;\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/StateBankAccountService.html":{"url":"injectables/StateBankAccountService.html","title":"injectable - StateBankAccountService","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  StateBankAccountService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/modules/bank-account/state-bank-account/state-bank-account.service.ts\n        \n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                createStateBankAccount\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(stateService: StateService, logger: Logger)\n                    \n                \n                        \n                            \n                                Defined in src/modules/bank-account/state-bank-account/state-bank-account.service.ts:13\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        stateService\n                                                  \n                                                        \n                                                                        StateService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        logger\n                                                  \n                                                        \n                                                                    Logger\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            createStateBankAccount\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    createStateBankAccount(stateName: StateName, clientBankAccount: ClientBankAccount, description)\n                \n            \n\n\n            \n                \n                    Defined in src/modules/bank-account/state-bank-account/state-bank-account.service.ts:19\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    stateName\n                                    \n                                                StateName\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    clientBankAccount\n                                    \n                                                ClientBankAccount\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    description\n                                    \n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     {}\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable, Inject } from '@nestjs/common';\n\nimport { WINSTON_MODULE_PROVIDER } from 'nest-winston';\nimport { Logger } from 'winston';\n\nimport { StateBankAccount } from './state-bank-account.entity';\nimport { getConnection } from 'typeorm';\nimport { StateService } from '../../management/state/state.service';\nimport { ClientBankAccount } from '../client-bank-account/client-bank-account.entity';\nimport { StateName } from '../../management/state/state.enum';\n\n@Injectable()\nexport class StateBankAccountService {\n  constructor(\n    private stateService: StateService,\n    @Inject(WINSTON_MODULE_PROVIDER) private readonly logger: Logger,\n  ) {}\n\n  async createStateBankAccount(\n    stateName: StateName,\n    clientBankAccount: ClientBankAccount,\n    description,\n  ) {\n    const state = await this.stateService.getState(stateName);\n    const stateBankAccount = new StateBankAccount();\n    stateBankAccount.clientbankAccount = clientBankAccount;\n    stateBankAccount.description = description;\n    stateBankAccount.state = state;\n\n    this.logger.silly(\n      `[BANK_ACCOUNT] State of the bank account ID: ${clientBankAccount.bankAccount.idBankAccount} is ${stateName}`,\n    );\n    return await getConnection()\n      .getRepository(StateBankAccount)\n      .save(stateBankAccount);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/StateSeederService.html":{"url":"injectables/StateSeederService.html","title":"injectable - StateSeederService","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  StateSeederService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/database/seeders/state/state.service.ts\n        \n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                createState\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(stateRepository: Repository)\n                    \n                \n                        \n                            \n                                Defined in src/database/seeders/state/state.service.ts:9\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        stateRepository\n                                                  \n                                                        \n                                                                        Repository\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            createState\n                        \n                        \n                    \n                \n            \n            \n                \ncreateState()\n                \n            \n\n\n            \n                \n                    Defined in src/database/seeders/state/state.service.ts:15\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :     Promise[]\n\n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { InjectRepository } from '@nestjs/typeorm';\nimport { Injectable } from '@nestjs/common';\nimport { Repository, InsertResult } from 'typeorm';\n\nimport { STATES } from './state.data';\nimport { State } from '../../../modules/management/state/state.entity';\n\n@Injectable()\nexport class StateSeederService {\n  constructor(\n    @InjectRepository(State)\n    private readonly stateRepository: Repository,\n  ) {}\n\n  createState(): Promise[] {\n    return STATES.map(state => this.stateRepository.insert(state));\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/StateService.html":{"url":"injectables/StateService.html","title":"injectable - StateService","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  StateService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/modules/management/state/state.service.ts\n        \n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                getState\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(stateRepository: Repository)\n                    \n                \n                        \n                            \n                                Defined in src/modules/management/state/state.service.ts:10\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        stateRepository\n                                                  \n                                                        \n                                                                        Repository\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            getState\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    getState(name: StateName)\n                \n            \n\n\n            \n                \n                    Defined in src/modules/management/state/state.service.ts:16\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    name\n                                    \n                                                StateName\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@nestjs/common';\nimport { InjectRepository } from '@nestjs/typeorm';\n\nimport { Repository } from 'typeorm';\n\nimport { State } from './state.entity';\nimport { StateName } from './state.enum';\n\n@Injectable()\nexport class StateService {\n  constructor(\n    @InjectRepository(State)\n    private stateRepository: Repository,\n  ) {}\n\n  async getState(name: StateName): Promise {\n    return await this.stateRepository.findOne({ name });\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/StateTransaction.html":{"url":"classes/StateTransaction.html","title":"class - StateTransaction","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  StateTransaction\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/modules/transaction/state-transaction/state-transaction.entity.ts\n        \n\n\n            \n                Extends\n            \n            \n                    BaseEntity\n            \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Optional\n                                description\n                            \n                            \n                                finalDate\n                            \n                            \n                                idStateTransaction\n                            \n                            \n                                initialDate\n                            \n                            \n                                state\n                            \n                            \n                                transaction\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Optional\n                            description\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @Column({nullable: true})\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/modules/transaction/state-transaction/state-transaction.entity.ts:28\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            finalDate\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         Date\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @Column({nullable: true, type: 'timestamp'})\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/modules/transaction/state-transaction/state-transaction.entity.ts:25\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            idStateTransaction\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         number\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @PrimaryGeneratedColumn()\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/modules/transaction/state-transaction/state-transaction.entity.ts:16\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            initialDate\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         Date\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @Column({type: 'timestamp', default: undefined})\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/modules/transaction/state-transaction/state-transaction.entity.ts:19\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            state\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         State\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @ManyToOne(undefined, undefined, {nullable: false})@JoinColumn({name: 'fk_state'})\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/modules/transaction/state-transaction/state-transaction.entity.ts:38\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            transaction\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         Transaction\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @ManyToOne(undefined, undefined, {nullable: false})@JoinColumn({name: 'fk_transaction'})\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/modules/transaction/state-transaction/state-transaction.entity.ts:46\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import {\n  BaseEntity,\n  Entity,\n  PrimaryGeneratedColumn,\n  Column,\n  ManyToOne,\n  JoinColumn,\n} from 'typeorm';\n\nimport { State } from '../../management/state/state.entity';\nimport { Transaction } from '../transaction/transaction.entity';\n\n@Entity()\nexport class StateTransaction extends BaseEntity {\n  @PrimaryGeneratedColumn()\n  idStateTransaction: number;\n\n  @Column({ type: 'timestamp', default: () => 'CURRENT_TIMESTAMP' })\n  initialDate: Date;\n\n  @Column({\n    nullable: true,\n    type: 'timestamp',\n  })\n  finalDate: Date;\n\n  @Column({ nullable: true })\n  description?: string;\n\n  @ManyToOne(\n    type => State,\n    state => state.idState,\n    {\n      nullable: false,\n    },\n  )\n  @JoinColumn({ name: 'fk_state' })\n  state: State;\n\n  @ManyToOne(\n    type => Transaction,\n    transaction => transaction.idTransaction,\n    { nullable: false },\n  )\n  @JoinColumn({ name: 'fk_transaction' })\n  transaction: Transaction;\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/StateTransactionService.html":{"url":"injectables/StateTransactionService.html","title":"injectable - StateTransactionService","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  StateTransactionService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/modules/transaction/state-transaction/state-transaction.service.ts\n        \n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                createStateTransaction\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(stateService: StateService)\n                    \n                \n                        \n                            \n                                Defined in src/modules/transaction/state-transaction/state-transaction.service.ts:11\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        stateService\n                                                  \n                                                        \n                                                                        StateService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            createStateTransaction\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    createStateTransaction(transaction: Transaction, description: string, stateName: StateName)\n                \n            \n\n\n            \n                \n                    Defined in src/modules/transaction/state-transaction/state-transaction.service.ts:14\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    transaction\n                                    \n                                                Transaction\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    description\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    stateName\n                                    \n                                                StateName\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@nestjs/common';\n\nimport { getConnection } from 'typeorm';\n\nimport { Transaction } from '../transaction/transaction.entity';\nimport { StateName } from '../../management/state/state.enum';\nimport { StateTransaction } from './state-transaction.entity';\nimport { StateService } from '../../management/state/state.service';\n\n@Injectable()\nexport class StateTransactionService {\n  constructor(private stateService: StateService) {}\n\n  async createStateTransaction(\n    transaction: Transaction,\n    description: string,\n    stateName: StateName,\n  ): Promise {\n    const stateTransaction = new StateTransaction();\n    stateTransaction.transaction = transaction;\n    stateTransaction.description = description;\n    stateTransaction.state = await this.stateService.getState(stateName);\n\n    return await getConnection()\n      .getRepository(StateTransaction)\n      .save(stateTransaction);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/StateUser.html":{"url":"classes/StateUser.html","title":"class - StateUser","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  StateUser\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/modules/user/state-user/state-user.entity.ts\n        \n\n\n            \n                Extends\n            \n            \n                    BaseEntity\n            \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                description\n                            \n                            \n                                    Optional\n                                finalDate\n                            \n                            \n                                idStateUser\n                            \n                            \n                                initialDate\n                            \n                            \n                                state\n                            \n                            \n                                userAdministrator\n                            \n                            \n                                userClient\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            description\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @Column({nullable: true})\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/modules/user/state-user/state-user.entity.ts:26\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Optional\n                            finalDate\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         Date\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @Column({type: 'timestamp', nullable: true})\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/modules/user/state-user/state-user.entity.ts:23\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            idStateUser\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         number\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @PrimaryGeneratedColumn()\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/modules/user/state-user/state-user.entity.ts:17\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            initialDate\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         Date\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @Column({type: 'timestamp'})\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/modules/user/state-user/state-user.entity.ts:20\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            state\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         State\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @ManyToOne(undefined, undefined, {nullable: false})@JoinColumn({name: 'fk_state'})\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/modules/user/state-user/state-user.entity.ts:36\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            userAdministrator\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         UserAdministrator\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @ManyToOne(undefined, undefined, {nullable: true})@JoinColumn({name: 'fk_user_administrator'})\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/modules/user/state-user/state-user.entity.ts:54\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            userClient\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         UserClient\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @ManyToOne(undefined, undefined, {nullable: true})@JoinColumn({name: 'fk_user_client'})\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/modules/user/state-user/state-user.entity.ts:44\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import {\n  BaseEntity,\n  Entity,\n  PrimaryGeneratedColumn,\n  Column,\n  ManyToOne,\n  JoinColumn,\n} from 'typeorm';\n\nimport { UserAdministrator } from '../user-administrator/user-administrator.entity';\nimport { State } from '../../management/state/state.entity';\nimport { UserClient } from '../user-client/user-client.entity';\n\n@Entity()\nexport class StateUser extends BaseEntity {\n  @PrimaryGeneratedColumn()\n  idStateUser: number;\n\n  @Column({ type: 'timestamp' })\n  initialDate: Date;\n\n  @Column({ type: 'timestamp', nullable: true })\n  finalDate?: Date;\n\n  @Column({ nullable: true })\n  description: string;\n\n  @ManyToOne(\n    type => State,\n    state => state.idState,\n    {\n      nullable: false,\n    },\n  )\n  @JoinColumn({ name: 'fk_state' })\n  state: State;\n\n  @ManyToOne(\n    type => UserClient,\n    userClient => userClient.idUserClient,\n    { nullable: true },\n  )\n  @JoinColumn({ name: 'fk_user_client' })\n  userClient: UserClient;\n\n  @ManyToOne(\n    type => UserAdministrator,\n    userAdministrator => userAdministrator.idUserAdministrator,\n    {\n      nullable: true,\n    },\n  )\n  @JoinColumn({ name: 'fk_user_administrator' })\n  userAdministrator: UserAdministrator;\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/StateUserService.html":{"url":"injectables/StateUserService.html","title":"injectable - StateUserService","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  StateUserService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/modules/user/state-user/state-user.service.ts\n        \n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                connection\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                createClientState\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(stateService: StateService)\n                    \n                \n                        \n                            \n                                Defined in src/modules/user/state-user/state-user.service.ts:11\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        stateService\n                                                  \n                                                        \n                                                                        StateService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            createClientState\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    createClientState(user: UserClient, stateName: StateName, description: string)\n                \n            \n\n\n            \n                \n                    Defined in src/modules/user/state-user/state-user.service.ts:15\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    user\n                                    \n                                                UserClient\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    stateName\n                                    \n                                                StateName\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    description\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            connection\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : getConnection()\n                        \n                    \n                        \n                            \n                                    Defined in src/modules/user/state-user/state-user.service.ts:11\n                            \n                        \n\n\n            \n        \n\n\n    \n\n\n    \n        import { Injectable } from '@nestjs/common';\nimport { getConnection } from 'typeorm';\n\nimport { StateUser } from './state-user.entity';\nimport { StateService } from '../../management/state/state.service';\nimport { UserClient } from '../user-client/user-client.entity';\nimport { StateName } from '../../management/state/state.enum';\n\n@Injectable()\nexport class StateUserService {\n  private connection = getConnection();\n\n  constructor(private stateService: StateService) {}\n\n  async createClientState(\n    user: UserClient,\n    stateName: StateName,\n    description: string,\n  ): Promise {\n    const userState = new StateUser();\n    userState.userClient = user;\n    userState.initialDate = new Date();\n    userState.description = description;\n    userState.state = await this.stateService.getState(stateName);\n\n    return await this.connection.manager.save(userState);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/StatesSeederModule.html":{"url":"modules/StatesSeederModule.html","title":"module - StatesSeederModule","body":"\n                   \n\n\n\n\n    Modules\n    StatesSeederModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_StatesSeederModule\n\n\n\ncluster_StatesSeederModule_exports\n\n\n\ncluster_StatesSeederModule_providers\n\n\n\n\nStateSeederService \n\nStateSeederService \n\n\n\nStatesSeederModule\n\nStatesSeederModule\n\nStateSeederService  -->\n\nStatesSeederModule->StateSeederService \n\n\n\n\n\nStateSeederService\n\nStateSeederService\n\nStatesSeederModule -->\n\nStateSeederService->StatesSeederModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/database/seeders/state/state.module.ts\n        \n\n\n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            StateSeederService\n                        \n                    \n                \n                \n                    Exports\n                    \n                        \n                            StateSeederService\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { Module } from '@nestjs/common';\nimport { TypeOrmModule } from '@nestjs/typeorm';\nimport { State } from '../../../modules/management/state/state.entity';\nimport { StateSeederService } from './state.service';\n\n@Module({\n  imports: [TypeOrmModule.forFeature([State])],\n  providers: [StateSeederService],\n  exports: [StateSeederService],\n})\nexport class StatesSeederModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/Suscription.html":{"url":"classes/Suscription.html","title":"class - Suscription","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  Suscription\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/modules/suscription/suscription/suscription.entity.ts\n        \n\n\n            \n                Extends\n            \n            \n                    BaseEntity\n            \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                cost\n                            \n                            \n                                description\n                            \n                            \n                                idSuscription\n                            \n                            \n                                name\n                            \n                            \n                                platformInterest\n                            \n                            \n                                upgradedAmount\n                            \n                            \n                                userSuscription\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            cost\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         number\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @Column()\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/modules/suscription/suscription/suscription.entity.ts:20\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            description\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @Column({nullable: true})\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/modules/suscription/suscription/suscription.entity.ts:26\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            idSuscription\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         number\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @PrimaryGeneratedColumn()\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/modules/suscription/suscription/suscription.entity.ts:14\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            name\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @Column()\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/modules/suscription/suscription/suscription.entity.ts:17\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            platformInterest\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         PlatformInterest\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @OneToMany(undefined, undefined, {nullable: false})\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/modules/suscription/suscription/suscription.entity.ts:40\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            upgradedAmount\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         number\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @Column({nullable: true})\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/modules/suscription/suscription/suscription.entity.ts:23\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            userSuscription\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         UserSuscription\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @OneToMany(undefined, undefined, {nullable: true})\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/modules/suscription/suscription/suscription.entity.ts:33\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { PlatformInterest } from '../../management/platform-interest/platform-interest.entity';\nimport {\n  BaseEntity,\n  Entity,\n  PrimaryGeneratedColumn,\n  Column,\n  OneToMany,\n} from 'typeorm';\nimport { UserSuscription } from 'src/modules/user-suscription/user-suscription.entity';\n\n@Entity()\nexport class Suscription extends BaseEntity {\n  @PrimaryGeneratedColumn()\n  idSuscription: number;\n\n  @Column()\n  name: string;\n\n  @Column()\n  cost: number;\n\n  @Column({ nullable: true })\n  upgradedAmount: number;\n\n  @Column({ nullable: true })\n  description: string;\n\n  @OneToMany(\n    type => UserSuscription,\n    userSuscription => userSuscription.idUserSuscription,\n    { nullable: true },\n  )\n  userSuscription: UserSuscription;\n\n  @OneToMany(\n    type => PlatformInterest,\n    platformInterest => platformInterest.idPlatformInterest,\n    { nullable: false },\n  )\n  platformInterest: PlatformInterest;\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/SuscriptionModule.html":{"url":"modules/SuscriptionModule.html","title":"module - SuscriptionModule","body":"\n                   \n\n\n\n\n    Modules\n    SuscriptionModule\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/modules/suscription/suscription.module.ts\n        \n\n\n\n\n        \n            \n            \n        \n\n\n    \n\n\n    \n        import { Module } from '@nestjs/common';\n\n@Module({})\nexport class SuscriptionModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/SuscriptionSeederModule.html":{"url":"modules/SuscriptionSeederModule.html","title":"module - SuscriptionSeederModule","body":"\n                   \n\n\n\n\n    Modules\n    SuscriptionSeederModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_SuscriptionSeederModule\n\n\n\ncluster_SuscriptionSeederModule_exports\n\n\n\ncluster_SuscriptionSeederModule_providers\n\n\n\n\nSuscriptionSeederService \n\nSuscriptionSeederService \n\n\n\nSuscriptionSeederModule\n\nSuscriptionSeederModule\n\nSuscriptionSeederService  -->\n\nSuscriptionSeederModule->SuscriptionSeederService \n\n\n\n\n\nSuscriptionSeederService\n\nSuscriptionSeederService\n\nSuscriptionSeederModule -->\n\nSuscriptionSeederService->SuscriptionSeederModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/database/seeders/suscription/suscription.module.ts\n        \n\n\n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            SuscriptionSeederService\n                        \n                    \n                \n                \n                    Exports\n                    \n                        \n                            SuscriptionSeederService\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { Module } from '@nestjs/common';\nimport { TypeOrmModule } from '@nestjs/typeorm';\nimport { SuscriptionSeederService } from './suscription.service';\nimport { Suscription } from '../../../modules/suscription/suscription/suscription.entity';\n\n@Module({\n  imports: [TypeOrmModule.forFeature([Suscription])],\n  providers: [SuscriptionSeederService],\n  exports: [SuscriptionSeederService],\n})\nexport class SuscriptionSeederModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/SuscriptionSeederService.html":{"url":"injectables/SuscriptionSeederService.html","title":"injectable - SuscriptionSeederService","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  SuscriptionSeederService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/database/seeders/suscription/suscription.service.ts\n        \n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                createSuscription\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(suscriptionRepository: Repository)\n                    \n                \n                        \n                            \n                                Defined in src/database/seeders/suscription/suscription.service.ts:9\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        suscriptionRepository\n                                                  \n                                                        \n                                                                        Repository\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            createSuscription\n                        \n                        \n                    \n                \n            \n            \n                \ncreateSuscription()\n                \n            \n\n\n            \n                \n                    Defined in src/database/seeders/suscription/suscription.service.ts:15\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :     Promise[]\n\n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { InjectRepository } from '@nestjs/typeorm';\nimport { Injectable } from '@nestjs/common';\nimport { Repository, InsertResult } from 'typeorm';\n\nimport { SUSCRIPTIONS } from './suscription.data';\nimport { Suscription } from '../../../modules/suscription/suscription/suscription.entity';\n\n@Injectable()\nexport class SuscriptionSeederService {\n  constructor(\n    @InjectRepository(Suscription)\n    private readonly suscriptionRepository: Repository,\n  ) {}\n\n  createSuscription(): Promise[] {\n    return SUSCRIPTIONS.map(suscription =>\n      this.suscriptionRepository.insert(suscription),\n    );\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/ThirdPartyInterest.html":{"url":"classes/ThirdPartyInterest.html","title":"class - ThirdPartyInterest","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  ThirdPartyInterest\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/modules/management/third-party-interest/third-party-interest.entity.ts\n        \n\n\n            \n                Extends\n            \n            \n                    BaseEntity\n            \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                amountDollarCents\n                            \n                            \n                                finalDate\n                            \n                            \n                                idThirdPartyInterest\n                            \n                            \n                                initialDate\n                            \n                            \n                                name\n                            \n                            \n                                paymentProvider\n                            \n                            \n                                percentage\n                            \n                            \n                                transactionInterest\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            amountDollarCents\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         number\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @Column({nullable: true})\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/modules/management/third-party-interest/third-party-interest.entity.ts:22\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            finalDate\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         Date\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @Column({nullable: true})\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/modules/management/third-party-interest/third-party-interest.entity.ts:31\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            idThirdPartyInterest\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         number\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @PrimaryGeneratedColumn()\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/modules/management/third-party-interest/third-party-interest.entity.ts:13\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            initialDate\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         Date\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @Column({default: undefined})\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/modules/management/third-party-interest/third-party-interest.entity.ts:28\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            name\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @Column()\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/modules/management/third-party-interest/third-party-interest.entity.ts:16\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            paymentProvider\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @Column({nullable: true})\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/modules/management/third-party-interest/third-party-interest.entity.ts:19\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            percentage\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         number\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @Column({nullable: true})\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/modules/management/third-party-interest/third-party-interest.entity.ts:25\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            transactionInterest\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         TransactionInterest\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @OneToMany(undefined, undefined, {nullable: true})\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/modules/management/third-party-interest/third-party-interest.entity.ts:38\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import {\n  BaseEntity,\n  Entity,\n  PrimaryGeneratedColumn,\n  Column,\n  OneToMany,\n} from 'typeorm';\nimport { TransactionInterest } from '../../transaction/transaction-interest/transaction-interest.entity';\n\n@Entity()\nexport class ThirdPartyInterest extends BaseEntity {\n  @PrimaryGeneratedColumn()\n  idThirdPartyInterest: number;\n\n  @Column()\n  name: string;\n\n  @Column({ nullable: true })\n  paymentProvider: string;\n\n  @Column({ nullable: true })\n  amountDollarCents: number;\n\n  @Column({ nullable: true })\n  percentage: number;\n\n  @Column({ default: () => 'CURRENT_DATE' })\n  initialDate: Date;\n\n  @Column({ nullable: true })\n  finalDate: Date;\n\n  @OneToMany(\n    type => TransactionInterest,\n    transactionInterest => transactionInterest.idTransactionInterest,\n    { nullable: true },\n  )\n  transactionInterest: TransactionInterest;\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/ThirdPartyInterestSeederModule.html":{"url":"modules/ThirdPartyInterestSeederModule.html","title":"module - ThirdPartyInterestSeederModule","body":"\n                   \n\n\n\n\n    Modules\n    ThirdPartyInterestSeederModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_ThirdPartyInterestSeederModule\n\n\n\ncluster_ThirdPartyInterestSeederModule_exports\n\n\n\ncluster_ThirdPartyInterestSeederModule_providers\n\n\n\n\nThirdPartyInterestSeederService \n\nThirdPartyInterestSeederService \n\n\n\nThirdPartyInterestSeederModule\n\nThirdPartyInterestSeederModule\n\nThirdPartyInterestSeederService  -->\n\nThirdPartyInterestSeederModule->ThirdPartyInterestSeederService \n\n\n\n\n\nThirdPartyInterestSeederService\n\nThirdPartyInterestSeederService\n\nThirdPartyInterestSeederModule -->\n\nThirdPartyInterestSeederService->ThirdPartyInterestSeederModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/database/seeders/third_party_interest/third_party_interest.module.ts\n        \n\n\n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            ThirdPartyInterestSeederService\n                        \n                    \n                \n                \n                    Exports\n                    \n                        \n                            ThirdPartyInterestSeederService\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { Module } from '@nestjs/common';\nimport { TypeOrmModule } from '@nestjs/typeorm';\nimport { ThirdPartyInterest } from '../../../modules/management/third-party-interest/third-party-interest.entity';\nimport { ThirdPartyInterestSeederService } from './third_party_interest.service';\n\n@Module({\n  imports: [TypeOrmModule.forFeature([ThirdPartyInterest])],\n  providers: [ThirdPartyInterestSeederService],\n  exports: [ThirdPartyInterestSeederService],\n})\nexport class ThirdPartyInterestSeederModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/ThirdPartyInterestSeederService.html":{"url":"injectables/ThirdPartyInterestSeederService.html","title":"injectable - ThirdPartyInterestSeederService","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  ThirdPartyInterestSeederService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/database/seeders/third_party_interest/third_party_interest.service.ts\n        \n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                createThirdPartyInterest\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(thirdPartyInterestRepository: Repository)\n                    \n                \n                        \n                            \n                                Defined in src/database/seeders/third_party_interest/third_party_interest.service.ts:9\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        thirdPartyInterestRepository\n                                                  \n                                                        \n                                                                        Repository\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            createThirdPartyInterest\n                        \n                        \n                    \n                \n            \n            \n                \ncreateThirdPartyInterest()\n                \n            \n\n\n            \n                \n                    Defined in src/database/seeders/third_party_interest/third_party_interest.service.ts:17\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :     Promise[]\n\n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { InjectRepository } from '@nestjs/typeorm';\nimport { Injectable } from '@nestjs/common';\nimport { Repository, InsertResult } from 'typeorm';\n\nimport { ThirdPartyInterest } from '../../../modules/management/third-party-interest/third-party-interest.entity';\nimport { THIRD_PARTY_INTEREST } from './third_party_interest.data';\n\n@Injectable()\nexport class ThirdPartyInterestSeederService {\n  constructor(\n    @InjectRepository(ThirdPartyInterest)\n    private readonly thirdPartyInterestRepository: Repository,\n  ) {}\n\n  createThirdPartyInterest(): Promise[] {\n    return THIRD_PARTY_INTEREST.map(thirdPartyInterest =>\n      this.thirdPartyInterestRepository.insert(thirdPartyInterest),\n    );\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/ThirdPartyInterestService.html":{"url":"injectables/ThirdPartyInterestService.html","title":"injectable - ThirdPartyInterestService","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  ThirdPartyInterestService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/modules/management/third-party-interest/third-party-interest.service.ts\n        \n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                getThirdPartyInterest\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(thirdPartyInterestRepository: Repository)\n                    \n                \n                        \n                            \n                                Defined in src/modules/management/third-party-interest/third-party-interest.service.ts:8\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        thirdPartyInterestRepository\n                                                  \n                                                        \n                                                                        Repository\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            getThirdPartyInterest\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    getThirdPartyInterest(paymentProvider: ThirdPartyInterestEnum)\n                \n            \n\n\n            \n                \n                    Defined in src/modules/management/third-party-interest/third-party-interest.service.ts:14\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    paymentProvider\n                                    \n                                                ThirdPartyInterestEnum\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@nestjs/common';\nimport { ThirdPartyInterest as ThirdPartyInterestEnum } from './third-party-interest.enum';\nimport { ThirdPartyInterest } from './third-party-interest.entity';\nimport { Repository } from 'typeorm';\nimport { InjectRepository } from '@nestjs/typeorm';\n\n@Injectable()\nexport class ThirdPartyInterestService {\n  constructor(\n    @InjectRepository(ThirdPartyInterest)\n    private thirdPartyInterestRepository: Repository,\n  ) {}\n\n  async getThirdPartyInterest(\n    paymentProvider: ThirdPartyInterestEnum,\n  ): Promise {\n    return await this.thirdPartyInterestRepository.findOne({\n      paymentProvider,\n      finalDate: null,\n    });\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/Transaction.html":{"url":"classes/Transaction.html","title":"class - Transaction","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  Transaction\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/modules/transaction/transaction/transaction.entity.ts\n        \n\n\n            \n                Extends\n            \n            \n                    BaseEntity\n            \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                clientBankAccount\n                            \n                            \n                                idTransaction\n                            \n                            \n                                initialDate\n                            \n                            \n                                pointsConversion\n                            \n                            \n                                rawAmount\n                            \n                            \n                                stateTransaction\n                            \n                            \n                                totalAmountWithInterest\n                            \n                            \n                                transaction\n                            \n                            \n                                transactionInterest\n                            \n                            \n                                type\n                            \n                            \n                                userSuscription\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            clientBankAccount\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         ClientBankAccount\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @ManyToOne(undefined, undefined, {nullable: false})@JoinColumn({name: 'fk_client_bank_account'})\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/modules/transaction/transaction/transaction.entity.ts:78\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            idTransaction\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         number\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @PrimaryGeneratedColumn()\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/modules/transaction/transaction/transaction.entity.ts:21\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            initialDate\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         Date\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @Column({type: 'timestamp', default: undefined})\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/modules/transaction/transaction/transaction.entity.ts:24\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            pointsConversion\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         PointsConversion\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @ManyToOne(undefined, undefined, {nullable: false})@JoinColumn({name: 'fk_points_conversion'})\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/modules/transaction/transaction/transaction.entity.ts:70\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            rawAmount\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         number\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @Column('decimal', {precision: 8, scale: 3})\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/modules/transaction/transaction/transaction.entity.ts:27\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            stateTransaction\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         StateTransaction\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @OneToMany(undefined, undefined, {nullable: false})\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/modules/transaction/transaction/transaction.entity.ts:55\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            totalAmountWithInterest\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         number\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @Column('decimal', {precision: 8, scale: 3})\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/modules/transaction/transaction/transaction.entity.ts:30\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            transaction\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         Transaction\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @ManyToOne(undefined, undefined, {nullable: true})@JoinColumn({name: 'fk_transaction'})\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/modules/transaction/transaction/transaction.entity.ts:41\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            transactionInterest\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         TransactionInterest\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @OneToMany(undefined, undefined, {nullable: true})\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/modules/transaction/transaction/transaction.entity.ts:62\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            type\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         TransactionType\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @Column()\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/modules/transaction/transaction/transaction.entity.ts:33\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            userSuscription\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         UserSuscription\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @OneToOne(undefined, undefined, {nullable: true})\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/modules/transaction/transaction/transaction.entity.ts:48\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import {\n  BaseEntity,\n  Entity,\n  PrimaryGeneratedColumn,\n  Column,\n  ManyToOne,\n  JoinColumn,\n  OneToOne,\n  OneToMany,\n} from 'typeorm';\nimport { TransactionType } from './transaction.enum';\nimport { UserSuscription } from '../../user-suscription/user-suscription.entity';\nimport { PointsConversion } from '../../management/points-conversion/points-conversion.entity';\nimport { ClientBankAccount } from '../../bank-account/client-bank-account/client-bank-account.entity';\nimport { StateTransaction } from '../state-transaction/state-transaction.entity';\nimport { TransactionInterest } from '../transaction-interest/transaction-interest.entity';\n\n@Entity()\nexport class Transaction extends BaseEntity {\n  @PrimaryGeneratedColumn()\n  idTransaction: number;\n\n  @Column({ type: 'timestamp', default: () => 'CURRENT_TIMESTAMP' })\n  initialDate: Date;\n\n  @Column('decimal', { precision: 8, scale: 3 })\n  rawAmount: number;\n\n  @Column('decimal', { precision: 8, scale: 3 })\n  totalAmountWithInterest: number;\n\n  @Column()\n  type: TransactionType;\n\n  @ManyToOne(\n    type => Transaction,\n    transaction => transaction.idTransaction,\n    { nullable: true },\n  )\n  @JoinColumn({ name: 'fk_transaction' })\n  transaction: Transaction;\n\n  @OneToOne(\n    type => UserSuscription,\n    userSuscription => userSuscription.idUserSuscription,\n    { nullable: true },\n  )\n  userSuscription: UserSuscription;\n\n  @OneToMany(\n    type => StateTransaction,\n    stateTransaction => stateTransaction.idStateTransaction,\n    { nullable: false },\n  )\n  stateTransaction: StateTransaction;\n\n  @OneToMany(\n    type => TransactionInterest,\n    transactionInterest => transactionInterest.idTransactionInterest,\n    { nullable: true },\n  )\n  transactionInterest: TransactionInterest;\n\n  @ManyToOne(\n    type => PointsConversion,\n    pointsConversion => pointsConversion.idPointsConversion,\n    { nullable: false },\n  )\n  @JoinColumn({ name: 'fk_points_conversion' })\n  pointsConversion: PointsConversion;\n\n  @ManyToOne(\n    type => ClientBankAccount,\n    clientBankAccount => clientBankAccount.idClientBankAccount,\n    { nullable: false },\n  )\n  @JoinColumn({ name: 'fk_client_bank_account' })\n  clientBankAccount: ClientBankAccount;\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/TransactionInterest.html":{"url":"classes/TransactionInterest.html","title":"class - TransactionInterest","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  TransactionInterest\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/modules/transaction/transaction-interest/transaction-interest.entity.ts\n        \n\n\n            \n                Extends\n            \n            \n                    BaseEntity\n            \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                idTransactionInterest\n                            \n                            \n                                platformInterest\n                            \n                            \n                                platformInterestExtraPoints\n                            \n                            \n                                promotion\n                            \n                            \n                                thirdPartyInterest\n                            \n                            \n                                transaction\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            idTransactionInterest\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         number\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @PrimaryGeneratedColumn()\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/modules/transaction/transaction-interest/transaction-interest.entity.ts:17\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            platformInterest\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         PlatformInterest\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @ManyToOne(undefined, undefined, {nullable: true})@JoinColumn({name: 'fk_platform_interest'})\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/modules/transaction/transaction-interest/transaction-interest.entity.ts:25\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            platformInterestExtraPoints\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         PlatformInterest\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @ManyToOne(undefined, undefined, {nullable: true})@JoinColumn({name: 'fk_platform_interest_extra_points'})\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/modules/transaction/transaction-interest/transaction-interest.entity.ts:33\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            promotion\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         Promotion\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @ManyToOne(undefined, undefined, {nullable: true})@JoinColumn({name: 'fk_promotion'})\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/modules/transaction/transaction-interest/transaction-interest.entity.ts:49\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            thirdPartyInterest\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         ThirdPartyInterest\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @ManyToOne(undefined, undefined, {nullable: true})@JoinColumn({name: 'fk_third_party_interest'})\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/modules/transaction/transaction-interest/transaction-interest.entity.ts:41\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            transaction\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         Transaction\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @ManyToOne(undefined, undefined, {nullable: false})@JoinColumn({name: 'fk_transaction'})\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/modules/transaction/transaction-interest/transaction-interest.entity.ts:57\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import {\n  BaseEntity,\n  Entity,\n  PrimaryGeneratedColumn,\n  ManyToOne,\n  JoinColumn,\n} from 'typeorm';\n\nimport { PlatformInterest } from '../../management/platform-interest/platform-interest.entity';\nimport { ThirdPartyInterest } from '../../management/third-party-interest/third-party-interest.entity';\nimport { Promotion } from '../../management/promotion/promotion.entity';\nimport { Transaction } from '../transaction/transaction.entity';\n\n@Entity()\nexport class TransactionInterest extends BaseEntity {\n  @PrimaryGeneratedColumn()\n  idTransactionInterest: number;\n\n  @ManyToOne(\n    type => PlatformInterest,\n    platformInterest => platformInterest.idPlatformInterest,\n    { nullable: true },\n  )\n  @JoinColumn({ name: 'fk_platform_interest' })\n  platformInterest: PlatformInterest;\n\n  @ManyToOne(\n    type => PlatformInterest,\n    platformInterest => platformInterest.idPlatformInterest,\n    { nullable: true },\n  )\n  @JoinColumn({ name: 'fk_platform_interest_extra_points' })\n  platformInterestExtraPoints: PlatformInterest;\n\n  @ManyToOne(\n    type => ThirdPartyInterest,\n    thirdPartyInterest => thirdPartyInterest.idThirdPartyInterest,\n    { nullable: true },\n  )\n  @JoinColumn({ name: 'fk_third_party_interest' })\n  thirdPartyInterest: ThirdPartyInterest;\n\n  @ManyToOne(\n    type => Promotion,\n    promotion => promotion.idPromotion,\n    { nullable: true },\n  )\n  @JoinColumn({ name: 'fk_promotion' })\n  promotion: Promotion;\n\n  @ManyToOne(\n    type => Transaction,\n    transaction => transaction.idTransaction,\n    { nullable: false },\n  )\n  @JoinColumn({ name: 'fk_transaction' })\n  transaction: Transaction;\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/TransactionInterestService.html":{"url":"injectables/TransactionInterestService.html","title":"injectable - TransactionInterestService","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  TransactionInterestService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/modules/transaction/transaction-interest/transaction-interest.service.ts\n        \n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                createTransactionInterest\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            createTransactionInterest\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    createTransactionInterest(transaction: Transaction, thirdPartyInterest: ThirdPartyInterest, platformInterest: PlatformInterest, promotion: Promotion, platformInterestExtraPoints: PlatformInterest)\n                \n            \n\n\n            \n                \n                    Defined in src/modules/transaction/transaction-interest/transaction-interest.service.ts:13\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    transaction\n                                    \n                                                Transaction\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    thirdPartyInterest\n                                    \n                                                ThirdPartyInterest\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    platformInterest\n                                    \n                                                PlatformInterest\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    promotion\n                                    \n                                                Promotion\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    platformInterestExtraPoints\n                                    \n                                                PlatformInterest\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@nestjs/common';\n\nimport { getConnection } from 'typeorm';\n\nimport { TransactionInterest } from './transaction-interest.entity';\nimport { Transaction } from '../transaction/transaction.entity';\nimport { Promotion } from '../../management/promotion/promotion.entity';\nimport { ThirdPartyInterest } from '../../management/third-party-interest/third-party-interest.entity';\nimport { PlatformInterest } from 'src/modules/management/platform-interest/platform-interest.entity';\n\n@Injectable()\nexport class TransactionInterestService {\n  async createTransactionInterest(\n    transaction: Transaction,\n    thirdPartyInterest: ThirdPartyInterest,\n    platformInterest: PlatformInterest,\n    promotion: Promotion,\n    platformInterestExtraPoints: PlatformInterest,\n  ): Promise {\n    const transactionInterest = new TransactionInterest();\n    transactionInterest.transaction = transaction;\n    transactionInterest.thirdPartyInterest = thirdPartyInterest;\n    transactionInterest.platformInterest = platformInterest;\n    transactionInterest.promotion = promotion;\n    transactionInterest.platformInterestExtraPoints = platformInterestExtraPoints;\n\n    return await getConnection()\n      .getRepository(TransactionInterest)\n      .save(transactionInterest);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/TransactionModule.html":{"url":"modules/TransactionModule.html","title":"module - TransactionModule","body":"\n                   \n\n\n\n\n    Modules\n    TransactionModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_TransactionModule\n\n\n\ncluster_TransactionModule_imports\n\n\n\ncluster_TransactionModule_exports\n\n\n\ncluster_TransactionModule_providers\n\n\n\n\nManagementModule\n\nManagementModule\n\n\n\nTransactionModule\n\nTransactionModule\n\nTransactionModule -->\n\nManagementModule->TransactionModule\n\n\n\n\n\nStateTransactionService \n\nStateTransactionService \n\nStateTransactionService  -->\n\nTransactionModule->StateTransactionService \n\n\n\n\n\nTransactionInterestService \n\nTransactionInterestService \n\nTransactionInterestService  -->\n\nTransactionModule->TransactionInterestService \n\n\n\n\n\nTransactionService \n\nTransactionService \n\nTransactionService  -->\n\nTransactionModule->TransactionService \n\n\n\n\n\nStateTransactionService\n\nStateTransactionService\n\nTransactionModule -->\n\nStateTransactionService->TransactionModule\n\n\n\n\n\nTransactionInterestService\n\nTransactionInterestService\n\nTransactionModule -->\n\nTransactionInterestService->TransactionModule\n\n\n\n\n\nTransactionService\n\nTransactionService\n\nTransactionModule -->\n\nTransactionService->TransactionModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/modules/transaction/transaction.module.ts\n        \n\n\n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            StateTransactionService\n                        \n                        \n                            TransactionInterestService\n                        \n                        \n                            TransactionService\n                        \n                    \n                \n                \n                    Imports\n                    \n                        \n                            ManagementModule\n                        \n                    \n                \n                \n                    Exports\n                    \n                        \n                            StateTransactionService\n                        \n                        \n                            TransactionInterestService\n                        \n                        \n                            TransactionService\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { Module } from '@nestjs/common';\nimport { TypeOrmModule } from '@nestjs/typeorm';\n\n// MODULES\nimport { ManagementModule } from '../management/management.module';\n\n// SERVICES\nimport { TransactionService } from './transaction.service';\nimport { TransactionInterestService } from './transaction-interest/transaction-interest.service';\nimport { StateTransactionService } from './state-transaction/state-transaction.service';\n\n// ENTITIES\nimport { Transaction } from './transaction/transaction.entity';\nimport { TransactionInterest } from './transaction-interest/transaction-interest.entity';\n\n@Module({\n  imports: [\n    ManagementModule,\n    TypeOrmModule.forFeature([Transaction, TransactionInterest]),\n  ],\n  providers: [\n    TransactionService,\n    TransactionInterestService,\n    StateTransactionService,\n  ],\n  exports: [\n    TransactionService,\n    TransactionInterestService,\n    StateTransactionService,\n    TypeOrmModule.forFeature([Transaction, TransactionInterest]),\n  ],\n})\nexport class TransactionModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/TransactionService.html":{"url":"injectables/TransactionService.html","title":"injectable - TransactionService","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  TransactionService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/modules/transaction/transaction.service.ts\n        \n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                createTransaction\n                            \n                            \n                                    Async\n                                createVerificationTransaction\n                            \n                            \n                                generateRandomAmounts\n                            \n                            \n                                    Async\n                                getTransactionInterests\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(transactionRepository: Repository, platformInterestService: PlatformInterestService, pointsConversionService: PointsConversionService, thirdPartyInterestService: ThirdPartyInterestService, transactionInterestService: TransactionInterestService, stateTransactionService: StateTransactionService, logger: Logger)\n                    \n                \n                        \n                            \n                                Defined in src/modules/transaction/transaction.service.ts:22\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        transactionRepository\n                                                  \n                                                        \n                                                                        Repository\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        platformInterestService\n                                                  \n                                                        \n                                                                        PlatformInterestService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        pointsConversionService\n                                                  \n                                                        \n                                                                        PointsConversionService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        thirdPartyInterestService\n                                                  \n                                                        \n                                                                        ThirdPartyInterestService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        transactionInterestService\n                                                  \n                                                        \n                                                                        TransactionInterestService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        stateTransactionService\n                                                  \n                                                        \n                                                                        StateTransactionService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        logger\n                                                  \n                                                        \n                                                                    Logger\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            createTransaction\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    createTransaction(options: App.Transaction.TransactionCreation)\n                \n            \n\n\n            \n                \n                    Defined in src/modules/transaction/transaction.service.ts:60\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    options\n                                    \n                                                App.Transaction.TransactionCreation\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            createVerificationTransaction\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    createVerificationTransaction(clientBankAccount: ClientBankAccount)\n                \n            \n\n\n            \n                \n                    Defined in src/modules/transaction/transaction.service.ts:101\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    clientBankAccount\n                                    \n                                                ClientBankAccount\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            generateRandomAmounts\n                        \n                        \n                    \n                \n            \n            \n                \ngenerateRandomAmounts(amount: number, paymentProviderInterest: number)\n                \n            \n\n\n            \n                \n                    Defined in src/modules/transaction/transaction.service.ts:89\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    amount\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    paymentProviderInterest\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     {}\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            getTransactionInterests\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    getTransactionInterests(options: App.Transaction.TransactionInterests)\n                \n            \n\n\n            \n                \n                    Defined in src/modules/transaction/transaction.service.ts:36\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    options\n                                    \n                                            App.Transaction.TransactionInterests\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     {}\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable, Inject } from '@nestjs/common';\nimport { InjectRepository } from '@nestjs/typeorm';\n\nimport { WINSTON_MODULE_PROVIDER } from 'nest-winston';\nimport { Logger } from 'winston';\n\nimport { Repository } from 'typeorm';\n\nimport { PlatformInterestService } from '../management/platform-interest/platform-interest.service';\nimport { PlatformInterest } from '../management/platform-interest/platform-interest.enum';\nimport { ClientBankAccount } from '../bank-account/client-bank-account/client-bank-account.entity';\nimport { PointsConversionService } from '../management/points-conversion/points-conversion.service';\nimport { Transaction } from './transaction/transaction.entity';\nimport { ThirdPartyInterestService } from '../management/third-party-interest/third-party-interest.service';\nimport { ThirdPartyInterest } from '../management/third-party-interest/third-party-interest.enum';\nimport { TransactionType } from './transaction/transaction.enum';\nimport { StateName, StateDescription } from '../management/state/state.enum';\nimport { TransactionInterestService } from './transaction-interest/transaction-interest.service';\nimport { StateTransactionService } from './state-transaction/state-transaction.service';\n\n@Injectable()\nexport class TransactionService {\n  constructor(\n    @InjectRepository(Transaction)\n    private transactionRepository: Repository,\n    private platformInterestService: PlatformInterestService,\n    private pointsConversionService: PointsConversionService,\n    private thirdPartyInterestService: ThirdPartyInterestService,\n    private transactionInterestService: TransactionInterestService,\n    private stateTransactionService: StateTransactionService,\n    @Inject(WINSTON_MODULE_PROVIDER) private readonly logger: Logger,\n  ) {}\n\n  /* FOR ALL TYPE OF TRANSACTION */\n\n  async getTransactionInterests(options: App.Transaction.TransactionInterests) {\n    const interest = await this.platformInterestService.getInterestByName(\n      options.platformInterestType,\n    );\n\n    const extraPoints = options.platformInterestExtraPointsType\n      ? await this.platformInterestService.getInterestByName(\n          options.platformInterestExtraPointsType,\n        )\n      : null;\n\n    const pointsConversion = await this.pointsConversionService.getRecentPointsConversion();\n\n    const thirdPartyInterest = await this.thirdPartyInterestService.getThirdPartyInterest(\n      options.thirdPartyInterestType,\n    );\n    return {\n      interest,\n      extraPoints,\n      pointsConversion,\n      thirdPartyInterest,\n    };\n  }\n\n  async createTransaction(\n    options: App.Transaction.TransactionCreation,\n  ): Promise {\n    const transaction: Transaction = await this.transactionRepository.save(\n      options,\n    );\n\n    await this.stateTransactionService.createStateTransaction(\n      transaction,\n      options.stateTransactionDescription,\n      StateName.VERIFYING,\n    );\n\n    await this.transactionInterestService.createTransactionInterest(\n      transaction,\n      options.thirdPartyInterest,\n      options.platformInterest,\n      options.promotion,\n      options.platformInterestExtraPoints,\n    );\n\n    this.logger.silly(\n      `[BANK_ACCOUNT] Transaction ID: ${transaction.idTransaction} is created`,\n    );\n    return transaction;\n  }\n\n  /* FOR  BANK ACCOUNT VERIFICATION  TRANSACTION */\n\n  generateRandomAmounts(amount: number, paymentProviderInterest: number) {\n    const max = amount - paymentProviderInterest;\n    const baseRandomAmount = Number(\n      (\n        Math.random() * (max - paymentProviderInterest) +\n        paymentProviderInterest\n      ).toFixed(2),\n    );\n    const randomAmount = Number((amount - baseRandomAmount).toFixed(2));\n    return [baseRandomAmount, randomAmount];\n  }\n\n  async createVerificationTransaction(clientBankAccount: ClientBankAccount) {\n    this.logger.verbose(\n      '[BANK_ACCOUNT] Creating bank account verification transactions',\n    );\n\n    const options = await this.getTransactionInterests({\n      platformInterestType: PlatformInterest.VERIFICATION,\n      platformInterestExtraPointsType: null,\n      thirdPartyInterestType: ThirdPartyInterest.STRIPE,\n    });\n\n    const randomAmounts = this.generateRandomAmounts(\n      options.interest.amount,\n      options.thirdPartyInterest.amountDollarCents,\n    );\n\n    this.logger.verbose(\n      `[BANK_ACCOUNT] Random amounts for each transaction are: ${randomAmounts[0]} - ${randomAmounts[1]}`,\n    );\n\n    let verificationTransaction: Transaction = null;\n    for (let i = 0; i \n    \n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/TransformSignUpInterceptor.html":{"url":"injectables/TransformSignUpInterceptor.html","title":"injectable - TransformSignUpInterceptor","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  TransformSignUpInterceptor\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/modules/auth/interceptors/transform-sign-up.interceptor.ts\n        \n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                intercept\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(authService: AuthService)\n                    \n                \n                        \n                            \n                                Defined in src/modules/auth/interceptors/transform-sign-up.interceptor.ts:18\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        authService\n                                                  \n                                                        \n                                                                        AuthService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            intercept\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    intercept(context: ExecutionContext, next: CallHandler)\n                \n            \n\n\n            \n                \n                    Defined in src/modules/auth/interceptors/transform-sign-up.interceptor.ts:20\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    context\n                                    \n                                            ExecutionContext\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    next\n                                    \n                                            CallHandler\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise>>\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import {\n  Injectable,\n  NestInterceptor,\n  ExecutionContext,\n  CallHandler,\n  Inject,\n} from '@nestjs/common';\nimport { Observable } from 'rxjs';\nimport * as bcrypt from 'bcrypt';\nimport { AuthService } from '../auth.service';\n\nexport interface Response {\n  data: T;\n}\n\n@Injectable()\nexport class TransformSignUpInterceptor\n  implements NestInterceptor> {\n  constructor(@Inject(AuthService) private authService: AuthService) {}\n  async intercept(\n    context: ExecutionContext,\n    next: CallHandler,\n  ): Promise>> {\n    const req = context.switchToHttp().getRequest();\n\n    // Encrypts password only for federated sign up\n    if (req.body.password !== undefined) {\n      const salt = await bcrypt.genSalt();\n      const password = req.body.password;\n      req.body.password = await this.authService.hashPassword(password, salt);\n      req.body.salt = salt;\n    }\n    return next.handle().pipe();\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/UserAdministrator.html":{"url":"classes/UserAdministrator.html","title":"class - UserAdministrator","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  UserAdministrator\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/modules/user/user-administrator/user-administrator.entity.ts\n        \n\n\n            \n                Extends\n            \n            \n                    BaseEntity\n            \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                email\n                            \n                            \n                                idUserAdministrator\n                            \n                            \n                                    Optional\n                                password\n                            \n                            \n                                    Optional\n                                photo\n                            \n                            \n                                    Optional\n                                salt\n                            \n                            \n                                    Optional\n                                stateUser\n                            \n                            \n                                    Optional\n                                userDetails\n                            \n                            \n                                    Optional\n                                userRole\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            email\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @Column({unique: true})\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/modules/user/user-administrator/user-administrator.entity.ts:19\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            idUserAdministrator\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         number\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @PrimaryGeneratedColumn()\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/modules/user/user-administrator/user-administrator.entity.ts:16\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Optional\n                            password\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @Column()\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/modules/user/user-administrator/user-administrator.entity.ts:22\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Optional\n                            photo\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @Column({nullable: true})\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/modules/user/user-administrator/user-administrator.entity.ts:28\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Optional\n                            salt\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @Column()\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/modules/user/user-administrator/user-administrator.entity.ts:25\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Optional\n                            stateUser\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         StateUser\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @OneToMany(undefined, undefined, {nullable: true})\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/modules/user/user-administrator/user-administrator.entity.ts:35\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Optional\n                            userDetails\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         UserDetails\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @OneToOne(undefined, undefined, {nullable: true})\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/modules/user/user-administrator/user-administrator.entity.ts:42\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Optional\n                            userRole\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         UserRole\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @OneToMany(undefined, undefined, {nullable: true})\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/modules/user/user-administrator/user-administrator.entity.ts:49\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { StateUser } from '../../user/state-user/state-user.entity';\nimport { UserDetails } from '../../user/user-details/user-details.entity';\nimport { UserRole } from '../../user/user-role/user-role.entity';\nimport {\n  BaseEntity,\n  Entity,\n  PrimaryGeneratedColumn,\n  Column,\n  OneToMany,\n  OneToOne,\n} from 'typeorm';\n\n@Entity()\nexport class UserAdministrator extends BaseEntity {\n  @PrimaryGeneratedColumn()\n  idUserAdministrator: number;\n\n  @Column({ unique: true })\n  email: string;\n\n  @Column()\n  password?: string;\n\n  @Column()\n  salt?: string;\n\n  @Column({ nullable: true })\n  photo?: string;\n\n  @OneToMany(\n    type => StateUser,\n    stateUser => stateUser.idStateUser,\n    { nullable: true },\n  )\n  stateUser?: StateUser;\n\n  @OneToOne(\n    type => UserDetails,\n    userDetails => userDetails.idUserDetails,\n    { nullable: true },\n  )\n  userDetails?: UserDetails;\n\n  @OneToMany(\n    type => UserRole,\n    userRole => userRole.idUserRole,\n    { nullable: true },\n  )\n  userRole?: UserRole;\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/UserAdministratorService.html":{"url":"injectables/UserAdministratorService.html","title":"injectable - UserAdministratorService","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  UserAdministratorService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/modules/user/user-administrator/user-administrator.service.ts\n        \n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                getActiveAdministrator\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            getActiveAdministrator\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    getActiveAdministrator(email: string)\n                \n            \n\n\n            \n                \n                    Defined in src/modules/user/user-administrator/user-administrator.service.ts:12\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    email\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@nestjs/common';\n\nimport { getConnection } from 'typeorm';\n\nimport { StateUser } from '../state-user/state-user.entity';\nimport { State } from '../../management/state/state.entity';\nimport { StateName } from 'src/modules/management/state/state.enum';\nimport { UserAdministrator } from './user-administrator.entity';\n\n@Injectable()\nexport class UserAdministratorService {\n  async getActiveAdministrator(email: string): Promise {\n    return await getConnection()\n      .createQueryBuilder()\n      .select('admin')\n      .from(UserAdministrator, 'admin')\n      .innerJoin(\n        StateUser,\n        'state_user',\n        'state_user.fk_user_administrator = admin.\"idUserAdministrator\"',\n      )\n      .innerJoin(State, 'state', 'state.\"idState\" = state_user.fk_state')\n      .where(`admin.email = '${email}'`)\n      .andWhere(`state.name = '${StateName.ACTIVE}'`)\n      .andWhere('state_user.\"finalDate\" is null')\n      .getOne();\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/UserClient.html":{"url":"classes/UserClient.html","title":"class - UserClient","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  UserClient\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/modules/user/user-client/user-client.entity.ts\n        \n\n\n            \n                Extends\n            \n            \n                    BaseEntity\n            \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                clientBankAccount\n                            \n                            \n                                email\n                            \n                            \n                                facebookToken\n                            \n                            \n                                googleToken\n                            \n                            \n                                idUserClient\n                            \n                            \n                                password\n                            \n                            \n                                salt\n                            \n                            \n                                stateUser\n                            \n                            \n                                userDetails\n                            \n                            \n                                userRole\n                            \n                            \n                                userSuscription\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            clientBankAccount\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         ClientBankAccount\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @OneToMany(undefined, undefined, {nullable: true})\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/modules/user/user-client/user-client.entity.ts:72\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            email\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @Column({unique: true})\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/modules/user/user-client/user-client.entity.ts:33\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            facebookToken\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @Column({nullable: true})\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/modules/user/user-client/user-client.entity.ts:30\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            googleToken\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @Column({nullable: true})\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/modules/user/user-client/user-client.entity.ts:27\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            idUserClient\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         number\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @PrimaryGeneratedColumn()\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/modules/user/user-client/user-client.entity.ts:20\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            password\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @Column({nullable: true})@Exclude()\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/modules/user/user-client/user-client.entity.ts:37\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            salt\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @Column({nullable: true})@Exclude()\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/modules/user/user-client/user-client.entity.ts:24\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            stateUser\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         StateUser\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @OneToMany(undefined, undefined, {nullable: true})\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/modules/user/user-client/user-client.entity.ts:44\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            userDetails\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         UserDetails\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @OneToOne(undefined, undefined, {nullable: true})\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/modules/user/user-client/user-client.entity.ts:58\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            userRole\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         UserRole\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @OneToMany(undefined, undefined, {nullable: true})\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/modules/user/user-client/user-client.entity.ts:51\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            userSuscription\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         UserSuscription\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @OneToMany(undefined, undefined, {nullable: false})\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/modules/user/user-client/user-client.entity.ts:65\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import {\n  BaseEntity,\n  Entity,\n  PrimaryGeneratedColumn,\n  Column,\n  OneToMany,\n  OneToOne,\n} from 'typeorm';\nimport { Exclude } from 'class-transformer';\n\nimport { ClientBankAccount } from '../../bank-account/client-bank-account/client-bank-account.entity';\nimport { StateUser } from '../state-user/state-user.entity';\nimport { UserDetails } from '../user-details/user-details.entity';\nimport { UserRole } from '../user-role/user-role.entity';\nimport { UserSuscription } from '../../user-suscription/user-suscription.entity';\n\n@Entity()\nexport class UserClient extends BaseEntity {\n  @PrimaryGeneratedColumn()\n  idUserClient: number;\n\n  @Column({ nullable: true })\n  @Exclude()\n  salt: string;\n\n  @Column({ nullable: true })\n  googleToken: string;\n\n  @Column({ nullable: true })\n  facebookToken: string;\n\n  @Column({ unique: true })\n  email: string;\n\n  @Column({ nullable: true })\n  @Exclude()\n  password: string;\n\n  @OneToMany(\n    type => StateUser,\n    stateUser => stateUser.idStateUser,\n    { nullable: true },\n  )\n  stateUser: StateUser;\n\n  @OneToMany(\n    type => UserRole,\n    userRole => userRole.idUserRole,\n    { nullable: true },\n  )\n  userRole: UserRole;\n\n  @OneToOne(\n    type => UserDetails,\n    userDetails => userDetails.idUserDetails,\n    { nullable: true },\n  )\n  userDetails: UserDetails;\n\n  @OneToMany(\n    type => UserSuscription,\n    userSuscription => userSuscription.idUserSuscription,\n    { nullable: false },\n  )\n  userSuscription: UserSuscription;\n\n  @OneToMany(\n    type => ClientBankAccount,\n    clientBankAccount => clientBankAccount.idClientBankAccount,\n    { nullable: true },\n  )\n  clientBankAccount: ClientBankAccount;\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/UserClientService.html":{"url":"injectables/UserClientService.html","title":"injectable - UserClientService","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  UserClientService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/modules/user/user-client/user-client.service.ts\n        \n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                    Async\n                                completeRegistrationClient\n                            \n                            \n                                    Async\n                                createUser\n                            \n                            \n                                    Async\n                                findAll\n                            \n                            \n                                    Async\n                                getActiveClient\n                            \n                            \n                                    Async\n                                getClient\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(logger: Logger, userClientRepository: Repository, stateUserService: StateUserService, userRoleService: UserRoleService, userDetailsService: UserDetailsService)\n                    \n                \n                        \n                            \n                                Defined in src/modules/user/user-client/user-client.service.ts:25\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        logger\n                                                  \n                                                        \n                                                                    Logger\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        userClientRepository\n                                                  \n                                                        \n                                                                        Repository\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        stateUserService\n                                                  \n                                                        \n                                                                        StateUserService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        userRoleService\n                                                  \n                                                        \n                                                                        UserRoleService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        userDetailsService\n                                                  \n                                                        \n                                                                        UserDetailsService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Private\n                            Async\n                            completeRegistrationClient\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    completeRegistrationClient(userClient: UserClient, details)\n                \n            \n\n\n            \n                \n                    Defined in src/modules/user/user-client/user-client.service.ts:79\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    userClient\n                                    \n                                                UserClient\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    details\n                                    \n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            createUser\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    createUser(credentials: CreateUserDTO)\n                \n            \n\n\n            \n                \n                    Defined in src/modules/user/user-client/user-client.service.ts:39\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    credentials\n                                    \n                                                CreateUserDTO\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            findAll\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    findAll()\n                \n            \n\n\n            \n                \n                    Defined in src/modules/user/user-client/user-client.service.ts:35\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :     {}\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            getActiveClient\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    getActiveClient(email: string)\n                \n            \n\n\n            \n                \n                    Defined in src/modules/user/user-client/user-client.service.ts:102\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    email\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            getClient\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    getClient(email: string)\n                \n            \n\n\n            \n                \n                    Defined in src/modules/user/user-client/user-client.service.ts:119\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    email\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable, Inject, BadRequestException } from '@nestjs/common';\nimport { InjectRepository } from '@nestjs/typeorm';\n\nimport { Repository, getConnection } from 'typeorm';\nimport { WINSTON_MODULE_PROVIDER } from 'nest-winston';\nimport { Logger } from 'winston';\n\n// INTERFACES\nimport { CreateUserDTO } from '../dto/create-user.dto';\nimport { StateName } from '../../management/state/state.enum';\nimport { Role } from '../../management/role/role.enum';\n\n// SERVICES\nimport { StateUserService } from '../state-user/state-user.service';\nimport { UserRoleService } from '../user-role/user-role.service';\nimport { UserDetailsService } from '../user-details/user-details.service';\n\n//  ENTITIES\nimport { UserDetails } from '../user-details/user-details.entity';\nimport { UserClient } from './user-client.entity';\nimport { StateUser } from '../state-user/state-user.entity';\nimport { State } from '../../management/state/state.entity';\n\n@Injectable()\nexport class UserClientService {\n  constructor(\n    @Inject(WINSTON_MODULE_PROVIDER) private readonly logger: Logger,\n    @InjectRepository(UserClient)\n    private userClientRepository: Repository,\n    private stateUserService: StateUserService,\n    private userRoleService: UserRoleService,\n    private userDetailsService: UserDetailsService,\n  ) {}\n\n  async findAll() {\n    return await this.userDetailsService.findAllClients();\n  }\n\n  async createUser(credentials: CreateUserDTO): Promise {\n    const {\n      firstName,\n      lastName,\n      middleName,\n      secondLastName,\n      birthdate,\n      address,\n      phone,\n      photo,\n      ...user\n    } = credentials;\n\n    if (await this.getClient(user.email))\n      throw new BadRequestException('User already in use');\n\n    const userClient = await this.userClientRepository.save(user);\n\n    const userClientDetails = await this.completeRegistrationClient(\n      userClient,\n      {\n        firstName,\n        lastName,\n        middleName,\n        secondLastName,\n        birthdate,\n        address,\n        phone,\n        photo,\n        language: await this.userDetailsService.getLanguage('en'),\n        userClient,\n      },\n    );\n\n    this.logger.silly(\n      `[AUTH] Client with ID: ${userClient.idUserClient} is successfully registered`,\n    );\n    return userClientDetails;\n  }\n\n  private async completeRegistrationClient(\n    userClient: UserClient,\n    details,\n  ): Promise {\n    const userDetails = await this.userDetailsService.createClientDetails(\n      details,\n    );\n\n    await this.stateUserService.createClientState(\n      userClient,\n      StateName.ACTIVE,\n      null,\n    );\n\n    await this.userRoleService.createClientRole(userClient);\n\n    return {\n      user: userClient,\n      userDetails,\n      role: Role.CLIENT,\n    };\n  }\n\n  async getActiveClient(email: string): Promise {\n    return await getConnection()\n      .createQueryBuilder()\n      .select('client')\n      .from(UserClient, 'client')\n      .innerJoin(\n        StateUser,\n        'state_user',\n        'state_user.fk_user_client = client.\"idUserClient\"',\n      )\n      .innerJoin(State, 'state', 'state.\"idState\" = state_user.fk_state')\n      .where(`client.email = '${email}'`)\n      .andWhere(`state.name = '${StateName.ACTIVE}'`)\n      .andWhere('state_user.\"finalDate\" is null')\n      .getOne();\n  }\n\n  async getClient(email: string): Promise {\n    return await this.userClientRepository.findOne({ email });\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"controllers/UserController.html":{"url":"controllers/UserController.html","title":"controller - UserController","body":"\n                   \n\n\n\n\n\n\n  Controllers\n  UserController\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/modules/user/user.controller.ts\n        \n\n            \n                Prefix\n            \n            \n                user\n            \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                findAll\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            findAll\n                        \n                        \n                    \n                \n            \n            \n                \nfindAll(role: Role)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Get(':role')\n                \n            \n\n            \n                \n                    Defined in src/modules/user/user.controller.ts:26\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    role\n                                    \n                                                Role\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n\n\n    \n        import {\n  Controller,\n  Get,\n  ClassSerializerInterceptor,\n  UseInterceptors,\n  Param,\n  Inject,\n} from '@nestjs/common';\n\nimport { WINSTON_MODULE_PROVIDER } from 'nest-winston';\nimport { Logger } from 'winston';\n\nimport { HttpRequest } from './../../logger/http-requests.enum';\nimport { Role } from '../management/role/role.enum';\nimport { UserService } from './user.service';\n\n@Controller('user')\n@UseInterceptors(ClassSerializerInterceptor)\nexport class UserController {\n  constructor(\n    @Inject(WINSTON_MODULE_PROVIDER) private readonly logger: Logger,\n    private readonly userService: UserService,\n  ) {}\n\n  @Get(':role')\n  findAll(@Param('role') role: Role) {\n    this.logger.http(`[USER] (${HttpRequest.GET}) /user/${role}`);\n    return this.userService.findAll(role);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/UserDetails.html":{"url":"classes/UserDetails.html","title":"class - UserDetails","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  UserDetails\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/modules/user/user-details/user-details.entity.ts\n        \n\n\n            \n                Extends\n            \n            \n                    BaseEntity\n            \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Optional\n                                address\n                            \n                            \n                                    Optional\n                                bankAccount\n                            \n                            \n                                    Optional\n                                birthdate\n                            \n                            \n                                    Optional\n                                country\n                            \n                            \n                                firstName\n                            \n                            \n                                idUserDetails\n                            \n                            \n                                    Optional\n                                language\n                            \n                            \n                                lastName\n                            \n                            \n                                middleName\n                            \n                            \n                                    Optional\n                                phone\n                            \n                            \n                                    Optional\n                                photo\n                            \n                            \n                                    Optional\n                                secondLastName\n                            \n                            \n                                    Optional\n                                userAdministrator\n                            \n                            \n                                    Optional\n                                userClient\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Optional\n                            address\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @Column({nullable: true})\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/modules/user/user-details/user-details.entity.ts:40\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Optional\n                            bankAccount\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         BankAccount\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @OneToMany(undefined, undefined, {nullable: true})\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/modules/user/user-details/user-details.entity.ts:85\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Optional\n                            birthdate\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         Date\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @Column({nullable: true})\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/modules/user/user-details/user-details.entity.ts:37\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Optional\n                            country\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         Country\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @ManyToOne(undefined, undefined, {nullable: true})@JoinColumn({name: 'fk_country'})\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/modules/user/user-details/user-details.entity.ts:78\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            firstName\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @Column()\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/modules/user/user-details/user-details.entity.ts:25\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            idUserDetails\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         number\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @PrimaryGeneratedColumn()\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/modules/user/user-details/user-details.entity.ts:22\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Optional\n                            language\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         Language\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @ManyToOne(undefined, undefined, {nullable: true, eager: true})@JoinColumn({name: 'fk_language'})\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/modules/user/user-details/user-details.entity.ts:70\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            lastName\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @Column()\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/modules/user/user-details/user-details.entity.ts:31\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            middleName\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @Column({nullable: true})\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/modules/user/user-details/user-details.entity.ts:28\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Optional\n                            phone\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @Column({nullable: true})\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/modules/user/user-details/user-details.entity.ts:43\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Optional\n                            photo\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @Column({nullable: true})\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/modules/user/user-details/user-details.entity.ts:46\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Optional\n                            secondLastName\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @Column({nullable: true})\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/modules/user/user-details/user-details.entity.ts:34\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Optional\n                            userAdministrator\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         UserAdministrator\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @OneToOne(undefined, undefined, {nullable: true})@JoinColumn({name: 'fk_user_administrator'})\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/modules/user/user-details/user-details.entity.ts:62\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Optional\n                            userClient\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         UserClient\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @OneToOne(undefined, undefined, {nullable: true})@JoinColumn({name: 'fk_user_client'})\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/modules/user/user-details/user-details.entity.ts:54\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import {\n  BaseEntity,\n  Entity,\n  PrimaryGeneratedColumn,\n  Column,\n  ManyToOne,\n  JoinColumn,\n  OneToMany,\n  OneToOne,\n} from 'typeorm';\n\n// ENTITIES\nimport { UserClient } from '../user-client/user-client.entity';\nimport { Language } from '../language/language.entity';\nimport { Country } from '../../management/country/country.entity';\nimport { BankAccount } from '../../bank-account/bank-account/bank-account.entity';\nimport { UserAdministrator } from '../user-administrator/user-administrator.entity';\n\n@Entity()\nexport class UserDetails extends BaseEntity {\n  @PrimaryGeneratedColumn()\n  idUserDetails: number;\n\n  @Column()\n  firstName: string;\n\n  @Column({ nullable: true })\n  middleName: string;\n\n  @Column()\n  lastName: string;\n\n  @Column({ nullable: true })\n  secondLastName?: string;\n\n  @Column({ nullable: true })\n  birthdate?: Date;\n\n  @Column({ nullable: true })\n  address?: string;\n\n  @Column({ nullable: true })\n  phone?: string;\n\n  @Column({ nullable: true })\n  photo?: string;\n\n  @OneToOne(\n    type => UserClient,\n    userClient => userClient.idUserClient,\n    { nullable: true },\n  )\n  @JoinColumn({ name: 'fk_user_client' })\n  userClient?: UserClient;\n\n  @OneToOne(\n    type => UserAdministrator,\n    userAdministrator => userAdministrator.idUserAdministrator,\n    { nullable: true },\n  )\n  @JoinColumn({ name: 'fk_user_administrator' })\n  userAdministrator?: UserAdministrator;\n\n  @ManyToOne(\n    type => Language,\n    language => language.idLanguage,\n    { nullable: true, eager: true },\n  )\n  @JoinColumn({ name: 'fk_language' })\n  language?: Language;\n\n  @ManyToOne(\n    type => Country,\n    country => country.idCountry,\n    { nullable: true },\n  )\n  @JoinColumn({ name: 'fk_country' })\n  country?: Country;\n\n  @OneToMany(\n    type => BankAccount,\n    bankAccount => bankAccount.idBankAccount,\n    { nullable: true },\n  )\n  bankAccount?: BankAccount;\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/UserDetailsService.html":{"url":"injectables/UserDetailsService.html","title":"injectable - UserDetailsService","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  UserDetailsService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/modules/user/user-details/user-details.service.ts\n        \n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                createClientDetails\n                            \n                            \n                                    Async\n                                findAllClients\n                            \n                            \n                                    Async\n                                getAdministratorDetails\n                            \n                            \n                                    Async\n                                getClientDetails\n                            \n                            \n                                    Async\n                                getLanguage\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(languageRepository: Repository, userDetailsRepository: Repository)\n                    \n                \n                        \n                            \n                                Defined in src/modules/user/user-details/user-details.service.ts:12\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        languageRepository\n                                                  \n                                                        \n                                                                        Repository\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        userDetailsRepository\n                                                  \n                                                        \n                                                                        Repository\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            createClientDetails\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    createClientDetails(userClientDetails)\n                \n            \n\n\n            \n                \n                    Defined in src/modules/user/user-details/user-details.service.ts:27\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                \n                            \n                            \n                                \n                                    userClientDetails\n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            findAllClients\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    findAllClients()\n                \n            \n\n\n            \n                \n                    Defined in src/modules/user/user-details/user-details.service.ts:20\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :     {}\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            getAdministratorDetails\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    getAdministratorDetails(userAdministrator: UserAdministrator)\n                \n            \n\n\n            \n                \n                    Defined in src/modules/user/user-details/user-details.service.ts:41\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    userAdministrator\n                                    \n                                                UserAdministrator\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            getClientDetails\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    getClientDetails(userClient: UserClient)\n                \n            \n\n\n            \n                \n                    Defined in src/modules/user/user-details/user-details.service.ts:37\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    userClient\n                                    \n                                                UserClient\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            getLanguage\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    getLanguage(name: string)\n                \n            \n\n\n            \n                \n                    Defined in src/modules/user/user-details/user-details.service.ts:33\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    name\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     {}\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@nestjs/common';\nimport { InjectRepository } from '@nestjs/typeorm';\n\nimport { Repository } from 'typeorm';\n\nimport { UserDetails } from './user-details.entity';\nimport { Language } from './../language/language.entity';\nimport { UserClient } from '../user-client/user-client.entity';\nimport { UserAdministrator } from '../user-administrator/user-administrator.entity';\n\n@Injectable()\nexport class UserDetailsService {\n  constructor(\n    @InjectRepository(Language)\n    private languageRepository: Repository,\n    @InjectRepository(UserDetails)\n    private userDetailsRepository: Repository,\n  ) {}\n\n  async findAllClients() {\n    return await this.userDetailsRepository.find({\n      select: ['firstName', 'lastName'],\n      relations: ['userClient'],\n    });\n  }\n\n  async createClientDetails(userClientDetails): Promise {\n    const result = await this.userDetailsRepository.save(userClientDetails);\n    result.userClient = null;\n    return result;\n  }\n\n  async getLanguage(name: string) {\n    return await this.languageRepository.findOne({ name });\n  }\n\n  async getClientDetails(userClient: UserClient): Promise {\n    return await this.userDetailsRepository.findOne(userClient);\n  }\n\n  async getAdministratorDetails(\n    userAdministrator: UserAdministrator,\n  ): Promise {\n    return await this.userDetailsRepository.findOne(userAdministrator);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/UserModule.html":{"url":"modules/UserModule.html","title":"module - UserModule","body":"\n                   \n\n\n\n\n    Modules\n    UserModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_UserModule\n\n\n\ncluster_UserModule_imports\n\n\n\ncluster_UserModule_exports\n\n\n\ncluster_UserModule_providers\n\n\n\n\nManagementModule\n\nManagementModule\n\n\n\nUserModule\n\nUserModule\n\nUserModule -->\n\nManagementModule->UserModule\n\n\n\n\n\nStateUserService \n\nStateUserService \n\nStateUserService  -->\n\nUserModule->StateUserService \n\n\n\n\n\nUserAdministratorService \n\nUserAdministratorService \n\nUserAdministratorService  -->\n\nUserModule->UserAdministratorService \n\n\n\n\n\nUserClientService \n\nUserClientService \n\nUserClientService  -->\n\nUserModule->UserClientService \n\n\n\n\n\nUserDetailsService \n\nUserDetailsService \n\nUserDetailsService  -->\n\nUserModule->UserDetailsService \n\n\n\n\n\nUserRoleService \n\nUserRoleService \n\nUserRoleService  -->\n\nUserModule->UserRoleService \n\n\n\n\n\nUserService \n\nUserService \n\nUserService  -->\n\nUserModule->UserService \n\n\n\n\n\nStateUserService\n\nStateUserService\n\nUserModule -->\n\nStateUserService->UserModule\n\n\n\n\n\nUserAdministratorService\n\nUserAdministratorService\n\nUserModule -->\n\nUserAdministratorService->UserModule\n\n\n\n\n\nUserClientService\n\nUserClientService\n\nUserModule -->\n\nUserClientService->UserModule\n\n\n\n\n\nUserDetailsService\n\nUserDetailsService\n\nUserModule -->\n\nUserDetailsService->UserModule\n\n\n\n\n\nUserRoleService\n\nUserRoleService\n\nUserModule -->\n\nUserRoleService->UserModule\n\n\n\n\n\nUserService\n\nUserService\n\nUserModule -->\n\nUserService->UserModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/modules/user/user.module.ts\n        \n\n\n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            StateUserService\n                        \n                        \n                            UserAdministratorService\n                        \n                        \n                            UserClientService\n                        \n                        \n                            UserDetailsService\n                        \n                        \n                            UserRoleService\n                        \n                        \n                            UserService\n                        \n                    \n                \n                \n                    Controllers\n                    \n                        \n                            UserController\n                        \n                    \n                \n                \n                    Imports\n                    \n                        \n                            ManagementModule\n                        \n                    \n                \n                \n                    Exports\n                    \n                        \n                            StateUserService\n                        \n                        \n                            UserAdministratorService\n                        \n                        \n                            UserClientService\n                        \n                        \n                            UserDetailsService\n                        \n                        \n                            UserRoleService\n                        \n                        \n                            UserService\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { Module } from '@nestjs/common';\nimport { TypeOrmModule } from '@nestjs/typeorm';\n\n// MODULES\nimport { ManagementModule } from '../management/management.module';\n\n// CONTROLLER\nimport { UserController } from './user.controller';\n\n// SERVICES\nimport { StateUserService } from './state-user/state-user.service';\nimport { UserDetailsService } from './user-details/user-details.service';\nimport { UserRoleService } from './user-role/user-role.service';\nimport { UserService } from './user.service';\nimport { UserAdministratorService } from './user-administrator/user-administrator.service';\nimport { UserClientService } from './user-client/user-client.service';\n\n// ENTITIES\nimport { StateUser } from './state-user/state-user.entity';\nimport { UserDetails } from './user-details/user-details.entity';\nimport { Language } from './language/language.entity';\nimport { State } from '../management/state/state.entity';\nimport { UserClient } from './user-client/user-client.entity';\n\n@Module({\n  imports: [\n    ManagementModule,\n    TypeOrmModule.forFeature([\n      StateUser,\n      UserDetails,\n      Language,\n      State,\n      UserClient,\n    ]),\n  ],\n  controllers: [UserController],\n  providers: [\n    StateUserService,\n    UserDetailsService,\n    UserRoleService,\n    UserService,\n    UserAdministratorService,\n    UserClientService,\n  ],\n  exports: [\n    StateUserService,\n    UserDetailsService,\n    UserRoleService,\n    UserService,\n    UserAdministratorService,\n    UserClientService,\n  ],\n})\nexport class UserModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/UserRole.html":{"url":"classes/UserRole.html","title":"class - UserRole","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  UserRole\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/modules/user/user-role/user-role.entity.ts\n        \n\n\n            \n                Extends\n            \n            \n                    BaseEntity\n            \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                idUserRole\n                            \n                            \n                                role\n                            \n                            \n                                    Optional\n                                userAdministrator\n                            \n                            \n                                    Optional\n                                userClient\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            idUserRole\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         number\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @PrimaryGeneratedColumn()\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/modules/user/user-role/user-role.entity.ts:17\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            role\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         Role\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @ManyToOne(undefined, undefined, {nullable: false})@JoinColumn({name: 'fk_role'})\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/modules/user/user-role/user-role.entity.ts:41\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Optional\n                            userAdministrator\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         UserAdministrator\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @ManyToOne(undefined, undefined, {nullable: true})@JoinColumn({name: 'fk_user_administrator'})\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/modules/user/user-role/user-role.entity.ts:25\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Optional\n                            userClient\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         UserClient\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @ManyToOne(undefined, undefined, {nullable: true})@JoinColumn({name: 'fk_user_client'})\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/modules/user/user-role/user-role.entity.ts:33\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import {\n  BaseEntity,\n  Entity,\n  PrimaryGeneratedColumn,\n  ManyToOne,\n  JoinColumn,\n} from 'typeorm';\n\n// ENTITIES\nimport { UserAdministrator } from '../user-administrator/user-administrator.entity';\nimport { Role } from '../../management/role/role.entity';\nimport { UserClient } from '../user-client/user-client.entity';\n\n@Entity()\nexport class UserRole extends BaseEntity {\n  @PrimaryGeneratedColumn()\n  idUserRole: number;\n\n  @ManyToOne(\n    type => UserAdministrator,\n    userAdministrator => userAdministrator.idUserAdministrator,\n    { nullable: true },\n  )\n  @JoinColumn({ name: 'fk_user_administrator' })\n  userAdministrator?: UserAdministrator;\n\n  @ManyToOne(\n    type => UserClient,\n    userClient => userClient.idUserClient,\n    { nullable: true },\n  )\n  @JoinColumn({ name: 'fk_user_client' })\n  userClient?: UserClient;\n\n  @ManyToOne(\n    type => Role,\n    role => role.idRole,\n    { nullable: false },\n  )\n  @JoinColumn({ name: 'fk_role' })\n  role: Role;\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/UserRoleService.html":{"url":"injectables/UserRoleService.html","title":"injectable - UserRoleService","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  UserRoleService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/modules/user/user-role/user-role.service.ts\n        \n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                connection\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                createClientRole\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(roleService: RoleService)\n                    \n                \n                        \n                            \n                                Defined in src/modules/user/user-role/user-role.service.ts:12\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        roleService\n                                                  \n                                                        \n                                                                        RoleService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            createClientRole\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    createClientRole(user: UserClient)\n                \n            \n\n\n            \n                \n                    Defined in src/modules/user/user-role/user-role.service.ts:16\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    user\n                                    \n                                                UserClient\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            connection\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : getConnection()\n                        \n                    \n                        \n                            \n                                    Defined in src/modules/user/user-role/user-role.service.ts:12\n                            \n                        \n\n\n            \n        \n\n\n    \n\n\n    \n        import { Injectable } from '@nestjs/common';\n\nimport { getConnection } from 'typeorm';\n\nimport { UserClient } from '../user-client/user-client.entity';\nimport { RoleService } from '../../management/role/role.service';\nimport { Role } from 'src/modules/management/role/role.enum';\nimport { UserRole } from './user-role.entity';\n\n@Injectable()\nexport class UserRoleService {\n  private connection = getConnection();\n\n  constructor(private roleService: RoleService) {}\n\n  async createClientRole(user: UserClient): Promise {\n    const role = await this.roleService.getRoleByName(Role.CLIENT);\n\n    const userRole = new UserRole();\n    userRole.role = role;\n    userRole.userClient = user;\n\n    return await this.connection.manager.save(userRole);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/UserService.html":{"url":"injectables/UserService.html","title":"injectable - UserService","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  UserService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/modules/user/user.service.ts\n        \n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                findAll\n                            \n                            \n                                    Async\n                                getUserByEmail\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(userClientService: UserClientService, userAdministratorService: UserAdministratorService, userDetailsService: UserDetailsService)\n                    \n                \n                        \n                            \n                                Defined in src/modules/user/user.service.ts:9\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        userClientService\n                                                  \n                                                        \n                                                                        UserClientService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        userAdministratorService\n                                                  \n                                                        \n                                                                        UserAdministratorService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        userDetailsService\n                                                  \n                                                        \n                                                                        UserDetailsService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            findAll\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    findAll(role: string)\n                \n            \n\n\n            \n                \n                    Defined in src/modules/user/user.service.ts:16\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    role\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     {}\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            getUserByEmail\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    getUserByEmail(credentials: App.Auth.LoginRequest)\n                \n            \n\n\n            \n                \n                    Defined in src/modules/user/user.service.ts:26\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    credentials\n                                    \n                                            App.Auth.LoginRequest\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     {}\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@nestjs/common';\n\nimport { Role as RoleEnum } from 'src/modules/management/role/role.enum';\nimport { UserClientService } from './user-client/user-client.service';\nimport { UserAdministratorService } from './user-administrator/user-administrator.service';\nimport { UserDetailsService } from './user-details/user-details.service';\n\n@Injectable()\nexport class UserService {\n  constructor(\n    private userClientService: UserClientService,\n    private userAdministratorService: UserAdministratorService,\n    private userDetailsService: UserDetailsService,\n  ) {}\n\n  async findAll(role: string) {\n    if (role === RoleEnum.CLIENT) {\n      const clients = await this.userClientService.findAll();\n      return clients;\n    } else if (role === RoleEnum.ADMINISTRATOR) {\n      // const admins = await this.userAdministratorService.findAll();\n      // return admins;\n    }\n  }\n\n  async getUserByEmail(credentials: App.Auth.LoginRequest) {\n    const { email, role } = credentials;\n    let user, userDetails;\n    if (role === RoleEnum.ADMINISTRATOR) {\n      user = await this.userAdministratorService.getActiveAdministrator(email);\n      userDetails = await this.userDetailsService.getAdministratorDetails(user);\n    } else {\n      user = await this.userClientService.getActiveClient(email);\n      userDetails = await this.userDetailsService.getClientDetails(user);\n    }\n\n    if (user) {\n      const credentials = {\n        password: user.password,\n        email: user.email,\n        salt: user.salt,\n      };\n      return { user: credentials, userDetails };\n    }\n    return null;\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/UserSuscription.html":{"url":"classes/UserSuscription.html","title":"class - UserSuscription","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  UserSuscription\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/modules/user-suscription/user-suscription.entity.ts\n        \n\n\n            \n                Extends\n            \n            \n                    BaseEntity\n            \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                finalDate\n                            \n                            \n                                idUserSuscription\n                            \n                            \n                                initialDate\n                            \n                            \n                                suscription\n                            \n                            \n                                transaction\n                            \n                            \n                                upgradedAmount\n                            \n                            \n                                userClient\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            finalDate\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @Column({nullable: true})\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/modules/user-suscription/user-suscription.entity.ts:28\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            idUserSuscription\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         number\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @PrimaryGeneratedColumn()\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/modules/user-suscription/user-suscription.entity.ts:19\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            initialDate\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         Date\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @Column({default: undefined})\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/modules/user-suscription/user-suscription.entity.ts:22\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            suscription\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         Suscription\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @ManyToOne(undefined, undefined, {nullable: false})@JoinColumn({name: 'fk_suscription'})\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/modules/user-suscription/user-suscription.entity.ts:44\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            transaction\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         Transaction\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @OneToOne(undefined, undefined, {nullable: false})@JoinColumn({name: 'fk_transaction'})\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/modules/user-suscription/user-suscription.entity.ts:52\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            upgradedAmount\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         number\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @Column({nullable: true})\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/modules/user-suscription/user-suscription.entity.ts:25\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            userClient\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         UserClient\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @ManyToOne(undefined, undefined, {nullable: false})@JoinColumn({name: 'fk_user_client'})\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/modules/user-suscription/user-suscription.entity.ts:36\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import {\n  BaseEntity,\n  Entity,\n  PrimaryGeneratedColumn,\n  Column,\n  ManyToOne,\n  JoinColumn,\n  OneToOne,\n} from 'typeorm';\n\n// ENTITIES\nimport { UserClient } from '../user/user-client/user-client.entity';\nimport { Suscription } from '../suscription/suscription/suscription.entity';\nimport { Transaction } from '../transaction/transaction/transaction.entity';\n\n@Entity()\nexport class UserSuscription extends BaseEntity {\n  @PrimaryGeneratedColumn()\n  idUserSuscription: number;\n\n  @Column({ default: () => 'CURRENT_TIMESTAMP' })\n  initialDate: Date;\n\n  @Column({ nullable: true })\n  upgradedAmount: number;\n\n  @Column({ nullable: true })\n  finalDate: string;\n\n  @ManyToOne(\n    type => UserClient,\n    userClient => userClient.idUserClient,\n    { nullable: false },\n  )\n  @JoinColumn({ name: 'fk_user_client' })\n  userClient: UserClient;\n\n  @ManyToOne(\n    type => Suscription,\n    suscription => suscription.idSuscription,\n    { nullable: false },\n  )\n  @JoinColumn({ name: 'fk_suscription' })\n  suscription: Suscription;\n\n  @OneToOne(\n    type => Transaction,\n    transaction => transaction.idTransaction,\n    { nullable: false },\n  )\n  @JoinColumn({ name: 'fk_transaction' })\n  transaction: Transaction;\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"coverage.html":{"url":"coverage.html","title":"coverage - coverage","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n    Documentation coverage\n\n\n\n    \n\n\n\n    \n        \n            File\n            Type\n            Identifier\n            Statements\n        \n    \n    \n        \n            \n                \n                src/database/database.service.ts\n            \n            variable\n            dataBaseProvider\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/database/seeders/bank/bank.data.ts\n            \n            variable\n            BANK\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/database/seeders/bank/bank.service.ts\n            \n            injectable\n            BankSeederService\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/database/seeders/country/country.data.ts\n            \n            variable\n            COUNTRIES\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/database/seeders/country/country.service.ts\n            \n            injectable\n            CountrySeederService\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/database/seeders/language/language.data.ts\n            \n            variable\n            LANGUAGES\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/database/seeders/language/language.service.ts\n            \n            injectable\n            LanguageSeederService\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/database/seeders/platform_interest/platform_interest.data.ts\n            \n            variable\n            PLATAFORM_INTERESTS\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/database/seeders/platform_interest/platform_interest.service.ts\n            \n            injectable\n            PlatformInterestSeederService\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/database/seeders/points_conversion/points_conversion.data.ts\n            \n            variable\n            POINTS_CONVERSION\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/database/seeders/points_conversion/points_conversion.service.ts\n            \n            injectable\n            PointsConversionSeederService\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/database/seeders/role/role.data.ts\n            \n            variable\n            ROLES\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/database/seeders/role/role.service.ts\n            \n            injectable\n            RolesSeederService\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/database/seeders/seeder.ts\n            \n            injectable\n            Seeder\n            \n                0 %\n                (0/13)\n            \n        \n        \n            \n                \n                src/database/seeders/state/state.data.ts\n            \n            variable\n            STATES\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/database/seeders/state/state.service.ts\n            \n            injectable\n            StateSeederService\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/database/seeders/suscription/suscription.data.ts\n            \n            variable\n            SUSCRIPTIONS\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/database/seeders/suscription/suscription.service.ts\n            \n            injectable\n            SuscriptionSeederService\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/database/seeders/third_party_interest/third_party_interest.data.ts\n            \n            variable\n            THIRD_PARTY_INTEREST\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/database/seeders/third_party_interest/third_party_interest.service.ts\n            \n            injectable\n            ThirdPartyInterestSeederService\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/database/seeders/typeorm.config.ts\n            \n            variable\n            dbConfig\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/database/seeders/typeorm.config.ts\n            \n            variable\n            typeOrmConfig\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/logger/winston/format.ts\n            \n            variable\n            commonFormat\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/logger/winston/format.ts\n            \n            variable\n            consoleFormat\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/logger/winston/format.ts\n            \n            variable\n            fileFormat\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/logger/winston/winston-config.ts\n            \n            interface\n            createOptionsParams\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                src/logger/winston/winston-config.ts\n            \n            function\n            createDir\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/logger/winston/winston-config.ts\n            \n            function\n            createOptions\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/main.ts\n            \n            function\n            bootstrap\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/modules/auth/auth.controller.ts\n            \n            controller\n            AuthController\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/modules/auth/auth.service.ts\n            \n            injectable\n            AuthService\n            \n                0 %\n                (0/7)\n            \n        \n        \n            \n                \n                src/modules/auth/decorators/get-user.decorator.ts\n            \n            variable\n            GetUser\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/modules/auth/decorators/roles.decorator.ts\n            \n            variable\n            Roles\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/modules/auth/guards/roles.guard.ts\n            \n            guard\n            RolesGuard\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/modules/auth/interceptors/transform-sign-up.interceptor.ts\n            \n            injectable\n            TransformSignUpInterceptor\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/modules/auth/interceptors/transform-sign-up.interceptor.ts\n            \n            interface\n            Response\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                src/modules/auth/jwt.strategy.ts\n            \n            injectable\n            JwtStrategy\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/modules/bank-account/bank-account.controller.ts\n            \n            controller\n            BankAccountController\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                src/modules/bank-account/bank-account.service.ts\n            \n            injectable\n            BankAccountService\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                src/modules/bank-account/bank-account/bank-account.entity.ts\n            \n            class\n            BankAccount\n            \n                0 %\n                (0/9)\n            \n        \n        \n            \n                \n                src/modules/bank-account/bank-account/dto/createBankAccount.dto.ts\n            \n            class\n            CreateBankAccountDTO\n            \n                0 %\n                (0/6)\n            \n        \n        \n            \n                \n                src/modules/bank-account/bank/bank.entity.ts\n            \n            class\n            Bank\n            \n                0 %\n                (0/5)\n            \n        \n        \n            \n                \n                src/modules/bank-account/client-bank-account/client-bank-account.entity.ts\n            \n            class\n            ClientBankAccount\n            \n                0 %\n                (0/6)\n            \n        \n        \n            \n                \n                src/modules/bank-account/client-bank-account/client-bank-account.service.ts\n            \n            injectable\n            ClientBankAccountService\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/modules/bank-account/routing-number/routing-number.entity.ts\n            \n            class\n            RoutingNumber\n            \n                0 %\n                (0/7)\n            \n        \n        \n            \n                \n                src/modules/bank-account/state-bank-account/state-bank-account.entity.ts\n            \n            class\n            StateBankAccount\n            \n                0 %\n                (0/7)\n            \n        \n        \n            \n                \n                src/modules/bank-account/state-bank-account/state-bank-account.service.ts\n            \n            injectable\n            StateBankAccountService\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/modules/example/example.controller.ts\n            \n            controller\n            ExampleController\n            \n                0 %\n                (0/5)\n            \n        \n        \n            \n                \n                src/modules/language/language.controller.ts\n            \n            controller\n            LanguageController\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                src/modules/language/language.service.ts\n            \n            injectable\n            LanguageService\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/modules/language/poeditor/poeditor.service.ts\n            \n            injectable\n            PoeditorService\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/modules/mails/mails.service.ts\n            \n            injectable\n            MailsService\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/modules/mails/sendGrid.config.ts\n            \n            variable\n            SendGridConfig\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/modules/management/country/country.entity.ts\n            \n            class\n            Country\n            \n                0 %\n                (0/5)\n            \n        \n        \n            \n                \n                src/modules/management/platform-interest/platform-interest.entity.ts\n            \n            class\n            PlatformInterest\n            \n                0 %\n                (0/10)\n            \n        \n        \n            \n                \n                src/modules/management/platform-interest/platform-interest.service.ts\n            \n            injectable\n            PlatformInterestService\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/modules/management/points-conversion/points-conversion.entity.ts\n            \n            class\n            PointsConversion\n            \n                0 %\n                (0/6)\n            \n        \n        \n            \n                \n                src/modules/management/points-conversion/points-conversion.service.ts\n            \n            injectable\n            PointsConversionService\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/modules/management/promotion/promotion.entity.ts\n            \n            class\n            Promotion\n            \n                0 %\n                (0/11)\n            \n        \n        \n            \n                \n                src/modules/management/role/role.entity.ts\n            \n            class\n            Role\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                src/modules/management/role/role.service.ts\n            \n            injectable\n            RoleService\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/modules/management/state/state.entity.ts\n            \n            class\n            State\n            \n                0 %\n                (0/7)\n            \n        \n        \n            \n                \n                src/modules/management/state/state.service.ts\n            \n            injectable\n            StateService\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/modules/management/third-party-interest/third-party-interest.entity.ts\n            \n            class\n            ThirdPartyInterest\n            \n                0 %\n                (0/9)\n            \n        \n        \n            \n                \n                src/modules/management/third-party-interest/third-party-interest.service.ts\n            \n            injectable\n            ThirdPartyInterestService\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/modules/suscription/suscription/suscription.entity.ts\n            \n            class\n            Suscription\n            \n                0 %\n                (0/8)\n            \n        \n        \n            \n                \n                src/modules/transaction/state-transaction/state-transaction.entity.ts\n            \n            class\n            StateTransaction\n            \n                0 %\n                (0/7)\n            \n        \n        \n            \n                \n                src/modules/transaction/state-transaction/state-transaction.service.ts\n            \n            injectable\n            StateTransactionService\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/modules/transaction/transaction-interest/transaction-interest.entity.ts\n            \n            class\n            TransactionInterest\n            \n                0 %\n                (0/7)\n            \n        \n        \n            \n                \n                src/modules/transaction/transaction-interest/transaction-interest.service.ts\n            \n            injectable\n            TransactionInterestService\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                src/modules/transaction/transaction.service.ts\n            \n            injectable\n            TransactionService\n            \n                0 %\n                (0/6)\n            \n        \n        \n            \n                \n                src/modules/transaction/transaction/transaction.entity.ts\n            \n            class\n            Transaction\n            \n                0 %\n                (0/12)\n            \n        \n        \n            \n                \n                src/modules/user-suscription/user-suscription.entity.ts\n            \n            class\n            UserSuscription\n            \n                0 %\n                (0/8)\n            \n        \n        \n            \n                \n                src/modules/user/dto/create-user.dto.ts\n            \n            class\n            CreateUserDTO\n            \n                0 %\n                (0/14)\n            \n        \n        \n            \n                \n                src/modules/user/language/language.entity.ts\n            \n            class\n            Language\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                src/modules/user/state-user/state-user.entity.ts\n            \n            class\n            StateUser\n            \n                0 %\n                (0/8)\n            \n        \n        \n            \n                \n                src/modules/user/state-user/state-user.service.ts\n            \n            injectable\n            StateUserService\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                src/modules/user/user-administrator/user-administrator.entity.ts\n            \n            class\n            UserAdministrator\n            \n                0 %\n                (0/9)\n            \n        \n        \n            \n                \n                src/modules/user/user-administrator/user-administrator.service.ts\n            \n            injectable\n            UserAdministratorService\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                src/modules/user/user-client/user-client.entity.ts\n            \n            class\n            UserClient\n            \n                0 %\n                (0/12)\n            \n        \n        \n            \n                \n                src/modules/user/user-client/user-client.service.ts\n            \n            injectable\n            UserClientService\n            \n                0 %\n                (0/7)\n            \n        \n        \n            \n                \n                src/modules/user/user-details/user-details.entity.ts\n            \n            class\n            UserDetails\n            \n                0 %\n                (0/15)\n            \n        \n        \n            \n                \n                src/modules/user/user-details/user-details.service.ts\n            \n            injectable\n            UserDetailsService\n            \n                0 %\n                (0/7)\n            \n        \n        \n            \n                \n                src/modules/user/user-role/user-role.entity.ts\n            \n            class\n            UserRole\n            \n                0 %\n                (0/5)\n            \n        \n        \n            \n                \n                src/modules/user/user-role/user-role.service.ts\n            \n            injectable\n            UserRoleService\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                src/modules/user/user.controller.ts\n            \n            controller\n            UserController\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                src/modules/user/user.service.ts\n            \n            injectable\n            UserService\n            \n                0 %\n                (0/4)\n            \n        \n    \n\n\n\n\n\n    new Tablesort(document.getElementById('coverage-table'));\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/createOptionsParams.html":{"url":"interfaces/createOptionsParams.html","title":"interface - createOptionsParams","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  createOptionsParams\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/logger/winston/winston-config.ts\n        \n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        fileName\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        fileName\n                                    \n                                \n                                \n                                    \n                                        fileName:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import * as winston from 'winston';\nimport { WinstonModuleOptions } from 'nest-winston';\n\nimport { consoleFormat, fileFormat } from './format';\nimport * as fs from 'fs';\n\ninterface createOptionsParams {\n  fileName: string;\n}\n\nfunction createOptions(params: createOptionsParams): WinstonModuleOptions {\n  const actualPath =\n    process.env.NODE_ENV === 'development'\n      ? `${__dirname}/../../../../`\n      : `${__dirname}/../../../../`;\n\n  return {\n    transports: [\n      new winston.transports.Console({\n        level: 'silly',\n        format: consoleFormat,\n      }),\n      new winston.transports.File({\n        level: 'silly',\n        format: fileFormat,\n        maxsize: 5120000,\n        maxFiles: 5,\n        filename: `${actualPath}/logs/${params.fileName}`,\n      }),\n    ],\n  };\n}\n\nfunction createDir(dir): void {\n  if (!fs.existsSync(dir)) {\n    fs.mkdirSync(dir);\n  }\n}\n\nexport default createOptions;\n\n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"dependencies.html":{"url":"dependencies.html","title":"package-dependencies - dependencies","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n        Dependencies\n    \n    \n        \n            @compodoc/compodoc : ^1.1.11\n        \n            @nestjs/common : ^7.0.0\n        \n            @nestjs/config : ^0.4.0\n        \n            @nestjs/core : ^7.0.0\n        \n            @nestjs/jwt : ^7.0.0\n        \n            @nestjs/passport : ^7.0.0\n        \n            @nestjs/platform-express : ^7.0.0\n        \n            @nestjs/typeorm : ^7.0.0\n        \n            @ntegral/nestjs-sendgrid : ^1.0.0\n        \n            @sendgrid/mail : ^7.1.0\n        \n            bcrypt : ^4.0.1\n        \n            class-transformer : ^0.2.3\n        \n            class-validator : ^0.12.2\n        \n            config : ^3.3.1\n        \n            form-data : ^3.0.0\n        \n            helmet : ^3.22.0\n        \n            install : ^0.13.0\n        \n            nest-winston : ^1.3.4\n        \n            npm : ^6.14.4\n        \n            passport : ^0.4.1\n        \n            passport-jwt : ^4.0.0\n        \n            passport-local : ^1.0.0\n        \n            pg : ^8.0.3\n        \n            reflect-metadata : ^0.1.13\n        \n            rimraf : ^3.0.2\n        \n            rxjs : ^6.5.4\n        \n            typeorm : ^0.2.24\n        \n            typeorm-seeding : ^1.6.1\n        \n            typescript-seed : ^1.0.0\n        \n            winston : ^3.2.1\n    \n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/enumerations.html":{"url":"miscellaneous/enumerations.html","title":"miscellaneous-enumerations - enumerations","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n  Miscellaneous\n  Enumerations\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            HttpRequest   (src/.../http-requests.enum.ts)\n                        \n                        \n                            MailsSubject   (src/.../mails.enum.ts)\n                        \n                        \n                            PlatformInterest   (src/.../platform-interest.enum.ts)\n                        \n                        \n                            Role   (src/.../role.enum.ts)\n                        \n                        \n                            StateDescription   (src/.../state.enum.ts)\n                        \n                        \n                            StateName   (src/.../state.enum.ts)\n                        \n                        \n                            StateType   (src/.../state.enum.ts)\n                        \n                        \n                            ThirdPartyInterest   (src/.../third-party-interest.enum.ts)\n                        \n                        \n                            TransactionType   (src/.../transaction.enum.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    src/logger/http-requests.enum.ts\n    \n        \n            \n                \n                    \n                        \n                        HttpRequest\n                    \n                \n                        \n                            \n                                 GET\n                            \n                        \n                        \n                            \n                                Value : GET\n                            \n                        \n                        \n                            \n                                 POST\n                            \n                        \n                        \n                            \n                                Value : POST\n                            \n                        \n                        \n                            \n                                 PUT\n                            \n                        \n                        \n                            \n                                Value : PUT\n                            \n                        \n                        \n                            \n                                 DELETE\n                            \n                        \n                        \n                            \n                                Value : DELETE\n                            \n                        \n                        \n                            \n                                 PATCH\n                            \n                        \n                        \n                            \n                                Value : PATCH\n                            \n                        \n                        \n                            \n                                 ALL\n                            \n                        \n                        \n                            \n                                Value : ALL\n                            \n                        \n                        \n                            \n                                 OPTIONS\n                            \n                        \n                        \n                            \n                                Value : OPTIONS\n                            \n                        \n                        \n                            \n                                 HEAD\n                            \n                        \n                        \n                            \n                                Value : HEAD\n                            \n                        \n            \n        \n\n    src/modules/mails/mails.enum.ts\n    \n        \n            \n                \n                    \n                        \n                        MailsSubject\n                    \n                \n                        \n                            \n                                 WELCOME\n                            \n                        \n                        \n                            \n                                Value : Welcome To PetroMiles\n                            \n                        \n            \n        \n\n    src/modules/management/platform-interest/platform-interest.enum.ts\n    \n        \n            \n                \n                    \n                        \n                        PlatformInterest\n                    \n                \n                        \n                            \n                                 PREMIUM\n                            \n                        \n                        \n                            \n                                Value : PREMIUM\n                            \n                        \n                        \n                            \n                                 GOLD_EXTRA\n                            \n                        \n                        \n                            \n                                Value : GOLD_EXTRA\n                            \n                        \n                        \n                            \n                                 VERIFICATION\n                            \n                        \n                        \n                            \n                                Value : VERIFICATION\n                            \n                        \n                        \n                            \n                                 BUY\n                            \n                        \n                        \n                            \n                                Value : BUY\n                            \n                        \n                        \n                            \n                                 WITHDRAWAL\n                            \n                        \n                        \n                            \n                                Value : WITHDRAWAL\n                            \n                        \n            \n        \n\n    src/modules/management/role/role.enum.ts\n    \n        \n            \n                \n                    \n                        \n                        Role\n                    \n                \n                        \n                            \n                                 CLIENT\n                            \n                        \n                        \n                            \n                                Value : CLIENT\n                            \n                        \n                        \n                            \n                                 ADMINISTRATOR\n                            \n                        \n                        \n                            \n                                Value : ADMINISTRATOR\n                            \n                        \n            \n        \n\n    src/modules/management/state/state.enum.ts\n    \n        \n            \n                \n                    \n                        \n                        StateDescription\n                    \n                \n                        \n                            \n                                 NEWLY_CREATED_ACCOUNT\n                            \n                        \n                        \n                            \n                                Value : NEWLY_CREATED_ACCOUNT\n                            \n                        \n                        \n                            \n                                 VERIFICATION_TRANSACTION_CREATION\n                            \n                        \n                        \n                            \n                                Value : VERIFICATION_TRANSACTION_CREATION\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        StateName\n                    \n                \n                        \n                            \n                                 VERIFYING\n                            \n                        \n                        \n                            \n                                Value : VERIFYING\n                            \n                        \n                        \n                            \n                                 ACTIVE\n                            \n                        \n                        \n                            \n                                Value : ACTIVE\n                            \n                        \n                        \n                            \n                                 BLOCKED\n                            \n                        \n                        \n                            \n                                Value : BLOCKED\n                            \n                        \n                        \n                            \n                                 CANCELLED\n                            \n                        \n                        \n                            \n                                Value : CANCELLED\n                            \n                        \n                        \n                            \n                                 VALID\n                            \n                        \n                        \n                            \n                                Value : VALID\n                            \n                        \n                        \n                            \n                                 INVALID\n                            \n                        \n                        \n                            \n                                Value : INVALID\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        StateType\n                    \n                \n                        \n                            \n                                 USER\n                            \n                        \n                        \n                            \n                                Value : USER\n                            \n                        \n                        \n                            \n                                 TRANSACTION\n                            \n                        \n                        \n                            \n                                Value : TRANSACTION\n                            \n                        \n                        \n                            \n                                 BANK_ACCOUNT\n                            \n                        \n                        \n                            \n                                Value : BANK_ACCOUNT\n                            \n                        \n            \n        \n\n    src/modules/management/third-party-interest/third-party-interest.enum.ts\n    \n        \n            \n                \n                    \n                        \n                        ThirdPartyInterest\n                    \n                \n                        \n                            \n                                 STRIPE\n                            \n                        \n                        \n                            \n                                Value : STRIPE\n                            \n                        \n            \n        \n\n    src/modules/transaction/transaction/transaction.enum.ts\n    \n        \n            \n                \n                    \n                        \n                        TransactionType\n                    \n                \n                        \n                            \n                                 SUSCRIPTION_PAYMENT\n                            \n                        \n                        \n                            \n                                Value : SUSCRIPTION_PAYMENT\n                            \n                        \n                        \n                            \n                                 DEPOSIT\n                            \n                        \n                        \n                            \n                                Value : DEPOSIT\n                            \n                        \n                        \n                            \n                                 WITHDRAW\n                            \n                        \n                        \n                            \n                                Value : WITHDRAW\n                            \n                        \n                        \n                            \n                                 BANK_ACCOUNT_VALIDATION\n                            \n                        \n                        \n                            \n                                Value : BANK_ACCOUNT_VALIDATION\n                            \n                        \n            \n        \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/functions.html":{"url":"miscellaneous/functions.html","title":"miscellaneous-functions - functions","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n  Miscellaneous\n  Functions\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            bootstrap   (src/.../main.ts)\n                        \n                        \n                            createDir   (src/.../winston-config.ts)\n                        \n                        \n                            createOptions   (src/.../winston-config.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    src/main.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        \n                            bootstrap\n                        \n                        \n                    \n                \n            \n            \n                \nbootstrap()\n                \n            \n\n\n\n\n        \n    \n    src/logger/winston/winston-config.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        \n                            createDir\n                        \n                        \n                    \n                \n            \n            \n                \ncreateDir(dir)\n                \n            \n\n\n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                \n                            \n                            \n                                \n                                    dir\n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            createOptions\n                        \n                        \n                    \n                \n            \n            \n                \ncreateOptions(params)\n                \n            \n\n\n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                \n                            \n                            \n                                \n                                    params\n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     WinstonModuleOptions\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"index.html":{"url":"index.html","title":"getting-started - index","body":"\n                   \n\n\n  \n\n\n  A progressive Node.js framework for building efficient and scalable server-side applications, heavily inspired by Angular.\n    \n\n\n\n\n\n\n\n\n\n  \n  \n\n  \n\nDescription\nNest framework TypeScript starter repository.\nInstallation\n$ npm installRunning the app\n# development\n$ npm run start\n\n# watch mode\n$ npm run start:dev\n\n# production mode\n$ npm run start:prodTest\n# unit tests\n$ npm run test\n\n# e2e tests\n$ npm run test:e2e\n\n# test coverage\n$ npm run test:covSupport\nNest is an MIT-licensed open source project. It can grow thanks to the sponsors and support by the amazing backers. If you'd like to join them, please read more here.\nStay in touch\n\nAuthor - Kamil Myśliwiec\nWebsite - https://nestjs.com\nTwitter - @nestframework\n\nLicense\n  Nest is MIT licensed.\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules.html":{"url":"modules.html","title":"modules - modules","body":"\n                   \n\n\n\n\n    Modules\n\n\n    \n            \n                \n                    \n                        AppModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        AuthModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        BankAccountModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        BankSeederModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        CountrySeederModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        DatabaseModule\n                    \n                    \n                                \n                                    No graph available.\n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        ExampleModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        LanguageModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        LanguageSeederModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        MailsModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        ManagementModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        PlatformInterestSeederModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        PointsConversionSeederModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        RoleSeederModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        SeederModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        StatesSeederModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        SuscriptionModule\n                    \n                    \n                                \n                                    No graph available.\n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        SuscriptionSeederModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        ThirdPartyInterestSeederModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        TransactionModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        UserModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n    \n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"overview.html":{"url":"overview.html","title":"overview - overview","body":"\n                   \n\n\n\n    Overview\n\n  \n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_AppModule\n\n\n\ncluster_AppModule_imports\n\n\n\ncluster_AuthModule\n\n\n\ncluster_AuthModule_providers\n\n\n\ncluster_BankAccountModule\n\n\n\ncluster_BankAccountModule_exports\n\n\n\ncluster_BankAccountModule_providers\n\n\n\ncluster_BankSeederModule\n\n\n\ncluster_BankSeederModule_exports\n\n\n\ncluster_BankSeederModule_providers\n\n\n\ncluster_CountrySeederModule\n\n\n\ncluster_CountrySeederModule_exports\n\n\n\ncluster_CountrySeederModule_providers\n\n\n\ncluster_LanguageModule\n\n\n\ncluster_LanguageModule_providers\n\n\n\ncluster_LanguageSeederModule\n\n\n\ncluster_LanguageSeederModule_exports\n\n\n\ncluster_LanguageSeederModule_providers\n\n\n\ncluster_MailsModule\n\n\n\ncluster_MailsModule_exports\n\n\n\ncluster_MailsModule_providers\n\n\n\ncluster_ManagementModule\n\n\n\ncluster_ManagementModule_exports\n\n\n\ncluster_ManagementModule_providers\n\n\n\ncluster_PlatformInterestSeederModule\n\n\n\ncluster_PlatformInterestSeederModule_exports\n\n\n\ncluster_PlatformInterestSeederModule_providers\n\n\n\ncluster_PointsConversionSeederModule\n\n\n\ncluster_PointsConversionSeederModule_exports\n\n\n\ncluster_PointsConversionSeederModule_providers\n\n\n\ncluster_RoleSeederModule\n\n\n\ncluster_RoleSeederModule_exports\n\n\n\ncluster_RoleSeederModule_providers\n\n\n\ncluster_SeederModule\n\n\n\ncluster_SeederModule_imports\n\n\n\ncluster_SeederModule_providers\n\n\n\ncluster_StatesSeederModule\n\n\n\ncluster_StatesSeederModule_exports\n\n\n\ncluster_StatesSeederModule_providers\n\n\n\ncluster_SuscriptionSeederModule\n\n\n\ncluster_SuscriptionSeederModule_exports\n\n\n\ncluster_SuscriptionSeederModule_providers\n\n\n\ncluster_ThirdPartyInterestSeederModule\n\n\n\ncluster_ThirdPartyInterestSeederModule_exports\n\n\n\ncluster_ThirdPartyInterestSeederModule_providers\n\n\n\ncluster_TransactionModule\n\n\n\ncluster_TransactionModule_exports\n\n\n\ncluster_TransactionModule_providers\n\n\n\ncluster_UserModule\n\n\n\ncluster_UserModule_exports\n\n\n\ncluster_UserModule_providers\n\n\n\n\nAuthModule\n\nAuthModule\n\n\n\nExampleModule\n\nExampleModule\n\nExampleModule -->\n\nAuthModule->ExampleModule\n\n\n\n\n\nAppModule\n\nAppModule\n\nAppModule -->\n\nAuthModule->AppModule\n\n\n\n\n\nBankAccountModule\n\nBankAccountModule\n\nAppModule -->\n\nBankAccountModule->AppModule\n\n\n\n\n\nBankAccountService \n\nBankAccountService \n\nBankAccountService  -->\n\nBankAccountModule->BankAccountService \n\n\n\n\n\nClientBankAccountService \n\nClientBankAccountService \n\nClientBankAccountService  -->\n\nBankAccountModule->ClientBankAccountService \n\n\n\n\n\nStateBankAccountService \n\nStateBankAccountService \n\nStateBankAccountService  -->\n\nBankAccountModule->StateBankAccountService \n\n\n\n\n\nDatabaseModule\n\nDatabaseModule\n\nAppModule -->\n\nDatabaseModule->AppModule\n\n\n\nAppModule -->\n\nExampleModule->AppModule\n\n\n\n\n\nLanguageModule\n\nLanguageModule\n\nAppModule -->\n\nLanguageModule->AppModule\n\n\n\n\n\nMailsModule\n\nMailsModule\n\nAuthModule -->\n\nMailsModule->AuthModule\n\n\n\nAppModule -->\n\nMailsModule->AppModule\n\n\n\n\n\nMailsService \n\nMailsService \n\nMailsService  -->\n\nMailsModule->MailsService \n\n\n\n\n\nManagementModule\n\nManagementModule\n\nAuthModule -->\n\nManagementModule->AuthModule\n\n\n\nBankAccountModule -->\n\nManagementModule->BankAccountModule\n\n\n\n\n\nTransactionModule\n\nTransactionModule\n\nTransactionModule -->\n\nManagementModule->TransactionModule\n\n\n\n\n\nUserModule\n\nUserModule\n\nUserModule -->\n\nManagementModule->UserModule\n\n\n\nAppModule -->\n\nManagementModule->AppModule\n\n\n\n\n\nPlatformInterestService \n\nPlatformInterestService \n\nPlatformInterestService  -->\n\nManagementModule->PlatformInterestService \n\n\n\n\n\nPointsConversionService \n\nPointsConversionService \n\nPointsConversionService  -->\n\nManagementModule->PointsConversionService \n\n\n\n\n\nRoleService \n\nRoleService \n\nRoleService  -->\n\nManagementModule->RoleService \n\n\n\n\n\nStateService \n\nStateService \n\nStateService  -->\n\nManagementModule->StateService \n\n\n\n\n\nThirdPartyInterestService \n\nThirdPartyInterestService \n\nThirdPartyInterestService  -->\n\nManagementModule->ThirdPartyInterestService \n\n\n\n\n\nSuscriptionModule\n\nSuscriptionModule\n\nAppModule -->\n\nSuscriptionModule->AppModule\n\n\n\nBankAccountModule -->\n\nTransactionModule->BankAccountModule\n\n\n\nAppModule -->\n\nTransactionModule->AppModule\n\n\n\n\n\nStateTransactionService \n\nStateTransactionService \n\nStateTransactionService  -->\n\nTransactionModule->StateTransactionService \n\n\n\n\n\nTransactionInterestService \n\nTransactionInterestService \n\nTransactionInterestService  -->\n\nTransactionModule->TransactionInterestService \n\n\n\n\n\nTransactionService \n\nTransactionService \n\nTransactionService  -->\n\nTransactionModule->TransactionService \n\n\n\nAuthModule -->\n\nUserModule->AuthModule\n\n\n\nBankAccountModule -->\n\nUserModule->BankAccountModule\n\n\n\nExampleModule -->\n\nUserModule->ExampleModule\n\n\n\nAppModule -->\n\nUserModule->AppModule\n\n\n\n\n\nStateUserService \n\nStateUserService \n\nStateUserService  -->\n\nUserModule->StateUserService \n\n\n\n\n\nUserAdministratorService \n\nUserAdministratorService \n\nUserAdministratorService  -->\n\nUserModule->UserAdministratorService \n\n\n\n\n\nUserClientService \n\nUserClientService \n\nUserClientService  -->\n\nUserModule->UserClientService \n\n\n\n\n\nUserDetailsService \n\nUserDetailsService \n\nUserDetailsService  -->\n\nUserModule->UserDetailsService \n\n\n\n\n\nUserRoleService \n\nUserRoleService \n\nUserRoleService  -->\n\nUserModule->UserRoleService \n\n\n\n\n\nUserService \n\nUserService \n\nUserService  -->\n\nUserModule->UserService \n\n\n\n\n\nAuthService\n\nAuthService\n\nAuthModule -->\n\nAuthService->AuthModule\n\n\n\n\n\nBankAccountService\n\nBankAccountService\n\nBankAccountModule -->\n\nBankAccountService->BankAccountModule\n\n\n\n\n\nClientBankAccountService\n\nClientBankAccountService\n\nBankAccountModule -->\n\nClientBankAccountService->BankAccountModule\n\n\n\n\n\nStateBankAccountService\n\nStateBankAccountService\n\nBankAccountModule -->\n\nStateBankAccountService->BankAccountModule\n\n\n\n\n\nStateService\n\nStateService\n\nBankAccountModule -->\n\nStateService->BankAccountModule\n\n\n\nManagementModule -->\n\nStateService->ManagementModule\n\n\n\n\n\nBankSeederService \n\nBankSeederService \n\n\n\nBankSeederModule\n\nBankSeederModule\n\nBankSeederService  -->\n\nBankSeederModule->BankSeederService \n\n\n\n\n\nSeederModule\n\nSeederModule\n\nSeederModule -->\n\nBankSeederModule->SeederModule\n\n\n\n\n\nBankSeederService\n\nBankSeederService\n\nBankSeederModule -->\n\nBankSeederService->BankSeederModule\n\n\n\n\n\nCountrySeederService \n\nCountrySeederService \n\n\n\nCountrySeederModule\n\nCountrySeederModule\n\nCountrySeederService  -->\n\nCountrySeederModule->CountrySeederService \n\n\n\nSeederModule -->\n\nCountrySeederModule->SeederModule\n\n\n\n\n\nCountrySeederService\n\nCountrySeederService\n\nCountrySeederModule -->\n\nCountrySeederService->CountrySeederModule\n\n\n\n\n\nLanguageService\n\nLanguageService\n\nLanguageModule -->\n\nLanguageService->LanguageModule\n\n\n\n\n\nPoeditorService\n\nPoeditorService\n\nLanguageModule -->\n\nPoeditorService->LanguageModule\n\n\n\n\n\nLanguageSeederService \n\nLanguageSeederService \n\n\n\nLanguageSeederModule\n\nLanguageSeederModule\n\nLanguageSeederService  -->\n\nLanguageSeederModule->LanguageSeederService \n\n\n\nSeederModule -->\n\nLanguageSeederModule->SeederModule\n\n\n\n\n\nLanguageSeederService\n\nLanguageSeederService\n\nLanguageSeederModule -->\n\nLanguageSeederService->LanguageSeederModule\n\n\n\n\n\nMailsService\n\nMailsService\n\nMailsModule -->\n\nMailsService->MailsModule\n\n\n\n\n\nPlatformInterestService\n\nPlatformInterestService\n\nManagementModule -->\n\nPlatformInterestService->ManagementModule\n\n\n\n\n\nPointsConversionService\n\nPointsConversionService\n\nManagementModule -->\n\nPointsConversionService->ManagementModule\n\n\n\n\n\nRoleService\n\nRoleService\n\nManagementModule -->\n\nRoleService->ManagementModule\n\n\n\n\n\nThirdPartyInterestService\n\nThirdPartyInterestService\n\nManagementModule -->\n\nThirdPartyInterestService->ManagementModule\n\n\n\n\n\nPlatformInterestSeederService \n\nPlatformInterestSeederService \n\n\n\nPlatformInterestSeederModule\n\nPlatformInterestSeederModule\n\nPlatformInterestSeederService  -->\n\nPlatformInterestSeederModule->PlatformInterestSeederService \n\n\n\nSeederModule -->\n\nPlatformInterestSeederModule->SeederModule\n\n\n\n\n\nPlatformInterestSeederService\n\nPlatformInterestSeederService\n\nPlatformInterestSeederModule -->\n\nPlatformInterestSeederService->PlatformInterestSeederModule\n\n\n\n\n\nPointsConversionSeederService \n\nPointsConversionSeederService \n\n\n\nPointsConversionSeederModule\n\nPointsConversionSeederModule\n\nPointsConversionSeederService  -->\n\nPointsConversionSeederModule->PointsConversionSeederService \n\n\n\nSeederModule -->\n\nPointsConversionSeederModule->SeederModule\n\n\n\n\n\nPointsConversionSeederService\n\nPointsConversionSeederService\n\nPointsConversionSeederModule -->\n\nPointsConversionSeederService->PointsConversionSeederModule\n\n\n\n\n\nRolesSeederService \n\nRolesSeederService \n\n\n\nRoleSeederModule\n\nRoleSeederModule\n\nRolesSeederService  -->\n\nRoleSeederModule->RolesSeederService \n\n\n\nSeederModule -->\n\nRoleSeederModule->SeederModule\n\n\n\n\n\nRolesSeederService\n\nRolesSeederService\n\nRoleSeederModule -->\n\nRolesSeederService->RoleSeederModule\n\n\n\n\n\nStatesSeederModule\n\nStatesSeederModule\n\nSeederModule -->\n\nStatesSeederModule->SeederModule\n\n\n\n\n\nStateSeederService \n\nStateSeederService \n\nStateSeederService  -->\n\nStatesSeederModule->StateSeederService \n\n\n\n\n\nSuscriptionSeederModule\n\nSuscriptionSeederModule\n\nSeederModule -->\n\nSuscriptionSeederModule->SeederModule\n\n\n\n\n\nSuscriptionSeederService \n\nSuscriptionSeederService \n\nSuscriptionSeederService  -->\n\nSuscriptionSeederModule->SuscriptionSeederService \n\n\n\n\n\nThirdPartyInterestSeederModule\n\nThirdPartyInterestSeederModule\n\nSeederModule -->\n\nThirdPartyInterestSeederModule->SeederModule\n\n\n\n\n\nThirdPartyInterestSeederService \n\nThirdPartyInterestSeederService \n\nThirdPartyInterestSeederService  -->\n\nThirdPartyInterestSeederModule->ThirdPartyInterestSeederService \n\n\n\n\n\nSeeder\n\nSeeder\n\nSeederModule -->\n\nSeeder->SeederModule\n\n\n\n\n\nStateSeederService\n\nStateSeederService\n\nStatesSeederModule -->\n\nStateSeederService->StatesSeederModule\n\n\n\n\n\nSuscriptionSeederService\n\nSuscriptionSeederService\n\nSuscriptionSeederModule -->\n\nSuscriptionSeederService->SuscriptionSeederModule\n\n\n\n\n\nThirdPartyInterestSeederService\n\nThirdPartyInterestSeederService\n\nThirdPartyInterestSeederModule -->\n\nThirdPartyInterestSeederService->ThirdPartyInterestSeederModule\n\n\n\n\n\nStateTransactionService\n\nStateTransactionService\n\nTransactionModule -->\n\nStateTransactionService->TransactionModule\n\n\n\n\n\nTransactionInterestService\n\nTransactionInterestService\n\nTransactionModule -->\n\nTransactionInterestService->TransactionModule\n\n\n\n\n\nTransactionService\n\nTransactionService\n\nTransactionModule -->\n\nTransactionService->TransactionModule\n\n\n\n\n\nStateUserService\n\nStateUserService\n\nUserModule -->\n\nStateUserService->UserModule\n\n\n\n\n\nUserAdministratorService\n\nUserAdministratorService\n\nUserModule -->\n\nUserAdministratorService->UserModule\n\n\n\n\n\nUserClientService\n\nUserClientService\n\nUserModule -->\n\nUserClientService->UserModule\n\n\n\n\n\nUserDetailsService\n\nUserDetailsService\n\nUserModule -->\n\nUserDetailsService->UserModule\n\n\n\n\n\nUserRoleService\n\nUserRoleService\n\nUserModule -->\n\nUserRoleService->UserModule\n\n\n\n\n\nUserService\n\nUserService\n\nUserModule -->\n\nUserService->UserModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n  \n\n    \n        \n            \n                \n                    \n                    \n                        21 Modules\n                    \n                \n            \n        \n        \n            \n                \n                    \n                    5 Controllers\n                \n            \n        \n        \n            \n                \n                    \n                    33 Injectables\n                \n            \n        \n        \n            \n                \n                    \n                    25 Classes\n                \n            \n        \n        \n            \n                \n                    \n                    1 Guard\n                \n            \n        \n        \n            \n                \n                    \n                    2 Interfaces\n                \n            \n        \n    \n\n\n \n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/variables.html":{"url":"miscellaneous/variables.html","title":"miscellaneous-variables - variables","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n  Miscellaneous\n  Variables\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            BANK   (src/.../bank.data.ts)\n                        \n                        \n                            commonFormat   (src/.../format.ts)\n                        \n                        \n                            consoleFormat   (src/.../format.ts)\n                        \n                        \n                            COUNTRIES   (src/.../country.data.ts)\n                        \n                        \n                            dataBaseProvider   (src/.../database.service.ts)\n                        \n                        \n                            dbConfig   (src/.../typeorm.config.ts)\n                        \n                        \n                            fileFormat   (src/.../format.ts)\n                        \n                        \n                            GetUser   (src/.../get-user.decorator.ts)\n                        \n                        \n                            LANGUAGES   (src/.../language.data.ts)\n                        \n                        \n                            PLATAFORM_INTERESTS   (src/.../platform_interest.data.ts)\n                        \n                        \n                            POINTS_CONVERSION   (src/.../points_conversion.data.ts)\n                        \n                        \n                            Roles   (src/.../roles.decorator.ts)\n                        \n                        \n                            ROLES   (src/.../role.data.ts)\n                        \n                        \n                            SendGridConfig   (src/.../sendGrid.config.ts)\n                        \n                        \n                            STATES   (src/.../state.data.ts)\n                        \n                        \n                            SUSCRIPTIONS   (src/.../suscription.data.ts)\n                        \n                        \n                            THIRD_PARTY_INTEREST   (src/.../third_party_interest.data.ts)\n                        \n                        \n                            typeOrmConfig   (src/.../typeorm.config.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    src/database/seeders/bank/bank.data.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            BANK\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     []\n\n                        \n                    \n                    \n                        \n                            Default value : [\n  {\n    idBank: 1,\n    name: 'Bank of America',\n  },\n  {\n    idBank: 2,\n    name: 'Ally Bank',\n  },\n  {\n    idBank: 3,\n    name: 'BB&T BANK',\n  },\n  {\n    idBank: 4,\n    name: 'BBVA Compass',\n  },\n  {\n    idBank: 5,\n    name: 'Capital One Bank',\n  },\n  {\n    idBank: 6,\n    name: 'Citibank',\n  },\n  {\n    idBank: 7,\n    name: 'Citizens Bank',\n  },\n  {\n    idBank: 8,\n    name: 'Fifth Third Bank',\n  },\n  {\n    idBank: 9,\n    name: 'Wells Fargo Bank',\n  },\n  {\n    idBank: 10,\n    name: 'US Bank',\n  },\n  {\n    idBank: 11,\n    name: 'USAA',\n  },\n  {\n    idBank: 12,\n    name: 'HSBC Bank USA',\n  },\n  {\n    idBank: 13,\n    name: 'J.P Morgan Chase Bank',\n  },\n  {\n    idBank: 14,\n    name: 'KeyBank',\n  },\n  {\n    idBank: 15,\n    name: 'Kinetic Credit Union',\n  },\n  {\n    idBank: 16,\n    name: 'Navy Federal Credit Union',\n  },\n  {\n    idBank: 17,\n    name: 'PNC Bank',\n  },\n  {\n    idBank: 18,\n    name: 'Regions Bank',\n  },\n  {\n    idBank: 19,\n    name: 'Sun Trust Bank',\n  },\n  {\n    idBank: 20,\n    name: 'TD Bank',\n  },\n]\n                        \n                    \n\n\n            \n        \n\n    src/logger/winston/format.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            commonFormat\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : (winston.format.simple(), winston.format.timestamp())\n                        \n                    \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            consoleFormat\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : winston.format.combine(\n  commonFormat,\n  winston.format.splat(),\n  winston.format.colorize(),\n  winston.format.printf(msg => {\n    return `[${new Date(msg.timestamp).toLocaleString()}] [${msg.level}] ${\n      msg.message\n    }`;\n  }),\n)\n                        \n                    \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            fileFormat\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : winston.format.combine(\n  commonFormat,\n  winston.format.splat(),\n  winston.format.printf(msg => {\n    return `[${new Date(\n      msg.timestamp,\n    ).toLocaleString()}] [${msg.level.toUpperCase()}] ${msg.message}`;\n  }),\n)\n                        \n                    \n\n\n            \n        \n\n    src/database/seeders/country/country.data.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            COUNTRIES\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     []\n\n                        \n                    \n                    \n                        \n                            Default value : [\n  {\n    idCountry: 1,\n    name: 'UNITED STATES',\n  },\n  {\n    idCountry: 2,\n    name: 'VENEZUELA',\n  },\n]\n                        \n                    \n\n\n            \n        \n\n    src/database/database.service.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            dataBaseProvider\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : TypeOrmModule.forRootAsync({\n  imports: [ConfigModule],\n  inject: [ConfigService],\n  async useFactory(configService: ConfigService) {\n    const db = configService.get('database');\n    return {\n      type: db.type,\n      host: process.env.DATABASE_HOST || db.host,\n      port: process.env.DATABASE_PORT || db.port,\n      username: process.env.DATABASE_USER || db.user,\n      password: process.env.DATABASE_PASSWORD || db.password,\n      database: process.env.DATABASE_NAME || db.database,\n      entities: [__dirname + '/../**/*.entity.{js,ts}'],\n      migrations: [__dirname + '/migrations/*{.ts,.js'],\n      synchronize: process.env.DATABASE_SYNCHRONIZE || db.synchronize,\n    };\n  },\n})\n                        \n                    \n\n\n            \n        \n\n    src/database/seeders/typeorm.config.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            dbConfig\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : config.get('db')\n                        \n                    \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            typeOrmConfig\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     TypeOrmModuleOptions\n\n                        \n                    \n                    \n                        \n                            Default value : {\n  type: dbConfig.type,\n  host: dbConfig.host,\n  port: dbConfig.port,\n  username: dbConfig.username,\n  password: dbConfig.password,\n  database: dbConfig.database,\n  entities: [__dirname + '/../../**/*.entity.{js,ts}'],\n  synchronize: dbConfig.synchronize, // solo true en development\n}\n                        \n                    \n\n\n            \n        \n\n    src/modules/auth/decorators/get-user.decorator.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            GetUser\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : createParamDecorator((data, ctx: ExecutionContext) => {\n  const req = ctx.switchToHttp().getRequest();\n  return req.user;\n})\n                        \n                    \n\n\n            \n        \n\n    src/database/seeders/language/language.data.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            LANGUAGES\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     []\n\n                        \n                    \n                    \n                        \n                            Default value : [\n  {\n    idLanguage: 1,\n    name: 'en',\n  },\n  {\n    idLanguage: 2,\n    name: 'es',\n  },\n]\n                        \n                    \n\n\n            \n        \n\n    src/database/seeders/platform_interest/platform_interest.data.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            PLATAFORM_INTERESTS\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     []\n\n                        \n                    \n                    \n                        \n                            Default value : [\n  {\n    idPlatformInterest: 1,\n    name: 'Premium Extra',\n    percentage: 20,\n  },\n  {\n    idPlatformInterest: 2,\n    name: 'Gold Extra',\n    percentage: 20,\n    amount: 5000,\n  },\n  {\n    idPlatformInterest: 3,\n    name: 'Verification Interest',\n    amount: 250,\n  },\n\n  {\n    idPlatformInterest: 4,\n    name: 'Buy Interest',\n    percentage: 1.5,\n  },\n\n  {\n    idPlatformInterest: 5,\n    name: 'Withdrawal Interest',\n    percentage: 5,\n  },\n]\n                        \n                    \n\n\n            \n        \n\n    src/database/seeders/points_conversion/points_conversion.data.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            POINTS_CONVERSION\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     []\n\n                        \n                    \n                    \n                        \n                            Default value : [\n  {\n    idPointsConvertion: 1,\n    onePointEqualsDollars: 0.002,\n  },\n]\n                        \n                    \n\n\n            \n        \n\n    src/modules/auth/decorators/roles.decorator.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            Roles\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : (...roles: string[]) => SetMetadata('roles', roles)\n                        \n                    \n\n\n            \n        \n\n    src/database/seeders/role/role.data.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            ROLES\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     []\n\n                        \n                    \n                    \n                        \n                            Default value : [\n  {\n    idRole: 1,\n    name: 'ADMINISTRATOR',\n  },\n  {\n    idRole: 2,\n    name: 'CLIENT',\n  },\n]\n                        \n                    \n\n\n            \n        \n\n    src/modules/mails/sendGrid.config.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            SendGridConfig\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : SendGridModule.forRootAsync({\n  imports: [ConfigModule],\n  inject: [ConfigService],\n  useFactory: async (cfg: ConfigService) => ({\n    apiKey: cfg.get('mails.sendgrid.apiKey'),\n  }),\n})\n                        \n                    \n\n\n            \n        \n\n    src/database/seeders/state/state.data.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            STATES\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     []\n\n                        \n                    \n                    \n                        \n                            Default value : [\n  {\n    idState: 1,\n    name: 'ACTIVE',\n    description: 'This state indicates that the object is ready to be used',\n  },\n\n  {\n    idState: 2,\n    name: 'VERIFYING',\n    description:\n      'This state indicates that the object is in the verification process',\n  },\n  {\n    idState: 3,\n    name: 'BLOCKED',\n    description: 'This state indicates that the object has been disabled',\n  },\n\n  {\n    idState: 4,\n    name: 'CANCELED',\n    description: 'This state indicates that the object cant be used',\n  },\n\n  {\n    idState: 5,\n    name: 'VALID',\n    description:\n      'This state indicates that the transaction has been made successful',\n  },\n  {\n    idState: 6,\n    name: 'INVALID',\n    description:\n      'This state indicates that the transaction has not been made successful',\n  },\n]\n                        \n                    \n\n\n            \n        \n\n    src/database/seeders/suscription/suscription.data.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            SUSCRIPTIONS\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     []\n\n                        \n                    \n                    \n                        \n                            Default value : [\n  {\n    idSuscription: 1,\n    name: 'BASIC',\n    cost: 0,\n    description: 'Suscription initial of every new client',\n  },\n\n  {\n    idSuscription: 2,\n    name: 'PREMIUM',\n    cost: 2500,\n    description: 'User must to ask for this suscription',\n  },\n  {\n    idSuscription: 3,\n    name: 'GOLD',\n    cost: 0,\n    upgraded_amount: 15000,\n    description:\n      'This suscription is active when the user has spend an amount greater or equal to upgraded_amount',\n  },\n]\n                        \n                    \n\n\n            \n        \n\n    src/database/seeders/third_party_interest/third_party_interest.data.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            THIRD_PARTY_INTEREST\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     []\n\n                        \n                    \n                    \n                        \n                            Default value : [\n  {\n    idThirdPartyInterest: 1,\n    paymentProvider: 'STRIPE',\n    name: 'Transaction Interest',\n    amountDollarCents: 75,\n  },\n]\n                        \n                    \n\n\n            \n        \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"}}
}
